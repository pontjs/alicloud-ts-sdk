{
  "apis": {
    "AttachInstances": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/AttachInstances\n添加已有ECS实例到ACK集群。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"list\\\": [\\n    {\\n      \\\"code\\\": \\\"200\\\",\\n      \\\"instanceId\\\": \\\"i-2ze0lgm3y6iylcbt****\\\",\\n      \\\"message\\\": \\\"successful\\\"\\n    }\\n  ],\\n  \\\"task_id\\\": \\\"T-5a544aff80282e39ea000039\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<AttachInstancesResponse>\\n    <list>\\n        <code>200</code>\\n        <instanceId>i-2ze0lgm3y6iylcbt****</instanceId>\\n        <message>successful</message>\\n    </list>\\n    <task_id>T-5a544aff80282e39ea000039</task_id>\\n</AttachInstancesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "添加已有ECS实例到ACK集群。",
        "title": "添加已有实例到集群"
      },
      "method": "post",
      "name": "AttachInstances",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "properties": {
              "cpu_policy": {
                "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。\n\n默认值：`none`。\n\n> 指定`nodepool_id`后，该参数不支持。",
                "example": "none",
                "required": false,
                "title": "CPU亲和策略。",
                "type": "string"
              },
              "format_disk": {
                "description": "是否将容器数据和镜像存储在数据盘中。取值：\n\n- `true`：将容器数据和镜像存储在数据盘。\n\n- `false`：不将容器数据和镜像存储在数据盘。\n\n默认值：`false`。\n\n\n数据盘挂载规则：\n\n- 如果ECS已挂载数据盘，且最后一块数据盘的文件系统未初始化，系统会自动将该数据盘格式化为EXT4，用来存放内容/var/lib/docker、/var/lib/kubelet。\n- 如果ECS未挂载数据盘，则不会挂载新的数据盘。\n>当选择将数据存储至数据盘并且ECS已挂载数据盘，数据盘内原有数据将丢失，请注意备份数据。",
                "example": "false",
                "required": false,
                "title": "是否格式化数据盘。",
                "type": "boolean"
              },
              "image_id": {
                "description": "自定义镜像ID，如果不传则使用默认系统镜像。\n\n>- 实例系统盘镜像将被替换为该镜像。\n- 指定`nodepool_id`后，该参数不支持。\n",
                "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                "required": false,
                "title": "自定义镜像ID。",
                "type": "string"
              },
              "instances": {
                "description": "待添加实例列表。",
                "items": {
                  "description": "待添加的实例ID。",
                  "example": "i-2zed0sswuau6o89b****",
                  "required": false,
                  "type": "string"
                },
                "required": true,
                "title": "实例列表。",
                "type": "array"
              },
              "is_edge_worker": {
                "description": "是否为边缘节点，即ENS节点。取值：\n\n- `true`：表示添加的节点是边缘节点。\n\n- `false`：表示添加的节点是不是边缘节点。\n\n默认值：`false`。\n\n> 如果是边缘节点，取值必须是`true`，用于标识该节点类型为ENS节点。",
                "example": "false",
                "required": false,
                "title": "是否为边缘节点。",
                "type": "boolean"
              },
              "keep_instance_name": {
                "description": "是否保留原实例名称。取值：\n\n- `true`：保留实例名称。\n\n- `false`：不保留实例名称。\n\n默认值：`false`。",
                "example": "false",
                "required": false,
                "title": "是否保留实例名称。",
                "type": "boolean"
              },
              "key_pair": {
                "description": "待添加实例的密钥对名称，和`login_password`二选一。\n\n> 指定`nodepool_id`后，该参数不支持。",
                "example": "security-key",
                "required": false,
                "title": "key_pair名称，与login_password二选一",
                "type": "string"
              },
              "nodepool_id": {
                "description": "节点池ID。如果不指定，则将节点添加到默认节点池中。",
                "example": "np615c0e0966124216a0412e10afe0****",
                "required": false,
                "title": "节点池ID，欲将节点添加到哪个节点池中。。",
                "type": "string"
              },
              "password": {
                "description": "待添加实例的SSH登录密码，和`key_pair`二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号），不支持反斜线（\\）和半角双引号（\"）两个符号。\n\n出于安全性考虑，密码传输过程中都是经过加密处理的。",
                "example": "Hello1234",
                "required": false,
                "title": "password，与key_pair二选一。",
                "type": "string"
              },
              "rds_instances": {
                "description": "RDS实例列表。\n",
                "items": {
                  "description": "RDS实例ID。\n\n> 指定`nodepool_id`后，该参数不支持。",
                  "example": "rm-67yawhau****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "RDS实例列表。",
                "type": "array"
              },
              "runtime": {
                "$ref": "#/definitions/runtime",
                "description": "容器运行时。\n> 指定`nodepool_id`后，该参数不支持。",
                "isDefsType": true,
                "required": false,
                "typeName": "runtime"
              },
              "tags": {
                "description": "节点标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以`aliyun`、`acs:`、`https://`或`http://`开头。详情请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。\n> 指定`nodepool_id`后，该参数不支持。",
                "items": {
                  "$ref": "#/definitions/tag",
                  "description": "节点标签。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "tag"
                },
                "required": false,
                "title": "节点标签。",
                "type": "array"
              },
              "user_data": {
                "description": "节点自定义数据。更多详情，请参见[生成实例自定义数据](https://help.aliyun.com/document_detail/49121.html)。\n\n> 指定`nodepool_id`后，该参数不支持。",
                "example": "IyEvdXNyL2Jpbi9iYXNoCmVjaG8gIkhlbGxvIEFDSyEi",
                "required": false,
                "title": "节点自定义数据。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/attach",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "list": {
                "description": "节点添加信息列表。",
                "items": {
                  "description": "节点添加结果详情。",
                  "properties": {
                    "code": {
                      "description": "节点添加结果状态码。",
                      "example": "200",
                      "title": "状态码。",
                      "type": "string"
                    },
                    "instanceId": {
                      "description": "实例ID。",
                      "example": "i-2ze0lgm3y6iylcbt****",
                      "title": "实例ID。",
                      "type": "string"
                    },
                    "message": {
                      "description": "节点添加结果描述信息。",
                      "example": "successful",
                      "title": "添加结果描述。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "节点信息列表。",
                "type": "array"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5a544aff80282e39ea000039",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "返回体数据。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "添加已有ECS实例到ACK集群。",
      "title": "添加已有实例到集群"
    },
    "AttachInstancesToNodePool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/AttachInstancesToNodePool\n添加已有节点到节点池。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"request_id\\\": \\\"D7631D83-6E98-1949-B665-766A62xxxxxx\\\",\\n  \\\"task_id\\\": \\\"T-5a54309c80282e39ea00002f\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "添加已有节点到节点池。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "添加已有节点到节点池"
      },
      "method": "post",
      "name": "AttachInstancesToNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np31da1b38983f4511b490fc62108a****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "format_disk": {
                "description": "是否将容器数据和镜像存储在数据盘中。取值：\n\n- `true`：将容器数据和镜像存储在数据盘。\n\n- `false`：不将容器数据和镜像存储在数据盘。\n\n默认值：`false`。\n\n\n数据盘挂载规则：\n\n- 如果ECS已挂载数据盘，且最后一块数据盘的文件系统未初始化，系统会自动将该数据盘格式化为EXT4，用来存放内容/var/lib/docker、/var/lib/kubelet。\n- 如果ECS未挂载数据盘，则不会挂载新的数据盘。\n>当选择将数据存储至数据盘并且ECS已挂载数据盘，数据盘内原有数据将丢失，请注意备份数据。",
                "example": "false",
                "required": false,
                "type": "boolean"
              },
              "instances": {
                "description": "待添加的实例ID列表。",
                "items": {
                  "description": "待添加的实例ID。",
                  "example": "i-2zed0sswuau6o89b****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "type": "array"
              },
              "keep_instance_name": {
                "description": "是否保留原实例名称。取值：\n\n- `true`：保留实例名称。\n\n- `false`：不保留实例名称。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "type": "boolean"
              },
              "password": {
                "description": "待添加实例的SSH登录密码。",
                "example": "Hello1234",
                "required": false,
                "type": "string"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}/attach",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体。",
            "properties": {
              "request_id": {
                "description": "请求ID。",
                "example": "D7631D83-6E98-1949-B665-766A62xxxxxx",
                "title": "Id of the request",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5a54309c80282e39ea00002f",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "添加已有节点到节点池。",
      "title": "添加已有节点到节点池"
    },
    "CancelClusterUpgrade": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CancelClusterUpgrade\n取消处于升级状态的ACK集群。",
      "ext": {
        "errorCodes": {},
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "取消处于升级状态的ACK集群。",
        "title": "取消集群升级"
      },
      "method": "post",
      "name": "CancelClusterUpgrade",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}/upgrade/cancel",
      "responses": {
        "200": {}
      },
      "summary": "取消处于升级状态的ACK集群。",
      "title": "取消集群升级"
    },
    "CancelComponentUpgrade": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CancelComponentUpgrade\n取消集群组件升级。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "取消集群组件升级。",
        "title": "取消升级集群Addons"
      },
      "method": "post",
      "name": "CancelComponentUpgrade",
      "parameters": [
        {
          "in": "path",
          "name": "clusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "componentId",
          "required": true,
          "schema": {
            "description": "组件ID。",
            "example": "metric-server",
            "required": true,
            "title": "组件ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{clusterId}/components/{componentId}/cancel",
      "responses": {
        "200": {},
        "5XX": {}
      },
      "summary": "取消集群组件升级。",
      "title": "取消升级集群Addons"
    },
    "CancelTask": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CancelTask\n取消集群任务执行。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "取消集群任务执行。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "取消任务"
      },
      "method": "post",
      "name": "CancelTask",
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "description": "任务ID。",
            "example": "T-62ccd14aacb8db06ca00****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/tasks/{task_id}/cancel",
      "responses": {
        "202": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "requestId": {
                "description": "Id of the request",
                "title": "Id of the request",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "取消集群任务执行。",
      "title": "取消任务"
    },
    "CancelWorkflow": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CancelWorkflow\n调用CancelWorkflow取消正在运行中的工作流。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用CancelWorkflow取消正在运行中的工作流。",
        "title": "取消正在运行中的工作流"
      },
      "method": "put",
      "name": "CancelWorkflow",
      "parameters": [
        {
          "in": "path",
          "name": "workflowName",
          "required": true,
          "schema": {
            "description": "工作流名称。",
            "docRequired": true,
            "example": "mapping-gpu-mhhgh",
            "required": true,
            "title": "工作流名称。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "action": {
                "description": "执行的操作，目前只支持cancel。",
                "example": "cancel",
                "required": true,
                "title": "执行的操作，目前只支持cancel。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数。",
            "type": "object"
          }
        }
      ],
      "path": "/gs/workflow/{workflowName}",
      "responses": {
        "200": {}
      },
      "summary": "调用CancelWorkflow取消正在运行中的工作流。",
      "title": "取消正在运行中的工作流"
    },
    "CheckControlPlaneLogEnable": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CheckControlPlaneLogEnable\n调用CheckControlPlaneLogEnable查询ACK托管集群控制平面组件日志当前配置状态。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"log_project\\\": \\\"k8s-log-c5b5e80b0b64a4bf6939d2d8fbbc5****\\\",\\n  \\\"log_ttl\\\": \\\"30\\\",\\n  \\\"aliuid\\\": \\\"162981*****\\\",\\n  \\\"components\\\": [\\n    \\\"[\\\\\\\"apiserver\\\\\\\", \\\\\\\"ccm\\\\\\\", \\\\\\\"scheduler\\\\\\\",  \\\\\\\"kcm\\\\\\\", \\\\\\\"controlplane-events\\\\\\\"]\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CheckControlPlaneLogEnableResponse>\\n    <log_project>k8s-log-c5b5e80b0b64a4bf6939d2d8fbbc5****</log_project>\\n    <log_ttl>30</log_ttl>\\n    <aliuid>162981*****</aliuid>\\n    <components>[\\\"apiserver\\\", \\\"ccm\\\", \\\"scheduler\\\",  \\\"kcm\\\", \\\"controlplane-events\\\"]</components>\\n</CheckControlPlaneLogEnableResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用CheckControlPlaneLogEnable查询ACK托管集群控制平面组件日志当前配置状态。",
        "systemTags": {},
        "title": "查询ACK托管集群控制平面组件日志当前配置状态"
      },
      "method": "get",
      "name": "CheckControlPlaneLogEnable",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/controlplanelog",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "properties": {
              "aliuid": {
                "description": "阿里云账号ID。",
                "example": "162981*****",
                "type": "string"
              },
              "components": {
                "description": "当前开启控制平面日志的组件列表。",
                "items": {
                  "description": "当前开启控制平面日志的组件列表。\n\n默认采集`apiserver`、`ccm`、`scheduler`、`kcm`、`controlplane-events`组件的日志。",
                  "example": "[\"apiserver\", \"ccm\", \"scheduler\",  \"kcm\", \"controlplane-events\"]",
                  "type": "string"
                },
                "required": true,
                "type": "array"
              },
              "log_project": {
                "description": "控制平面组件日志对应存储的SLS Project名称。\n\n默认值：k8s-log-$集群ID。",
                "example": "k8s-log-c5b5e80b0b64a4bf6939d2d8fbbc5****",
                "required": false,
                "type": "string"
              },
              "log_ttl": {
                "description": "日志在SLS logstore里的数据保存时间。取值范围：1~3000，单位：天。\n\n默认值：30天。",
                "example": "30",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "调用CheckControlPlaneLogEnable查询ACK托管集群控制平面组件日志当前配置状态。",
      "title": "查询ACK托管集群控制平面组件日志当前配置状态"
    },
    "CreateAutoscalingConfig": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateAutoscalingConfig\n调用CreateAutoscalingConfig创建自动伸缩配置。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用CreateAutoscalingConfig创建自动伸缩配置。",
        "systemTags": {},
        "title": "创建弹性伸缩配置"
      },
      "method": "post",
      "name": "CreateAutoscalingConfig",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "cdde1f21ae22e483ebcb068a6eb7f****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体数据。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "cool_down_duration": {
                "description": "缩容触发时延，节点缩容时需要连续满足触发时延所设定的时间，才能进行缩容。单位：分钟。",
                "example": "10m",
                "required": false,
                "title": "静默时间，扩容出的节点，在静默时间过后，方可进入缩容判断",
                "type": "string"
              },
              "daemonset_eviction_for_nodes": {
                "description": "缩容时是否驱逐节点上的DaemonSet pods\n- `true`：驱逐。\n- `false`：不会驱逐。",
                "example": "false",
                "required": false,
                "title": "为true则在缩容时驱逐节点上的DaemonSet pods",
                "type": "boolean"
              },
              "expander": {
                "description": "节点池扩容顺序策略。取值：\n- `least-waste` ：默认策略。如果可扩容节点池有多个，从中选择一个资源浪费最少的节点池进行扩容。\n- `random`：随机策略。如果可扩容节点池有多个，从中任意选择一个节点池进行扩容。\n- `priority `：优先级策略。如果可扩容节点池有多个，会按照您自定义的伸缩组顺序，选择优先级高的节点池进行扩容。\n优先级的配置存储在kube-system命名空间下ConfigMap的`cluster-autoscaler-priority-expander`中。当自动伸缩进行扩容时，实时读取此配置，将可扩容的伸缩组ID与配置中伸缩组ID进行匹配，在匹配上的伸缩组中选取优先级最大值的伸缩组作为扩容对象。",
                "example": "least-waste",
                "required": false,
                "title": "节点池扩容顺序策略",
                "type": "string"
              },
              "gpu_utilization_threshold": {
                "description": "GPU缩容阈值，节点上Request的资源与总资源量的比值。",
                "example": "0.5",
                "required": false,
                "title": "GPU缩容阈值，节点上 Request 的资源与总资源量的比值",
                "type": "string"
              },
              "max_graceful_termination_sec": {
                "description": "cluster autoscaler缩容节点时等待节点上pod终止的最长时间。单位：s。",
                "example": "14400s",
                "format": "int32",
                "required": false,
                "title": "CA缩容节点时等待节点上pod终止的最长时间（单位：秒）",
                "type": "integer"
              },
              "min_replica_count": {
                "description": "考虑缩容时Pod应该有的最小副本数。",
                "example": "0",
                "format": "int32",
                "required": false,
                "title": "考虑缩容时pod应该有的最小副本数",
                "type": "integer"
              },
              "recycle_node_deletion_enabled": {
                "description": "极速模式节点缩容成功后，是否删除其对应的K8s Node对象。",
                "example": "false",
                "required": false,
                "title": "极速模式节点缩容成功后是否删除其对应的K8s node对象",
                "type": "boolean"
              },
              "scale_down_enabled": {
                "description": "是否允许进行节点缩容。取值：\n- `true`：允许缩容。\n- `false`：禁止缩容。",
                "example": "true",
                "required": false,
                "title": "是否允许缩容",
                "type": "boolean"
              },
              "scale_up_from_zero": {
                "description": "集群Ready节点数为0时，CA是否扩容。",
                "example": "true",
                "required": false,
                "title": "集群ready节点数为0时，CA是否扩容",
                "type": "boolean"
              },
              "scan_interval": {
                "description": "弹性灵敏度，判断伸缩的间隔时间。单位：s。",
                "example": "30s",
                "required": false,
                "title": "弹性灵敏度，判断伸缩的间隔时间",
                "type": "string"
              },
              "skip_nodes_with_local_storage": {
                "description": "cluster autoscaler是否缩容有local storage（如EmptyDir 或 HostPath）的pods的节点\n- `true`：不会缩容。\n- `false`：缩容。",
                "example": "false",
                "required": false,
                "title": "为true则cluster autoscaler将不会缩容有local storage（如EmptyDir 或 HostPath）的pods的节点",
                "type": "boolean"
              },
              "skip_nodes_with_system_pods": {
                "description": "cluster autoscaler是否缩容有kube-system命名空间下的Pods（除了DaemonSet或mirror Pods）的节点。\n- `true`：不会缩容。\n- `false`：缩容。",
                "example": "true",
                "required": false,
                "title": "为true则cluster autoscaler将不会缩容有kube-system命名空间下pods（除了DaemonSet 或 mirror pods）的节点",
                "type": "boolean"
              },
              "unneeded_duration": {
                "description": "静默时间。扩容出的节点，在静默时间过后，才能进入缩容判断。单位：分钟。",
                "example": "10m",
                "required": false,
                "title": "缩容触发时延，节点缩容时需要连续满足触发时延所设定的时间，方可进行缩容",
                "type": "string"
              },
              "utilization_threshold": {
                "description": "缩容阈值，节点上Request的资源与总资源量的比值。",
                "example": "0.5",
                "required": false,
                "title": "缩容阈值，节点上 Request 的资源与总资源量的比值",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体数据",
            "type": "object"
          }
        }
      ],
      "path": "/cluster/{ClusterId}/autoscale/config/",
      "responses": {
        "200": {}
      },
      "summary": "调用CreateAutoscalingConfig创建自动伸缩配置。",
      "title": "创建弹性伸缩配置"
    },
    "CreateCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateCluster\n本文仅提供创建ACK集群的全量参数配置，关于如何通过OpenAPI创建不同类型ACK集群的具体操作，请参见如下文档操作：\n- [通过OpenAPI创建Kubernetes托管版集群](https://help.aliyun.com/document_detail/90776.html)\n- [通过OpenAPI创建Kubernetes专有版集群](https://help.aliyun.com/document_detail/197620.html)\n- [通过OpenAPI创建ACK Serverless集群](https://help.aliyun.com/document_detail/144246.html)\n- [通过OpenAPI创建ACK Edge集群](https://help.aliyun.com/document_detail/128204.html)\n- [通过OpenAPI创建基础托管版安全沙箱Kubernetes集群](https://help.aliyun.com/document_detail/196321.html)\n- [通过OpenAPI创建专有版安全沙箱Kubernetes集群](https://help.aliyun.com/document_detail/140623.html)",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"cluster_id\\\": \\\"cb95aa626a47740afbf6aa099b650****\\\",\\n  \\\"request_id\\\": \\\"687C5BAA-D103-4993-884B-C35E4314A1E1\\\",\\n  \\\"task_id\\\": \\\"T-5a54309c80282e39ea00002f\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<cluster_id>cb95aa626a47740afbf6aa099b650****</cluster_id>\\n<task_id>T-5a54309c80282e39ea00002f</task_id>\\n<request_id>687C5BAA-D103-4993-884B-C35E4314A1E1</request_id>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "本文介绍如何通过OpenAPI创建ACK集群，包含ACK托管版集群、ACK专有版集群、ACK Serverless集群，ACK Edge集群、ACK安全沙箱以及注册集群。关于如何创建不同类型集群的具体操作，请参见下文的使用说明。",
        "systemTags": {},
        "title": "创建集群"
      },
      "method": "post",
      "name": "CreateCluster",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "cluster-demo",
            "ext": {
              "style": "json"
            },
            "properties": {
              "access_control_list": {
                "description": "注册集群 API Server SLB 访问控制列表。",
                "items": {
                  "description": "注册集群 API Server SLB 访问控制列表。",
                  "example": "192.168.1.0/24\n",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "type": "array"
              },
              "addons": {
                "description": "集群组件列表，创建集群时通过`addons`指定想要安装的集群组件。\n\n**网络组件**：必选，包含Flannel和Terway两种网络类型，创建集群时二选一：\n\n- Flannel网络：\\[{\"name\":\"flannel\",\"config\":\"\"}\\]。\n- Terway网络：\\[{\"name\": \"terway-eniip\",\"config\": \"\"}\\] 。\n\n**存储组件**：必选，支持`csi`和`flexvolume`两种类型：\n\n- `csi`：\\[{\"name\":\"csi-plugin\",\"config\": \"\"},{\"name\": \"csi-provisioner\",\"config\": \"\"}\\]。\n- `flexvolume`：\\[{\"name\": \"flexvolume\",\"config\": \"\"}\\] 。\n\n**日志组件**：可选。推荐开启，如果不开启日志服务时，将无法使用集群审计功能。\n\n- 使用已有`SLS Project`：\\[{\"name\": \"logtail-ds\",\"config\": \"{\\\"IngressDashboardEnabled\\\":\\\"true\\\",\\\"sls_project_name\\\":\\\"your_sls_project_name\\\"}\"}\\] 。\n- 创建新的`SLS Project`：\\[{\"name\": \"logtail-ds\",\"config\": \"{\\\"IngressDashboardEnabled\\\":\\\"true\\\"}\"}\\] 。\n\n**Ingress组件**：可选，ACK专有版集群默认安装Ingress组件`nginx-ingress-controller`。\n\n- 安装Ingress并且开启公网：\\[{\"name\":\"nginx-ingress-controller\",\"config\":\"{\\\"IngressSlbNetworkType\\\":\\\"internet\\\"}\"}\\] 。\n- 禁止默认安装Ingress：\\[{\"name\": \"nginx-ingress-controller\",\"config\": \"\",\"disabled\": true}\\] 。\n\n**事件中心**：可选，默认开启。\n\n事件中心提供对Kubernetes事件的存储、查询、告警等能力。Kubernetes事件中心关联的Logstore在90天内免费。关于免费策略的更多信息，请参见[创建并使用Kubernetes事件中心](https://help.aliyun.com/document_detail/150476.html#task-2389213)。\n\n开启事件中心示例：\\[{\"name\":\"ack-node-problem-detector\",\"config\":\"{\\\"sls_project_name\\\":\\\"your_sls_project_name\\\"}\"}\\]。",
                "items": {
                  "$ref": "#/definitions/addon",
                  "description": "集群组件列表，创建集群时通过`addons`指定想要安装的集群组件。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "addon"
                },
                "required": false,
                "title": "集群组件配置",
                "type": "array"
              },
              "api_audiences": {
                "description": "ServiceAccount是Pod和集群`apiserver`通讯的访问凭证，而`api-audiences`是合法的请求`token`身份，用于`apiserver`服务端认证请求`token`是否合法。支持配置多个`audienc`e，通过英文逗号（,）分割。\n\n关于`ServiceAccount`更多详情，请参见[部署服务账户令牌卷投影](https://help.aliyun.com/document_detail/160384.html)。",
                "example": "kubernetes.default.svc",
                "required": false,
                "title": "合法的请求token身份，用于apiserver服务端认证请求token是否合法。",
                "type": "string"
              },
              "charge_type": {
                "description": "付费类型。",
                "example": "1",
                "required": false,
                "title": "付费类型。",
                "type": "string"
              },
              "cis_enabled": {
                "description": "CIS安全加固。更多信息，请参见[ACK CIS加固使用说明](https://help.aliyun.com/document_detail/223744.html)。\n\n取值：\n\n- `true`：开启CIS安全加固。\n- `false`：不开启CIS安全加固。\n\n默认值：`false`。",
                "example": "false",
                "required": false,
                "title": "CIS安全加固",
                "type": "boolean"
              },
              "cloud_monitor_flags": {
                "description": "集群是否安装云监控插件。取值：\n\n- `true`：安装云监控插件。\n- `false`：不安装云监控插件。\n\n默认值：`false`。\n\n",
                "example": "true",
                "required": false,
                "title": "为ECS安装云监控",
                "type": "boolean"
              },
              "cluster_domain": {
                "description": "集群本地域名。\n\n命名规则：域名由小数点（.）分隔的一个或多个部分构成，每个部分最长为63个字符，可以使用小写字母、数字和短划线（-），且首尾必须为小写字母或数字。",
                "example": "cluster.local",
                "required": false,
                "title": "集群本地域名",
                "type": "string"
              },
              "cluster_spec": {
                "description": "托管版集群类型，面向托管集群。取值：\n\n- `ack.pro.small`：专业托管集群，即：\"ACK Pro版集群\"。\n- `ack.standard`：标准托管集群。\n\n默认值：`ack.standard`。取值可以为空，为空时则创建标准托管集群。\n\n更多详情，请参见[ACK Pro版集群介绍](https://help.aliyun.com/document_detail/173290.html)。",
                "example": "ack.pro.small",
                "required": false,
                "title": "托管版集群类型",
                "type": "string"
              },
              "cluster_type": {
                "description": "集群类型。取值：\n\n- `Kubernetes`：专有版集群。\n- `ManagedKubernetes`：标准托管版集群、边缘托管版集群。\n- `Ask`：标准ASK集群。\n- `ExternalKubernetes`：注册至ACK的外部集群。",
                "example": "Kubernetes",
                "required": true,
                "title": "集群类型",
                "type": "string"
              },
              "container_cidr": {
                "description": "Pod网络地址段，必须是有效的私有网段，即以下网段及其子网：10.0.0.0/8、172.16-31.0.0/12-16、192.168.0.0/16。不能与VPC及VPC内已有Kubernetes集群使用的网段重复，创建成功后不能修改。\n\n有关集群网络规划，请参见[VPC下 Kubernetes的网络地址段规划](https://help.aliyun.com/document_detail/86500.html)。\n\n> 当创建Flannel网络类型的集群时，该字段为必填。",
                "example": "172.20.0.0/16",
                "required": false,
                "title": "POD网络网段",
                "type": "string"
              },
              "controlplane_log_components": {
                "description": "组件名称列表，指定那些控制平面的组件日志需要被收集。\n\n默认采集apiserver、kcm、scheduler组件的日志。",
                "items": {
                  "description": "组件名称列表，指定那些控制平面的组件日志需要被收集。\n\n默认采集apiserver、kcm、scheduler组件的日志。",
                  "example": "[\"apiserver\",\"kcm\",\"scheduler\"]",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "需要采集日志的组件",
                "type": "array"
              },
              "controlplane_log_project": {
                "description": "控制平面组件日志服务Project，可以使用已有Project用于日志存储，也可以使用系统自动创建Project用户日志存储。如果选择自动创建日志服务Project将会自动创建一个名称为`k8s-log-{ClusterID}`的日志服务Project。",
                "example": "k8s-log-xxx",
                "required": false,
                "title": "使用已有log project时，需要指定log project",
                "type": "string"
              },
              "controlplane_log_ttl": {
                "description": "控制平面组件日志保存天数。",
                "example": "30",
                "required": false,
                "title": "控制平面日志",
                "type": "string"
              },
              "cpu_policy": {
                "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。\n\n默认值：`none`。",
                "example": "none",
                "required": false,
                "title": "CPU策略",
                "type": "string"
              },
              "custom_san": {
                "description": "自定义证书SAN，多个IP或域名以英文逗号（,）分隔。",
                "example": "cs.aliyun.com",
                "required": false,
                "title": "自定义证书SAN",
                "type": "string"
              },
              "deletion_protection": {
                "description": "集群删除保护，防止通过控制台或API误删除集群。取值：\n\n- `true`：启用集群删除保护，将不能通过控制台或API删除集群。\n- `false`：不启用集群删除保护，则能通过控制台或API删除集群。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "集群删除保护",
                "type": "boolean"
              },
              "disable_rollback": {
                "description": "集群创建失败是否回滚。取值：\n\n- `true`：当集群创建失败时，进行回滚操作。\n- `false`：当集群创建失败时，不进行回滚操作。\n\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "失败回滚",
                "type": "boolean"
              },
              "enable_rrsa": {
                "description": "是否启用RRSA功能。",
                "example": "true",
                "required": false,
                "title": "启用 RRSA 功能",
                "type": "boolean"
              },
              "encryption_provider_key": {
                "description": "KMS密钥ID，使用该密钥对数据盘进行加密。更多详情，请参见[密钥管理服务](https://help.aliyun.com/document_detail/28935.html)。\n\n> 该功能只在专业托管版集群（ACK Pro版集群）中生效。\n\n",
                "example": "0fe64791-55eb-4fc7-84c5-c6c7cdca****",
                "required": false,
                "title": "Secret落盘加密",
                "type": "string"
              },
              "endpoint_public_access": {
                "description": "是否开启公网访问。通过EIP暴露API Server，实现集群公网访问。\n\n- `true`：开启公网访问。\n- `false`：不开启公网访问。选择不开放时，则无法通过外网访问集群API Server。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "使用EIP暴露apiServer",
                "type": "boolean"
              },
              "format_disk": {
                "description": "使用已有实例创建集群时，是否对实例进行数据盘挂载，取值：\n\n- `true`：将容器和镜像存储在数据盘，数据盘内原有数据将丢失，请注意备份数据。\n\n- `false`：不将容器和镜像存储在数据盘。\n\n默认值：`false`。\n\n数据盘挂载规则：\n\n- 如果ECS已挂载数据盘，且最后一块数据盘的文件系统未初始化，系统会自动将该数据盘格式化为ext4，用来存放内容/var/lib/docker、/var/lib/kubelet。\n- 如果ECS未挂载数据盘，则不会挂载新的数据盘。",
                "example": "false",
                "required": false,
                "title": "使用已有节点创建集群时，是否格式化已有实例的磁盘",
                "type": "boolean"
              },
              "image_id": {
                "description": "节点自定义镜像，默认使用系统镜像。当选择自定义镜像时，将取代默认系统镜像。请参见[自定义镜像](https://help.aliyun.com/document_detail/146647.html)。",
                "example": "m-bp16z7xko3vvv8gt****",
                "required": false,
                "title": "自定义镜像",
                "type": "string"
              },
              "image_type": {
                "description": "操作系统发行版类型，推荐使用该字段指定节点操作系统。取值：\n\n- CentOS\n- AliyunLinux\n- AliyunLinux Qboot\n- AliyunLinuxUEFI\n- AliyunLinux3\n- Windows\n- WindowsCore\n- AliyunLinux3Arm64\n- ContainerOS\n\n默认值：`CentOS`。",
                "example": "AliyunLinux",
                "required": false,
                "title": "操作系统镜像类型",
                "type": "string"
              },
              "instances": {
                "description": "使用已经节点创建集群时，需要指定ECS实例列表，该实例会作为Worker节点加入集群。\n\n> 使用已有实例创建集群时，该字段必填。",
                "items": {
                  "description": "使用已经节点创建集群时，需要指定ECS实例列表，该实例会作为Worker节点加入集群。\n\n> 使用已有实例创建集群时，该字段必填。",
                  "example": "i-2ze4zxnm36vq00xn****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "使用已有节点创建集群时，已有实例列表",
                "type": "array"
              },
              "ip_stack": {
                "description": "集群IP Stack",
                "example": "可选值：ipv4(单栈)/dual(双栈) ，默认值为IPv4。",
                "required": false,
                "title": "集群IP Stack",
                "type": "string"
              },
              "is_enterprise_security_group": {
                "description": "自动创建企业级安全组，当`security_group_id`为空的时生效。\n\n> 使用普通安全组时，集群内节点与Terway Pod数量之和不能超过2000。所以创建Terway网络类型集群时，建议使用企业安全组。\n\n- `true`：创建并使用企业级安全组。\n- `false`：不使用企业级安全组。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "自动创建企业安全组",
                "type": "boolean"
              },
              "keep_instance_name": {
                "description": "使用已有实例创建集群时，是否保留实例名称。\n\n- `true`：保留。\n- `false`：不保留，会用系统规则进行替换。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "使用已有节点创建集群时，是否保留实例名称。",
                "type": "boolean"
              },
              "key_pair": {
                "description": "密钥对名称，和`login_password`二选一。",
                "example": "secrity-key",
                "required": false,
                "title": "密钥对名称，和login_password二选一。",
                "type": "string"
              },
              "kubernetes_version": {
                "description": "集群版本，与Kubernetes社区基线版本保持一致。建议选择最新版本，若不指定，默认使用最新版本。\n\n目前您可以在ACK控制台创建两种最新版本的集群。您可以通过API创建其他Kubernetes版本集群。关于ACK支持的Kubernetes版本，请参见[Kubernetes版本发布概览](https://help.aliyun.com/document_detail/185269.html)。",
                "example": "1.16.9-aliyun.1",
                "required": false,
                "title": "集群版本",
                "type": "string"
              },
              "load_balancer_spec": {
                "description": "负载均衡规格，取值：\n- slb.s1.small\n- slb.s2.small\n- slb.s2.medium\n- slb.s3.small\n- slb.s3.medium\n- slb.s3.large\n\n默认值：`slb.s2.small`。",
                "example": "slb.s2.small",
                "required": false,
                "title": "负载均衡规格",
                "type": "string"
              },
              "logging_type": {
                "description": "集群开启日志服务，只针对ASK集群生效，且取值必须是`SLS`。",
                "example": "SLS",
                "required": false,
                "title": "ASK 集群开启日志服务",
                "type": "string"
              },
              "login_password": {
                "description": "SSH登录密码，和`key_pair `二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。",
                "example": "Hello@1234",
                "required": false,
                "title": "SSH登录密码。密码规则为8~30 个字符，且至少同时包含三项（大小写字母、数字和特殊符号），和key_pair二选一。",
                "type": "string"
              },
              "master_auto_renew": {
                "description": "Master节点是否开启自动续费，当`master_instance_charge_type`取值为`PrePaid`时才生效，可选值为：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "集群Master节点是否自动续费",
                "type": "boolean"
              },
              "master_auto_renew_period": {
                "description": "Master节点自动续费周期，当选择包年包月付费类型时才生效，且为必选值。\n\n取值范围：{1, 2, 3, 6, 12}。\n\n默认值：1。",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "集群Master节点自动续费时长",
                "type": "integer"
              },
              "master_count": {
                "description": "Master节点数量，可选值`3`或`5`。\n\n默认值：`3`。",
                "example": "3",
                "format": "int64",
                "required": false,
                "title": "集群Master节点数量",
                "type": "integer"
              },
              "master_instance_charge_type": {
                "description": "Master节点付费类型，取值：\n\n- `PrePaid`：包年包月。\n- `PostPaid`：按量付费。\n\n默认值：`PostPaid`。",
                "example": "PrePaid",
                "required": false,
                "title": "集群Master节点付费类型",
                "type": "string"
              },
              "master_instance_types": {
                "description": "Master节点实例类型。更多信息，请参见[实例规格族](https://help.aliyun.com/document_detail/25378.html)。",
                "items": {
                  "description": "Master节点实例类型。指定的实例规格数量需要和`master_count`保持一致，和`master_instance_types`中的元素一一对应。更多信息，请参见[实例规格族](https://help.aliyun.com/document_detail/25378.html)。",
                  "example": "ecs.n4.xlarge",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "集群Master节点类型",
                "type": "array"
              },
              "master_period": {
                "description": "Master节点包年包月时长，当`master_instance_charge_type`取值为`PrePaid`时才生效且为必选值。\n\n取值范围：{1, 2, 3, 6, 12, 24, 36, 48, 60}。\n\n默认值：1。\n\n",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "集群Master节点包年包月时长",
                "type": "integer"
              },
              "master_period_unit": {
                "description": "Master节点付费周期，当付费类型为`PrePaid`的时候必须指定周期。\n\n取值：`Month`，当前仅支持以月为周期。",
                "example": "Month",
                "required": false,
                "title": "集群Master节点包年包月周期",
                "type": "string"
              },
              "master_system_disk_category": {
                "description": "Master节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n- `cloud_essd`：ESSD云盘。\n\n默认值：`cloud_ssd`。不同可用区，默认值可能会有所差异。",
                "example": "cloud_ssd",
                "required": false,
                "title": "集群Master节点系统盘类型",
                "type": "string"
              },
              "master_system_disk_performance_level": {
                "description": "集群Master节点系统盘磁盘性能等级， 仅对ESSD磁盘生效。磁盘性能等级和磁盘大小有关，更多信息，请参见[ESSD云盘](https://help.aliyun.com/document_detail/122389.html)。",
                "example": "PL1",
                "required": false,
                "title": "Master节点系统盘磁盘性能，只针对ESSD磁盘生效",
                "type": "string"
              },
              "master_system_disk_size": {
                "description": "Master节点系统盘类型，取值范围\\[40,500\\]，单位：GiB。\n\n默认值：`120`。",
                "example": "120",
                "format": "int64",
                "required": false,
                "title": "集群Master节点系统盘大小，至少40",
                "type": "integer"
              },
              "master_system_disk_snapshot_policy_id": {
                "description": "Master节点系统盘采用的自动快照策略ID。",
                "example": "sp-2zej1nogjvovnz4z****",
                "required": false,
                "title": "集群Master节点自动快照备份策略",
                "type": "string"
              },
              "master_vswitch_ids": {
                "description": "Master节点交换机ID列表，交换机个数取值范围为\\[1,3\\]。为确保集群的高可用性，推荐您选择3个交换机，且分布在不同的可用区。\n\n指定的实例规格数量需要和`master_count`保持一致，和`master_vswitch_ids`中的元素一一对应。",
                "items": {
                  "description": "Master节点交换机ID列表，交换机个数取值范围为\\[1,3\\]。为确保集群的高可用性，推荐您选择3个交换机，且分布在不同的可用区。\n\n指定的实例规格数量需要和`master_count`保持一致，和`master_vswitch_ids`中的元素一一对应。",
                  "example": "vsw-2ze3ds0mdip0hdz8i****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "集群Master节点使用的虚拟交换机",
                "type": "array"
              },
              "name": {
                "description": "集群名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                "example": "cluster-demo",
                "required": true,
                "title": "集群名称。",
                "type": "string"
              },
              "nat_gateway": {
                "description": "创建ASK集群时，是否在VPC中创建NAT网关并配置SNAT规则。取值：\n\n- `true`：将为您创建NAT网关并自动配置SNAT规则，集群VPC将具备公网访问能力。\n- `false`：不为您创建NAT网关及SNAT规则。集群VPC将不具备公网访问能力。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "使用自动创建专有网络创建ASK集群时，是否在vpc中创建Nat网关并配置SNAT规则。",
                "type": "boolean"
              },
              "node_cidr_mask": {
                "description": "节点IP数量，通过指定网络的CIDR来确定IP的数量，只对于Flannel网络类型集群生效。\n\n默认值：`26`。",
                "example": "25",
                "required": false,
                "title": "节点IP数量",
                "type": "string"
              },
              "node_name_mode": {
                "description": "自定义节点名称。\n\n节点名称由三部分组成：前缀+节点IP地址子串+后缀：\n\n- 前缀和后缀均可由英文句号（.）分隔的一个或多个部分构成，每个部分可以使用小写字母、数字和短划线（-），且首尾必须为小写字母和数字。\n- IP地址段长度指截取节点IP地址末尾的位数，取值范围\\[5,12\\]。\n\n例如，节点IP地址为：192.168.0.55，指定前缀为aliyun.com，IP地址段长度为5，后缀为test，则节点名称为aliyun.com00055test。",
                "example": "aliyun.com00055test",
                "required": false,
                "title": "自定义节点名称",
                "type": "string"
              },
              "node_port_range": {
                "description": "节点服务端口，可选端口范围：\\[30000,65535\\]。\n\n默认值：`30000-32767`。",
                "example": "30000~32767\t",
                "required": false,
                "title": "节点服务端口范围",
                "type": "string"
              },
              "nodepools": {
                "description": "节点池列表。",
                "items": {
                  "$ref": "#/definitions/nodepool",
                  "description": "节点池配置。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "nodepool"
                },
                "required": false,
                "type": "array"
              },
              "num_of_nodes": {
                "deprecated": true,
                "description": "Worker节点数。范围是\\[0，100\\]。",
                "example": "3",
                "format": "int64",
                "required": false,
                "title": "集群Worker节点数量",
                "type": "integer"
              },
              "os_type": {
                "description": "操作系统平台类型。取值：\n- Windows\n- Linux\n\n默认值：`Linux`。",
                "example": "Linux",
                "required": false,
                "title": "操作系统平台类型",
                "type": "string"
              },
              "period": {
                "description": "包年包月时间。",
                "example": "FY2023",
                "format": "int64",
                "required": false,
                "title": "包年包月时间。",
                "type": "integer"
              },
              "period_unit": {
                "description": "包年包月时间单位。",
                "example": "Month",
                "required": false,
                "title": "包年包月时间单位。",
                "type": "string"
              },
              "platform": {
                "description": "操作系统发行版。取值：\n\n- CentOS\n- AliyunLinux\n- QbootAliyunLinux\n- Qboot\n- Windows\n- WindowsCore\n\n默认值：`CentOS`。",
                "example": "CentOS",
                "required": false,
                "title": "操作系统发行版",
                "type": "string"
              },
              "pod_vswitch_ids": {
                "description": "Pod虚拟交换机列表，您需要为每一个节点虚拟交换机指定至少一个相同可用区的Pod虚拟交换机并且不能跟节点`vswitch`重复，建议选择网段掩码不大于19的虚拟交换机。\n\n> 当集群采用Terway网络类型时，必须为集群指定`pod_vswitch_ids`。",
                "items": {
                  "description": "Pod虚拟交换机列表，您需要为每一个节点虚拟交换机指定至少一个相同可用区的Pod虚拟交换机并且不能跟节点`vswitch`重复，建议选择网段掩码不大于19的虚拟交换机。\n\n> 当集群采用Terway网络类型时，必须为集群指定`pod_vswitch_ids`。",
                  "example": "vsw-2ze97jwri7cei0mpw****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "创建Terway网络类型的集群时，需要为pod指定单独的虚拟交换机",
                "type": "array"
              },
              "profile": {
                "description": "边缘集群标识。当创建集群类型为边缘托管版时，该参数必填且取值必须为`Edge`。\n\n- `Default`：非边缘集群。\n\n- `Edge`：边缘集群。",
                "example": "Default",
                "required": false,
                "title": "面向场景时的集群类型。  Default：非边缘场景集群。 Edge：边缘场景集群。",
                "type": "string"
              },
              "proxy_mode": {
                "description": "kube-proxy代理模式\n\n- `iptables`: 成熟稳定的kube-proxy代理模式，Kubernetes Service的服务发现和负载均衡使用iptables规则配置，但是性能一般，受规模影响较大，适用于集群存在少量的Service。\n- `ipvs`：高性能的kube-proxy代理模式，Kubernetes Service的服务发现和负载均衡使用Linux IPVS模块进行配置，适用于集群存在大量的Service，对负载均衡有高性能要求的场景。\n\n默认值：`ipvs`。",
                "example": "ipvs",
                "required": false,
                "title": "Proxy代理模式，ipvs|iptables",
                "type": "string"
              },
              "rds_instances": {
                "description": "RDS实例列表，选择您想想要添加白名单的RDS实例。 建议前往RDS加入容器Pod网段与Node网段，设置RDS实例会由于实例非运行的状态导致无法弹出。",
                "items": {
                  "description": "RDS实例列表，选择您想想要添加白名单的RDS实例。 建议前往RDS加入容器Pod网段与Node网段，设置RDS实例会由于实例非运行的状态导致无法弹出。",
                  "example": "rm-2zev748xi27xc****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "RDS白名单",
                "type": "array"
              },
              "region_id": {
                "description": "集群所在的地域ID。\n\n",
                "example": "cn-beijing",
                "required": true,
                "title": "地域ID",
                "type": "string"
              },
              "resource_group_id": {
                "description": "集群所属资源组ID，实现不同资源的隔离。",
                "example": "rg-acfm3mkrure****",
                "required": false,
                "title": "集群所属资源组ID",
                "type": "string"
              },
              "runtime": {
                "$ref": "#/definitions/runtime",
                "description": "集群内容器运行时，默认采用Docker运行时，同时还支持Containerd和安全沙箱容器运行时。\n\n更多有关容器引擎的选择，请参见[如何选择Docker运行时与安全沙箱运行时](https://help.aliyun.com/document_detail/160313.html)。",
                "isDefsType": true,
                "required": false,
                "typeName": "runtime"
              },
              "security_group_id": {
                "description": "使用已有安全组创建集群时需要指定安全组ID，和`is_enterprise_security_group`二选一，集群节点自动加入到此安全组。",
                "example": "sg-bp1bdue0qc1g7k****",
                "required": false,
                "title": "安全组ID，和is_enterprise_security_group二选一",
                "type": "string"
              },
              "service_account_issuer": {
                "description": "ServiceAccount是Pod和集群`apiserver`通讯的访问凭证。而`service-account-issuer`是`serviceaccount token`中的签发身份，即`token payload`中的`iss`字段。\n\n关于`ServiceAccount`更多详情，请参见[部署服务账户令牌卷投影](https://help.aliyun.com/document_detail/160384.html)。",
                "example": "kubernetes.default.svc",
                "required": false,
                "title": "serviceaccount token中的签发身份，即token payload中的iss字段。",
                "type": "string"
              },
              "service_cidr": {
                "description": "Service网络地址段，可选范围：10.0.0.0/16-24，172.16-31.0.0/16-24，192.168.0.0/16-24\n不能与VPC网段10.1.0.0/21及VPC内已有Kubernetes集群使用的网段重复，创建成功后不能修改。\n\n默认使用172.19.0.0/20网段。",
                "example": "172.21.0.0/20",
                "required": true,
                "title": "服务网络网段",
                "type": "string"
              },
              "service_discovery_types": {
                "description": "集群内服务发现类型，用于在`ASK`集群中指定服务发现方式。\n\n- `CoreDNS`：使用Kubernetes原生标准服务发现组件CoreDNS，需要在集群部署一组容器用于DNS解析。默认采用两个0.25 Core 512 MiB规格的ECI实例。\n- `PrivateZone`：使用阿里云PrivateZone产品提供服务发现能力，需要开启PrivateZone服务。\n\n默认值：不开启。",
                "items": {
                  "description": "集群内服务发现类型，用于在`ASK`集群中指定服务发现方式。\n\n- `CoreDNS`：使用Kubernetes原生标准服务发现组件CoreDNS，需要在集群部署一组容器用于DNS解析。默认采用两个0.25 Core 512 MiB规格的ECI实例。\n- `PrivateZone`：使用阿里云PrivateZone产品提供服务发现能力，需要开启PrivateZone服务。\n\n默认值：不开启。",
                  "example": "PrivateZone",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "创建ASK集群时，服务发现类型",
                "type": "array"
              },
              "snat_entry": {
                "description": "为专有网络配置SNAT。取值：\n\n- `true`：将为您创建NAT网关并自动配置SNAT规则，若您集群内的节点、应用等需要访问公网需要设置为`true`。\n- `false`：不为您创建NAT网关及SNAT规则。这种模式下，集群内节点及应用将不能访问公网。\n\n> 如果创建集群时未开启，后续业务需要访问公网，可手动开启。更多信息，请参见[手动开启](https://help.aliyun.com/document_detail/178480.html)。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "若您集群内的节点、应用等需要访问公网，勾选该项后我们将为您创建 NAT 网关并自动配置 SNAT 规则",
                "type": "boolean"
              },
              "soc_enabled": {
                "description": "等保加固。更多信息，请参见[ACK等保加固使用说明](https://help.aliyun.com/document_detail/196148.html)。\n\n取值：\n- `true`：开启等保加固。\n- `false`：不开启等保加固。\n\n默认值：`false`。",
                "example": "false",
                "required": false,
                "title": "等保安全加固",
                "type": "boolean"
              },
              "ssh_flags": {
                "description": "是否开放公网SSH登录。用登录\"专有版集群\"的Master节点，托管版集群中该参数不生效。\n- `true`：表示开放。\n- `false`：表示不开放。\n\n默认值：`false`。\n\n",
                "example": "true",
                "required": false,
                "title": "允许公网ssh登录",
                "type": "boolean"
              },
              "tags": {
                "description": "节点标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以“aliyun”、“acs:”、“https://”或“http://”开头。详情请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。",
                "items": {
                  "$ref": "#/definitions/tag",
                  "description": "节点标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以“aliyun”、“acs:”、“https://”或“http://”开头。详情请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "tag"
                },
                "required": false,
                "title": "集群标签",
                "type": "array"
              },
              "taints": {
                "description": "节点污点信息。污点和容忍度（Toleration）相互配合，可以用来避免Pod被分配到不合适的节点上。更多信息，请参见[taint-and-toleration](https://kubernetes.io/zh/docs/concepts/scheduling-eviction/taint-and-toleration/)。",
                "items": {
                  "$ref": "#/definitions/taint",
                  "description": "节点污点信息。污点和容忍度（Toleration）相互配合，可以用来避免Pod被分配到不合适的节点上。更多信息，请参见[taint-and-toleration](https://kubernetes.io/zh/docs/concepts/scheduling-eviction/taint-and-toleration/)。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "taint"
                },
                "required": false,
                "title": "节点污点信息",
                "type": "array"
              },
              "timeout_mins": {
                "description": "集群创建超时时间，单位分钟。\n\n默认值：`60`。",
                "example": "60",
                "format": "int64",
                "required": false,
                "title": "集群创建超时时间",
                "type": "integer"
              },
              "timezone": {
                "description": "集群使用的时区。",
                "example": "Asia/Shanghai",
                "required": false,
                "title": "时区",
                "type": "string"
              },
              "user_ca": {
                "description": "自定义集群CA。",
                "example": "-----BEGIN CERTIFICATE-----****",
                "required": false,
                "title": "自定义集群CA",
                "type": "string"
              },
              "user_data": {
                "description": "自定义节点数据。",
                "example": "IyEvdXNyL2Jpbi9iYXNoCmVjaG8gIkhlbGxvIEFD****",
                "required": false,
                "title": "节点自定义数据",
                "type": "string"
              },
              "vpcid": {
                "description": "集群使用的专有网络，创建集群时必须为集群提供。",
                "example": "vpc-2zeik9h3ahvv2zz95****",
                "required": true,
                "title": "集群专有网络ID。",
                "type": "string"
              },
              "vswitch_ids": {
                "description": "集群节点所在虚拟交换机，当创建零节点的托管版集群时，该字段必填。",
                "items": {
                  "description": "集群节点所在虚拟交换机，当创建零节点的托管版集群时，该字段必填。",
                  "example": "vsw-2ze3ds0mdip0hdz8i****",
                  "required": false,
                  "type": "string"
                },
                "required": true,
                "title": "集群节点所在虚拟交换机。",
                "type": "array"
              },
              "worker_auto_renew": {
                "deprecated": true,
                "description": "Worker节点是否开启自动续费，当`worker_instance_charge_type`取值为`PrePaid`时才生效，取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "集群Worker节点到期是否自动续费",
                "type": "boolean"
              },
              "worker_auto_renew_period": {
                "deprecated": true,
                "description": "Worker节点自动续费周期，当选择包年包月付费类型时才生效，且为必选值。\n\n取值范围：{1, 2, 3, 6, 12}。",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "集群Worker节点自动续费时长",
                "type": "integer"
              },
              "worker_data_disks": {
                "deprecated": true,
                "description": "Worker节点数据盘类型、大小等配置的组合。",
                "items": {
                  "description": "数据盘配置集合。",
                  "properties": {
                    "category": {
                      "description": "数据盘类型。",
                      "example": "cloud_essd",
                      "required": true,
                      "title": "集群Worker节点数据盘类型",
                      "type": "string"
                    },
                    "encrypted": {
                      "description": "是否对数据盘加密。取值：\n\n- `true`：对数据盘加密。\n- `false`：不对数据盘加密。\n\n默认值：`false`。",
                      "example": "true",
                      "required": false,
                      "title": "集群Worker节点数据盘是否加密",
                      "type": "string"
                    },
                    "performance_level": {
                      "description": "节点数据盘磁盘性能等级，仅对ESSD磁盘生效。磁盘性能等级和磁盘大小有关。更多信息，请参见[ESSD云盘](https://help.aliyun.com/document_detail/122389.html)。",
                      "example": "PL1",
                      "required": false,
                      "title": "集群Worker节点数据盘磁盘性能等级，仅对ESSD磁盘生效",
                      "type": "string"
                    },
                    "size": {
                      "description": "数据盘大小，取值范围：40～32767。",
                      "example": "120",
                      "required": true,
                      "title": "集群Worker节点数据盘大小",
                      "type": "string"
                    }
                  },
                  "required": false,
                  "type": "object"
                },
                "required": false,
                "title": "集群Worker节点数据盘配置",
                "type": "array"
              },
              "worker_instance_charge_type": {
                "deprecated": true,
                "description": "Worker节点付费类型，取值：\n\n- `PrePaid`：包年包月。\n- `PostPaid`：按量付费。\n\n默认值：按量付费。",
                "example": "PrePaid",
                "required": false,
                "title": "集群Worker节点付费类型",
                "type": "string"
              },
              "worker_instance_types": {
                "deprecated": true,
                "description": "Worker节点实例配置。",
                "items": {
                  "description": "Worker节点实例规格，至少要指定一个实例规格。更多信息，请参见[实例规格族](https://help.aliyun.com/document_detail/25378.html)。\n\n> 实例规格优先级随着在数据中的位置增大依次降低。当无法根据优先级较高的实例规格创建出实例时，会自动选择下一优先级的实例规格来创建实例。",
                  "example": "ecs.n4.large",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "集群Worker节点类型",
                "type": "array"
              },
              "worker_period": {
                "deprecated": true,
                "description": "Worker节点包年包月时长，当`worker_instance_charge_type`取值为`PrePaid`时才生效且为必选值。\n\n取值范围：{1, 2, 3, 6, 12, 24, 36, 48, 60}。\n\n默认值：1。",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "集群Worker节点包年包月时长",
                "type": "integer"
              },
              "worker_period_unit": {
                "deprecated": true,
                "description": "Wroker节点付费周期，当付费类型为`PrePaid`的时候需要指定周期。\n\n取值：`Month`，当前只支持以月为周期。",
                "example": "Month",
                "required": false,
                "title": "集群Worker节点包年包月周期",
                "type": "string"
              },
              "worker_system_disk_category": {
                "deprecated": true,
                "description": "Worker节点系统盘类型。更多信息，请参见[块存储概述](https://help.aliyun.com/document_detail/63136.html)。\n\n取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n\n\n默认值：`cloud_ssd`。",
                "example": "cloud_efficiency",
                "required": false,
                "title": "集群Worker节点系统盘类型",
                "type": "string"
              },
              "worker_system_disk_performance_level": {
                "deprecated": true,
                "description": "当系统盘为ESSD云盘时，可设置ESSD云盘的性能级别PL（Performance Level）。更多信息，请参见[ESSD云盘](https://help.aliyun.com/document_detail/122389.html)。\n\n取值：\n\n- PL0\n- PL1\n- PL2\n- PL3",
                "example": "PL1",
                "required": false,
                "title": "集群Worker节点磁盘性能，只对ESSD类型磁盘生效",
                "type": "string"
              },
              "worker_system_disk_size": {
                "deprecated": true,
                "description": "Worker节点系统盘大小，单位为GiB。\n\n取值范围：\\[40,500\\]。\n\n该参数的取值必须大于或者等于max{40, ImageSize}。\n\n默认值：`120`。",
                "example": "120",
                "format": "int64",
                "required": false,
                "title": "集群Worker节点系统盘大小",
                "type": "integer"
              },
              "worker_system_disk_snapshot_policy_id": {
                "deprecated": true,
                "description": "Worker节点系统盘采用的自动快照策略ID。",
                "example": "sp-2zej1nogjvovnz4z****",
                "required": false,
                "title": "集群Worker节点系统盘快照备份策略",
                "type": "string"
              },
              "worker_vswitch_ids": {
                "deprecated": true,
                "description": "集群节点使用的虚拟交换机列表，一个节点对应一个值。\n\n当创建零节点的托管版集群时，字段`worker_vswitch_ids `非必填，但是需要提供`vswitch_ids`。",
                "items": {
                  "description": "Worker节点虚拟交换机列表，取值范围：\\[1,20\\]。为保证高可用性，建议选择不同可用区的虚拟交换机。\n\n当创建零节点的托管版集群时，字段`worker_vswitch_ids `非必填，但是需要提供`vswitch_ids`。",
                  "example": "vsw-2ze3ds0mdip0hdz8i****",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "集群Worker节点所在虚拟交换机",
                "type": "array"
              },
              "zone_id": {
                "description": "集群所属地域的可用区ID。此参数为ASK集群特有参数。\n\n当创建ASK集群时，如果未指定`vpc_id`和`vswitch_ids`，必须为集群指定`zone_id`，用于自动在该可用区创建VPC网络资源。\n\n",
                "example": "cn-beiji****",
                "required": false,
                "title": "使用自动创建专有网络创建ASK集群时，需要指定专有网络的可用区",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/clusters",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体。",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "cb95aa626a47740afbf6aa099b650****",
                "title": "集群ID。",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "687C5BAA-D103-4993-884B-C35E4314A1E1",
                "title": "请求ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5a54309c80282e39ea00002f",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "返回体数据。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "本文介绍如何通过OpenAPI创建ACK集群，包含ACK托管版集群、ACK专有版集群、ACK Serverless集群，ACK Edge集群、ACK安全沙箱以及注册集群。关于如何创建不同类型集群的具体操作，请参见下文的使用说明。",
      "title": "创建集群"
    },
    "CreateClusterNodePool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateClusterNodePool\n调用CreateClusterNodePool为集群创建节点池。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"nodepool_id\\\": \\\"np31da1b38983f4511b490fc62108a****\\\",\\n  \\\"task_id\\\": \\\"T-613b19bbd160ad492800****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateClusterNodePoolResponse>\\n    <nodepool_id>np31da1b38983f4511b490fc62108a****</nodepool_id>\\n</CreateClusterNodePoolResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用CreateClusterNodePool为集群创建节点池。",
        "systemTags": {
          "operationType": "create"
        },
        "title": "创建节点池"
      },
      "method": "post",
      "name": "CreateClusterNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c61da77e8bfbc4c4c999af2b51b65****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "auto_scaling": {
                "description": "自动伸缩配置。",
                "properties": {
                  "eip_bandwidth": {
                    "description": "【该字段已废弃】\n\nEIP带宽峰值。单位：Mbps。",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "带宽峰值。",
                    "type": "integer"
                  },
                  "eip_internet_charge_type": {
                    "description": "【该字段已废弃】\n\nEIP计费类型。取值：\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。\n\n默认值：`PayByBandwidth`。",
                    "example": "PayByBandwidth",
                    "required": false,
                    "title": "EIP实例规格。",
                    "type": "string"
                  },
                  "enable": {
                    "description": "是否启用自动伸缩。取值：\n- `true`：开启节点池自动伸缩功能。\n- `false`：不开启自动伸缩，当取值为false时，其他`auto_scaling`配置参数将不生效。\n\n默认值：`false`。",
                    "example": "true",
                    "required": true,
                    "title": "是否开启自动伸缩。",
                    "type": "boolean"
                  },
                  "is_bond_eip": {
                    "description": "【该字段已废弃】\n\n是否绑定EIP。取值：\n\n- `true`：绑定EIP。\n\n- `false`：不绑定EIP。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否绑定EIP。",
                    "type": "boolean"
                  },
                  "max_instances": {
                    "description": "自动伸缩组最大实例数。",
                    "example": "10",
                    "format": "int64",
                    "required": true,
                    "title": "最大实例数。",
                    "type": "integer"
                  },
                  "min_instances": {
                    "description": "自动伸缩组最小实例数。",
                    "example": "1",
                    "format": "int64",
                    "required": true,
                    "title": "最小实例数。",
                    "type": "integer"
                  },
                  "type": {
                    "description": "自动伸缩类型，按照自动伸缩实例类型划分。取值：\n\n- `cpu`：普通实例型。\n\n- `gpu`：GPU实例型。\n\n- `gpushare`：GPU共享型。\n\n- `spot`：抢占式实例型。\n\n默认值：`cpu`。",
                    "example": "cpu",
                    "required": false,
                    "title": "扩容节点类型。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "自动伸缩节点池配置。",
                "type": "object"
              },
              "count": {
                "description": "【该字段已废弃，请使用desired_size代替】\n\n节点池节点数量。",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "节点数量。",
                "type": "integer"
              },
              "interconnect_config": {
                "description": "【该字段已废弃】\n\n边缘节点池配置。",
                "properties": {
                  "bandwidth": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池的网络带宽，单位：Mbps。",
                    "example": "10",
                    "format": "int64",
                    "required": false,
                    "title": "边缘增强型节点池的网络带宽，单位M。",
                    "type": "integer"
                  },
                  "ccn_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例ID(CCNID)。",
                    "example": "ccn-qm5i0i0q9yi*******",
                    "required": false,
                    "title": "边缘增强型节点池绑定的云连接网实例ID(CCNID)",
                    "type": "string"
                  },
                  "ccn_region_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例所属的地域。",
                    "example": "cn-shanghai",
                    "required": false,
                    "title": "边缘增强型节点池绑定的云连接网实例所属的区域",
                    "type": "string"
                  },
                  "cen_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云企业网实例ID(CENID)。",
                    "example": "cen-ey9k9nfhz0f*******",
                    "required": false,
                    "title": "边缘增强型节点池绑定的云企业网实例ID(CENID)",
                    "type": "string"
                  },
                  "improved_period": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池的购买时长，单位：月。",
                    "example": "1",
                    "required": false,
                    "title": "边缘增强型节点池的购买时长，单位月",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "边缘节点池网络相关的配置。该值只对edge类型的节点池有意义",
                "type": "object"
              },
              "interconnect_mode": {
                "description": "边缘节点池的网络类型，该值只对`type`为`edge`类型的节点池有意义，取值范围：\n\n- `basic`：基础型。\n- `improved`：增强型。\n- `private`: 专用型。1.22及以上版本支持。",
                "example": "basic",
                "required": false,
                "title": "边缘节点池的网络类型。basic：基础型；improved：增强型。该值只对edge类型的节点池有意义。",
                "type": "string"
              },
              "kubernetes_config": {
                "description": "集群相关配置。",
                "properties": {
                  "cms_enabled": {
                    "description": "是否在ECS节点上安装云监控，安装后可以在云监控控制台查看所创建ECS实例的监控信息，推荐开启。取值：\n\n- `true`：在ECS节点上安装云监控。\n\n- `false`：不在ECS节点上安装云监控。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否开启云监控。",
                    "type": "boolean"
                  },
                  "cpu_policy": {
                    "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。\n\n默认值：`none`。",
                    "example": "none",
                    "required": false,
                    "title": "CPU管理策略。",
                    "type": "string"
                  },
                  "labels": {
                    "description": "节点标签，为Kubernetes集群节点添加标签。",
                    "items": {
                      "$ref": "#/definitions/tag",
                      "description": "标签配置。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "tag"
                    },
                    "required": false,
                    "title": "节点标签。",
                    "type": "array"
                  },
                  "node_name_mode": {
                    "description": "节点名称由三部分组成：前缀 \\+ 节点 IP \\+ 后缀：\n\n- 前缀和后缀均可由“.”分隔的一个或多个部分构成，每个部分可以使用小写字母、数字和“-”，节点名称首尾必须为小写字母和数字；\n- 节点 IP为完整的节点私网 IP 地址；\n\n传参包含四个部分，由逗号分隔，例如：参数传入\"customized,aliyun,ip,com\"字符串（其中“customized”和\"ip\"为固定的字符串，aliyun为前缀，com为后缀），则节点的名称为：aliyun.192.168.xxx.xxx.com。",
                    "example": "customized,aliyun,ip,com",
                    "required": false,
                    "title": "自定义节点名称",
                    "type": "string"
                  },
                  "runtime": {
                    "description": "容器运行时。",
                    "example": "docker",
                    "required": true,
                    "title": "容器运行时。",
                    "type": "string"
                  },
                  "runtime_version": {
                    "description": "容器运行时版本。\n",
                    "example": "19.03.5",
                    "required": true,
                    "title": "容器运行时版本。",
                    "type": "string"
                  },
                  "taints": {
                    "description": "污点配置。",
                    "items": {
                      "$ref": "#/definitions/taint",
                      "description": "污点配置集合。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "taint"
                    },
                    "required": false,
                    "title": "污点信息。",
                    "type": "array"
                  },
                  "user_data": {
                    "description": "节点自定义数据。",
                    "example": "dGhpcyBpcyBhIGV4YW1wbGU=",
                    "required": false,
                    "title": "节点自定义数据。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "集群配置",
                "type": "object"
              },
              "management": {
                "description": "托管节点池配置。",
                "properties": {
                  "auto_repair": {
                    "description": "自动修复，仅当`enable=true`时生效。\n\n- `true`：自动修复。\n\n- `false`：不自动修复。",
                    "example": "false",
                    "required": false,
                    "title": "是否启用自动修复。",
                    "type": "boolean"
                  },
                  "auto_repair_policy": {
                    "properties": {
                      "restart_node": {
                        "example": "true",
                        "required": false,
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      }
                    },
                    "required": false,
                    "title": "自动修复节点策略。",
                    "type": "object"
                  },
                  "auto_upgrade": {
                    "example": "true",
                    "required": false,
                    "title": "是否自动升级。",
                    "type": "boolean"
                  },
                  "auto_upgrade_policy": {
                    "properties": {
                      "auto_upgrade_kubelet": {
                        "example": "true",
                        "required": false,
                        "title": "是否允许自动升级kubelet。",
                        "type": "boolean"
                      }
                    },
                    "required": false,
                    "title": "自动升级策略。",
                    "type": "object"
                  },
                  "auto_vul_fix": {
                    "example": "true",
                    "required": false,
                    "title": "是否自动修复CVE。",
                    "type": "boolean"
                  },
                  "auto_vul_fix_policy": {
                    "properties": {
                      "restart_node": {
                        "example": "true",
                        "required": false,
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      },
                      "vul_level": {
                        "example": "asap,nntf",
                        "required": false,
                        "title": "允许自动修复的漏洞级别，以逗号分隔。",
                        "type": "string"
                      }
                    },
                    "required": false,
                    "title": "自动修复CVE策略。",
                    "type": "object"
                  },
                  "enable": {
                    "description": "是否开启托管版节点池，取值：\n\n- `true`：开启托管节点池。\n\n- `false`：不开启托管节点池，只有当enable=true时，其他相关配置才生效。",
                    "example": "false",
                    "required": true,
                    "title": "是否启用托管节点池。",
                    "type": "boolean"
                  },
                  "upgrade_config": {
                    "description": "自动升级配置，仅当`enable=true`时生效。",
                    "properties": {
                      "auto_upgrade": {
                        "description": "是否启用自动升级，取值：\n\n- `true`：启用自动升级。\n\n- `false`：不启用自动升级。",
                        "example": "false",
                        "required": false,
                        "title": "是否启用自动升级",
                        "type": "boolean"
                      },
                      "max_unavailable": {
                        "description": "最大不可用节点数量。\n取值范围：\\[1,1000\\]\n\n默认值：1。",
                        "example": "1",
                        "format": "int64",
                        "required": true,
                        "title": "最大不可用节点数量。",
                        "type": "integer"
                      },
                      "surge": {
                        "description": "额外节点数量。",
                        "example": "0",
                        "format": "int64",
                        "required": false,
                        "title": "额外节点数量。",
                        "type": "integer"
                      },
                      "surge_percentage": {
                        "description": "额外节点比例， 和`surge`二选一。",
                        "example": "0",
                        "format": "int64",
                        "required": false,
                        "title": "额外节点比例。和surge二选一。",
                        "type": "integer"
                      }
                    },
                    "required": false,
                    "title": "自动升级配置。",
                    "type": "object"
                  }
                },
                "required": false,
                "title": "托管节点池配置。",
                "type": "object"
              },
              "max_nodes": {
                "description": "边缘节点池允许容纳的最大节点数量.。该参数大于等于0。0表示无额外限制（仅受限于集群整体可以容纳的节点数，节点池本身无额外限制）。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0。",
                "example": "10",
                "format": "int64",
                "required": false,
                "title": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制(仅受限于集群整体可以容纳的节点数，节点池本身无额外限制)。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0",
                "type": "integer"
              },
              "nodepool_info": {
                "description": "节点池配置。",
                "properties": {
                  "name": {
                    "description": "节点池名称。",
                    "example": "cluster-demo",
                    "required": true,
                    "title": "节点池名称",
                    "type": "string"
                  },
                  "resource_group_id": {
                    "description": "节点池所在资源ID。",
                    "example": "rg-acfmyvw3wjmb****",
                    "required": false,
                    "title": "资源组ID。",
                    "type": "string"
                  },
                  "type": {
                    "description": "节点池类型，取值范围：\n\n- `ess`：节点池。\n- `edge`：边缘节点池。\n",
                    "example": "ess",
                    "required": false,
                    "title": "节点池类型，对于边缘节点池来说，类型为\"edge\"",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "节点池配置",
                "type": "object"
              },
              "scaling_group": {
                "description": "节点池扩容组配置。",
                "properties": {
                  "auto_renew": {
                    "description": "节点池节点是否开启自动续费，当`instance_charge_type`取值为`PrePaid`时才生效。取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n默认值：`true`。",
                    "example": "true",
                    "required": false,
                    "title": "节点是否开启自动续费",
                    "type": "boolean"
                  },
                  "auto_renew_period": {
                    "description": "节点池节点自动续费周期，当选择预付费和自动续费时才生效，且为必选值。当`PeriodUnit=Month`时，取值范围：{1, 2, 3, 6, 12}。\n\n默认值：1\n",
                    "example": "1",
                    "format": "int64",
                    "required": false,
                    "title": "节点自动续费周期",
                    "type": "integer"
                  },
                  "compensate_with_on_demand": {
                    "description": "当`multi_az_policy`取值为`COST_OPTIMIZED`时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值：\n\n- `true`：允许自动尝试创建按量实例满足ECS实例数量要求。\n- `false`：不允许自动尝试创建按量实例满足ECS实例数量要求。",
                    "example": "true",
                    "required": false,
                    "title": "当MultiAZPolicy取值为COST_OPTIMIZED时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值范围：true：允许。false：不允许。默认值：true",
                    "type": "boolean"
                  },
                  "data_disks": {
                    "description": "节点池节点数据盘配置。",
                    "items": {
                      "$ref": "#/definitions/data_disk",
                      "description": "数据盘配置。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "data_disk"
                    },
                    "required": false,
                    "title": "数据盘配置。",
                    "type": "array"
                  },
                  "deploymentset_id": {
                    "description": "部署集ID。",
                    "example": "ds-bp1d19mmbsv3jf6xxxxx",
                    "required": false,
                    "title": "部署集ID。",
                    "type": "string"
                  },
                  "desired_size": {
                    "description": "节点池期望节点数量。",
                    "example": "0",
                    "format": "int64",
                    "required": false,
                    "title": "节点池期望节点数",
                    "type": "integer"
                  },
                  "image_id": {
                    "description": "自定义镜像ID，默认使用系统提供的镜像。",
                    "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                    "required": false,
                    "title": "自定义镜像。",
                    "type": "string"
                  },
                  "image_type": {
                    "description": "操作系统镜像类型，和`platform`参数二选一，取值范围：\n\n- `AliyunLinux`：Alinux2镜像。\n- `AliyunLinux3`：Alinux3镜像。\n- `AliyunLinux3Arm64`：Alinux3镜像ARM版。\n- `AliyunLinuxUEFI`：Alinux2镜像UEFI版。\n- `CentOS`：CentOS镜像。\n- `Windows`：Windows镜像。\n- `WindowsCore`：WindowsCore镜像。\n- `ContainerOS`：容器优化镜像。",
                    "example": "AliyunLinux",
                    "required": false,
                    "title": "操作系统镜像类型，和platform二选一",
                    "type": "string"
                  },
                  "instance_charge_type": {
                    "description": "节点池节点付费类型，取值：\n \n- `PrePaid`：预付费。\n\n- `PostPaid`：按量付费。\n\n默认值：`PostPaid`。",
                    "example": "PrePaid",
                    "required": true,
                    "title": "节点付费类型",
                    "type": "string"
                  },
                  "instance_types": {
                    "description": "节点池节点实例规格。",
                    "items": {
                      "description": "实例规格。",
                      "example": "ecs.d1ne.2xlarge",
                      "required": false,
                      "type": "string"
                    },
                    "required": true,
                    "title": "实例规格。",
                    "type": "array"
                  },
                  "internet_charge_type": {
                    "description": "公网IP收费类型。取值：\n\n- PayByBandwidth：按固定带宽计费。\n- PayByTraffic：按使用流量计费。",
                    "example": "PayByTraffic",
                    "required": false,
                    "title": "节点公网IP网络计费类型",
                    "type": "string"
                  },
                  "internet_max_bandwidth_out": {
                    "description": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：\\[1,100\\]",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
                    "type": "integer"
                  },
                  "key_pair": {
                    "description": "免密登录密钥对名称，和`login_password`二选一。\n\n>如果创建托管节点池，则只支持`key_pair`。",
                    "example": "np-key-name",
                    "required": false,
                    "title": "密钥对名称，和login_password二选一。",
                    "type": "string"
                  },
                  "login_password": {
                    "description": "SSH登录密码，和`key_pair `二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。",
                    "example": "Hello1234",
                    "required": false,
                    "title": "SSH登录密码。",
                    "type": "string"
                  },
                  "multi_az_policy": {
                    "description": "多可用区伸缩组ECS实例扩缩容策略。取值：\n\n- `PRIORITY`：根据您定义的虚拟交换机（VSwitchIds.N）扩缩容。当优先级较高的虚拟交换机所在可用区无法创建ECS实例时，自动使用下一优先级的虚拟交换机创建ECS实例。\n\n- `COST_OPTIMIZED`：按vCPU单价从低到高进行尝试创建。当伸缩配置设置了抢占式计费方式的多实例规格时，优先创建对应抢占式实例。您可以继续通过`CompensateWithOnDemand`参数指定当抢占式实例由于库存等原因无法创建时，是否自动尝试以按量付费的方式创建。\n\n  >`COST_OPTIMIZED`仅在伸缩配置设置了多实例规格或者选用了抢占式实例的情况下生效。\n\n- `BALANCE`：在伸缩组指定的多可用区之间均匀分配ECS实例。如果由于库存不足等原因可用区之间变得不平衡，您可以通过API [RebalanceInstances](https://help.aliyun.com/document_detail/71516.html)平衡资源。\n\n默认值：`PRIORITY`。",
                    "example": "COST_OPTIMIZED",
                    "required": false,
                    "title": "多可用区伸缩组ECS实例扩缩容策略",
                    "type": "string"
                  },
                  "on_demand_base_capacity": {
                    "description": "伸缩组所需要按量实例个数的最小值，取值范围：\\[0,1000\\]。当按量实例个数少于该值时，将优先创建按量实例。",
                    "example": "0",
                    "format": "int64",
                    "required": false,
                    "title": "伸缩组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例。",
                    "type": "integer"
                  },
                  "on_demand_percentage_above_base_capacity": {
                    "description": "伸缩组满足最小按量实例数（`on_demand_base_capacity`）要求后，超出的实例中按量实例应占的比例。取值范围：\\[0,100\\]。",
                    "example": "20",
                    "format": "int64",
                    "required": false,
                    "title": "伸缩组满足最小按量实例数（OnDemandBaseCapacity）要求后，超出的实例中按量实例应占的比例，取值范围：0～100。",
                    "type": "integer"
                  },
                  "period": {
                    "description": "节点池节点包年包月时长，当`instance_charge_type`取值为`PrePaid`时才生效且为必选值，取值范围：`period_unit`取值为Month时，`period`取值范围：{ 1， 2， 3，6，12}。\n\n默认值：1。",
                    "example": "1",
                    "format": "int64",
                    "required": false,
                    "title": "节点包年包月时长。",
                    "type": "integer"
                  },
                  "period_unit": {
                    "description": "节点池节点付费周期，当指定为`PrePaid`的时候需要指定周期。Month：以月为计时单位。",
                    "example": "Month",
                    "required": false,
                    "title": "节点包年包月周期。",
                    "type": "string"
                  },
                  "platform": {
                    "description": "操作系统发行版。取值：\n- `CentOS`\n- `AliyunLinux`\n- `Windows`\n- `WindowsCore`\n\n默认值：`AliyunLinux`。",
                    "example": "AliyunLinux",
                    "required": false,
                    "title": "操作系统发行版，和image_type二选一",
                    "type": "string"
                  },
                  "private_pool_options": {
                    "description": "私有节点池配置。",
                    "properties": {
                      "id": {
                        "description": "私有节点池ID。",
                        "example": "eap-bp67acfmxazb4****",
                        "required": false,
                        "type": "string"
                      },
                      "match_criteria": {
                        "description": "私有节点池类型，实例启动的私有池容量选项。弹性保障服务或容量预定服务在生效后会生成私有池容量，供实例启动时选择。取值：\n- `Open`：开放模式。将自动匹配开放类型的私有池容量。如果没有符合条件的私有池容量，则使用公共池资源启动。\n- `Target`：指定模式。使用指定的私有池容量启动实例，如果该私有池容量不可用，则实例会启动失败。\n- `None`：不使用模式。实例启动将不使用私有池容量。",
                        "example": "Open",
                        "required": false,
                        "type": "string"
                      }
                    },
                    "required": false,
                    "type": "object"
                  },
                  "rds_instances": {
                    "description": "RDS实例列表。",
                    "items": {
                      "description": "RDS实例ID。",
                      "example": "rds-****",
                      "required": false,
                      "type": "string"
                    },
                    "required": false,
                    "title": "RDS实例列表。",
                    "type": "array"
                  },
                  "scaling_policy": {
                    "description": "伸缩组模式，取值：\n\n- `release`：标准模式，根据申请资源值的使用量，通过创建、释放ECS的方式进行伸缩。\n- `recycle`：极速模式，通过创建、停机、启动的方式进行伸缩，提高再次伸缩的速度（停机时计算资源不收费，只收取存储费用，本地盘机型除外）。\n\n默认值：`release`。",
                    "example": "release",
                    "required": false,
                    "title": "自动伸缩。",
                    "type": "string"
                  },
                  "security_group_id": {
                    "description": "节点池安全组ID，与`security_group_ids`二选一，推荐使用`security_group_ids`。",
                    "example": "sg-wz9a8g2mt6x5llu0****",
                    "required": false,
                    "title": "安全组ID。",
                    "type": "string"
                  },
                  "security_group_ids": {
                    "description": "安全组ID列表，与`security_group_id`二选一，推荐使用`security_group_ids`，当同时指定`security_group_id`和`security_group_ids`将优先使用`security_group_ids`。",
                    "items": {
                      "description": "安全组ID列表，与`security_group_id`二选一，推荐使用`security_group_ids`，当同时指定`security_group_id`和`security_group_ids`将优先使用`security_group_ids`。",
                      "example": "sg-wz9a8g2mt6x5llu0****",
                      "required": false,
                      "type": "string"
                    },
                    "required": false,
                    "title": "多安全组ID",
                    "type": "array"
                  },
                  "spot_instance_pools": {
                    "description": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：\\[1,10\\]。",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：1~10。",
                    "type": "integer"
                  },
                  "spot_instance_remedy": {
                    "description": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值：\n\n- `true`：开启补齐抢占式实例。\n- `false`：不开启补齐抢占式实例。\n",
                    "example": "false",
                    "required": false,
                    "title": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。",
                    "type": "boolean"
                  },
                  "spot_price_limit": {
                    "description": "当前单台抢占式实例规格市场价格区间配置。",
                    "items": {
                      "description": "抢占实例市场价格区间配置，可为不同实例规格设置不同的价格区间。",
                      "properties": {
                        "instance_type": {
                          "description": "抢占式实例规格。",
                          "example": "ecs.c6.large",
                          "required": false,
                          "title": "抢占实例规格。",
                          "type": "string"
                        },
                        "price_limit": {
                          "description": "单台实例上限价格。\n",
                          "example": "0.39",
                          "required": false,
                          "title": "抢占实例单价。",
                          "type": "string"
                        }
                      },
                      "required": false,
                      "type": "object"
                    },
                    "required": false,
                    "title": "抢占实例价格上限配置。",
                    "type": "array"
                  },
                  "spot_strategy": {
                    "description": "抢占式实例类型。取值：\n\n- `NoSpot`：非抢占式实例。\n\n- `SpotWithPriceLimit`：设置抢占实例价格上限。\n\n- `SpotAsPriceGo`：系统自动出价，跟随当前市场实际价格。\n\n更多信息，请参见[抢占式实例](https://help.aliyun.com/document_detail/165053.html)。",
                    "example": "NoSpot",
                    "required": false,
                    "title": "抢占式实例类型",
                    "type": "string"
                  },
                  "system_disk_bursting_enabled": {
                    "description": "节点系统盘是否开启Burst（性能突发）。 取值：\n- true：是。\n- false：否。\n\n当`SystemDiskCategory`取值为`cloud_auto`时才支持设置该参数。更多信息，请参见[ESSD AutoPL云盘](https://help.aliyun.com/document_detail/368372.html)。",
                    "example": "true",
                    "required": false,
                    "title": "节点系统盘是否开启Burst（性能突发），磁盘类型为cloud_auto时配置。",
                    "type": "boolean"
                  },
                  "system_disk_category": {
                    "description": "节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n- `cloud_essd`：ESSD云盘。\n\n默认值：`cloud_efficiency`",
                    "example": "cloud_efficiency",
                    "required": true,
                    "title": "节点系统盘类型。",
                    "type": "string"
                  },
                  "system_disk_performance_level": {
                    "description": "节点系统盘磁盘性能，只对ESSD磁盘生效。\n- PL0：并发极限I/O性能中等，读写时延较为稳定。\n- PL1：并发极限I/O性能中等，读写时延较为稳定。\n- PL2：并发极限I/O性能较高，读写时延稳定。\n- PL3：并发极限I/O性能极高，读写时延极稳定。",
                    "example": "PL1",
                    "required": false,
                    "title": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
                    "type": "string"
                  },
                  "system_disk_provisioned_iops": {
                    "description": "节点系统盘预配置的读写IOPS。可能值：0~min{50,000, 1000\\*容量-基准性能}。 基准性能=min{1,800+50\\*容量, 50000}。\n\n当`SystemDiskCategory`取值为`cloud_auto`时才支持设置该参数。更多信息，请参见[ESSD AutoPL云盘](https://help.aliyun.com/document_detail/368372.html)。",
                    "example": "1000",
                    "format": "int64",
                    "required": false,
                    "title": "节点系统盘预配置的读写IOPS，磁盘类型为cloud_auto时配置。",
                    "type": "integer"
                  },
                  "system_disk_size": {
                    "description": "节点系统盘大小，单位：GiB。\n\n取值范围：\\[40,500\\]。",
                    "example": "120",
                    "format": "int64",
                    "required": true,
                    "title": "节点系统盘大小。",
                    "type": "integer"
                  },
                  "tags": {
                    "description": "仅为ECS实例添加标签。\n\n标签键不可以重复，最大长度为128个字符；标签键和标签值都不能以“aliyun”、“acs:”开头，或包含“https://”、“http://”。",
                    "items": {
                      "description": "节点标签。",
                      "properties": {
                        "key": {
                          "description": "标签的名称。",
                          "example": "node-k-1",
                          "required": false,
                          "title": "key",
                          "type": "string"
                        },
                        "value": {
                          "description": "标签值。",
                          "example": "node-v-1",
                          "required": false,
                          "title": "value",
                          "type": "string"
                        }
                      },
                      "required": false,
                      "type": "object"
                    },
                    "required": false,
                    "title": "ECS标签",
                    "type": "array"
                  },
                  "vswitch_ids": {
                    "description": "虚拟交换机ID，取值范围：\\[1,8\\]。\n\n> 为保证高可用性，建议选择不同可用区的虚拟交换机。",
                    "items": {
                      "description": "虚拟交换机ID。",
                      "example": "vsw-wz9mfnhmssud6eicu****",
                      "required": false,
                      "type": "string"
                    },
                    "required": true,
                    "title": "虚拟交换机ID。",
                    "type": "array"
                  }
                },
                "required": false,
                "title": "伸缩组配置",
                "type": "object"
              },
              "tee_config": {
                "description": "加密计算集群配置。",
                "properties": {
                  "tee_enable": {
                    "description": "是否开启加密计算集群。",
                    "example": "true",
                    "required": true,
                    "title": "是否为加密计算节点池。",
                    "type": "boolean"
                  }
                },
                "required": false,
                "title": "加密计算节点池配置。",
                "type": "object"
              }
            },
            "required": false,
            "title": "请求体参数。",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools",
      "responses": {
        "200": {
          "schema": {
            "description": "节点池配置。",
            "properties": {
              "nodepool_id": {
                "description": "节点池ID。",
                "example": "np31da1b38983f4511b490fc62108a****",
                "title": "节点池ID",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-613b19bbd160ad492800****",
                "title": "任务ID",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "调用CreateClusterNodePool为集群创建节点池。",
      "title": "创建节点池"
    },
    "CreateKubernetesTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateKubernetesTrigger\n为应用创建触发器。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"id\\\": \\\"111\\\",\\n  \\\"cluster_id\\\": \\\"c5cdf7e3938bc4f8eb0e44b21a80f****\\\",\\n  \\\"project_id\\\": \\\"default/test-app\\\",\\n  \\\"type\\\": \\\"deployment\\\",\\n  \\\"action\\\": \\\"redeploy\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<id>111</id>\\n<cluster_id>c5cdf7e3938bc4f8eb0e44b21a80f****</cluster_id>\\n<project_id>default/test-app</project_id>\\n<type>deployment</type>\\n<action>redeploy</action>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "为应用创建触发器。",
        "title": "创建触发器"
      },
      "method": "post",
      "name": "CreateKubernetesTrigger",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "cn-beijing",
            "properties": {
              "action": {
                "description": "触发器行为，取值：\n\n`redeploy`：重新部署`project_id`中定义的资源。",
                "example": "redeploy",
                "required": true,
                "title": "触发器行为",
                "type": "string"
              },
              "cluster_id": {
                "description": "集群ID。",
                "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
                "required": true,
                "title": "集群ID。",
                "type": "string"
              },
              "project_id": {
                "description": "触发器项目名称。\n\n由应用所在命名空间及应用名称组成，格式为`${namespace}/${name}`。\n\n取值示例：`default/test-app`。",
                "example": "default/test-app",
                "required": true,
                "title": "项目名称。",
                "type": "string"
              },
              "type": {
                "description": "触发器类型。取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。",
                "example": "deployment",
                "required": false,
                "title": "触发器类型。默认deployment。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/triggers",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "action": {
                "description": "触发器行为。例如，`redeploy`：重新部署。",
                "example": "redeploy",
                "title": "触发器行为。",
                "type": "string"
              },
              "cluster_id": {
                "description": "集群ID。",
                "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
                "title": "集群ID。",
                "type": "string"
              },
              "id": {
                "description": "触发器ID。",
                "example": "111",
                "title": "触发器ID。",
                "type": "string"
              },
              "project_id": {
                "description": "触发器项目名称。",
                "example": "default/test-app",
                "title": "触发器项目名称。",
                "type": "string"
              },
              "type": {
                "description": "触发器类型。\n\n取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n",
                "example": "deployment",
                "title": "触发器类型。默认值为 deployment 。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "为应用创建触发器。",
      "title": "创建触发器"
    },
    "CreateTemplate": {
      "consumes": [
        "application/json"
      ],
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateTemplate\n创建一个编排模板。",
      "ext": {
        "methods": [
          "post",
          "put"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"template_id\\\": \\\"ba1fe77b-b01e-4640-b77e-8f1b80e3e3cf\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<template_id>ba1fe77b-b01e-4640-b77e-8f1b80e3e3cf</template_id>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "创建一个编排模板。",
        "systemTags": {},
        "title": "创建编排模板"
      },
      "method": "post",
      "name": "CreateTemplate",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "description": {
                "description": "编排模板描述。",
                "example": "this is test",
                "required": false,
                "title": "模板描述。",
                "type": "string"
              },
              "name": {
                "description": "模板名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                "example": "service-account-template",
                "required": true,
                "title": "模板名称。",
                "type": "string"
              },
              "tags": {
                "description": "编排模板标签。",
                "example": "test",
                "required": false,
                "title": "模板标签。",
                "type": "string"
              },
              "template": {
                "description": "YAML格式的模板内容。",
                "example": "apiVersion: v1\\nkind: ServiceAccount\\nmetadata:\\n  name: test-sa",
                "required": true,
                "title": "YAML格式的模板内容。",
                "type": "string"
              },
              "template_type": {
                "description": "模板类型，取值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将不在控制台展示。\n\n推荐设置为`kubernetes`。\n\n默认值：`compose`。",
                "example": "kubernetes",
                "required": false,
                "title": "模板类型。默认值：kubernetes",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数。",
            "type": "object"
          }
        }
      ],
      "path": "/templates",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "template_id": {
                "description": "编排模板ID。",
                "example": "ba1fe77b-b01e-4640-b77e-8f1b80e3e3cf",
                "title": "模板ID。",
                "type": "string"
              }
            },
            "title": "返回体参数",
            "type": "object"
          }
        }
      },
      "summary": "创建一个编排模板。",
      "title": "创建编排模板"
    },
    "CreateTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/CreateTrigger\n> 创建触发器仅支持Pod的重新部署。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"id\\\": \\\"102536\\\",\\n  \\\"cluster_id\\\": \\\"c93095129fc41463aa455d89444fd****\\\",\\n  \\\"project_id\\\": \\\"default/test-app\\\",\\n  \\\"type\\\": \\\"deployment\\\",\\n  \\\"action\\\": \\\"redeploy\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateTriggerResponse>\\n    <id>102536</id>\\n    <cluster_id>c93095129fc41463aa455d89444fd****</cluster_id>\\n    <project_id>default/test-app</project_id>\\n    <type>deployment</type>\\n    <action>redeploy</action>\\n</CreateTriggerResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "为应用创建触发器。",
        "title": "创建触发器"
      },
      "method": "post",
      "name": "CreateTrigger",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数",
            "properties": {
              "action": {
                "description": "触发器行为，取值：\n\n`redeploy`：重新部署`project_id`中定义的资源。",
                "example": "redeploy",
                "required": true,
                "title": "触发器行为",
                "type": "string"
              },
              "cluster_id": {
                "description": "集群ID。",
                "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
                "required": true,
                "title": "集群ID。",
                "type": "string"
              },
              "project_id": {
                "description": "触发器项目名称。\n\n由应用所在命名空间及应用名称组成，格式为`${namespace}/${name}`。\n\n取值示例：`default/test-app`。",
                "example": "default/test-app",
                "required": true,
                "title": "项目名称。",
                "type": "string"
              },
              "type": {
                "description": "触发器类型。取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。",
                "example": "deployment",
                "required": false,
                "title": "触发器类型。默认deployment。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        },
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c68deb844dc6d480eb775be611fdf****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/triggers",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "action": {
                "description": "触发器行为。例如，`redeploy`：重新部署。",
                "example": "redeploy",
                "title": "触发器行为。",
                "type": "string"
              },
              "cluster_id": {
                "description": "集群ID。",
                "example": "c93095129fc41463aa455d89444fd****",
                "title": "集群ID。",
                "type": "string"
              },
              "id": {
                "description": "触发器ID。",
                "example": "102536",
                "title": "触发器ID。",
                "type": "string"
              },
              "project_id": {
                "description": "触发器项目名称。",
                "example": "default/test-app",
                "title": "触发器项目名称。",
                "type": "string"
              },
              "type": {
                "description": "触发器类型。默认值为 deployment 。",
                "example": "deployment",
                "title": "触发器类型。默认值为 deployment 。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "为应用创建触发器。",
      "title": "创建触发器"
    },
    "DeleteAlertContact": {
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteAlertContact\nundefined",
      "ext": {
        "errorCodes": {},
        "methods": [
          "delete"
        ],
        "operationType": "read",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "title": "删除报警联系人"
      },
      "method": "delete",
      "name": "DeleteAlertContact",
      "parameters": [],
      "path": "/alert/contacts",
      "responses": {},
      "title": "删除报警联系人"
    },
    "DeleteAlertContactGroup": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteAlertContactGroup\nundefined",
      "ext": {
        "errorCodes": {},
        "methods": [
          "delete"
        ],
        "operationType": "read",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "title": "删除报警联系人分组"
      },
      "method": "delete",
      "name": "DeleteAlertContactGroup",
      "parameters": [],
      "path": "/alert/contact_groups",
      "responses": {},
      "title": "删除报警联系人分组"
    },
    "DeleteCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteCluster\n根据集群 ID 删除集群实例，并释放集群所有节点资源。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"task_id\\\": \\\"T-5a54309c80282e39ea****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeleteClusterResponse>\\n    <task_id>T-5a54309c80282e39ea****</task_id>\\n</DeleteClusterResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群 ID 删除集群实例，并释放集群所有节点资源。",
        "title": "删除集群"
      },
      "method": "delete",
      "name": "DeleteCluster",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c905d1364c2dd4b6284a3f41790c4****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "retain_all_resources",
          "required": false,
          "schema": {
            "description": "是否保留所有资源。如果设置该值为`true`，则会忽略`retain_resources`。\n\n- `true`：保留所有资源。\n- `false`：不保留所有资源。\n\n默认值：`false`。",
            "example": "false",
            "required": false,
            "title": "是否保留所有资源,如果设置了该值，将会忽略retain_resources。  true：保留 false：不保留 默认值：fase。",
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "keep_slb",
          "required": false,
          "schema": {
            "description": "是否保留SLB，取值：\n\n- `true`：保留创建的SLB资源。\n- `false`：不保留创建的SLB资源。\n\n默认值：`false`。",
            "example": "false",
            "required": false,
            "title": "是否保留SLB。  true：保留 false：不保留 默认值：false。",
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "retain_resources",
          "required": false,
          "schema": {
            "description": "资源列表。删除集群时如果需要保留资源，则需要提供对应资源的ID。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "资源名称。",
              "example": "sg-2ze6ess9kho6fdn9****",
              "required": false,
              "type": "string"
            },
            "required": false,
            "title": "要保留的资源列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "task_id": {
                "description": "任务ID。",
                "example": "T-5a54309c80282e39ea****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "根据集群 ID 删除集群实例，并释放集群所有节点资源。",
      "title": "删除集群"
    },
    "DeleteClusterNodepool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteClusterNodepool\n根据节点池ID，删除集群节点池。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"request_id\\\": \\\"7263C978-3DBD-4E06-B319-793B38A2F388\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeleteClusterNodepoolResponse>\\n    <request_id>7263C978-3DBD-4E06-B319-793B38A2F388</request_id>\\n</DeleteClusterNodepoolResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据节点池ID，删除集群节点池。",
        "title": "删除节点池"
      },
      "method": "delete",
      "name": "DeleteClusterNodepool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c61da77e8bfbc4c4c999af2b51b65****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np30db56bcac7843dca90b999c8928****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "force",
          "required": false,
          "schema": {
            "description": "是否强制删除。",
            "example": "false",
            "required": false,
            "title": "是否强制删除。",
            "type": "boolean"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "request_id": {
                "description": "请求ID。",
                "example": "7263C978-3DBD-4E06-B319-793B38A2F388",
                "title": "请求ID",
                "type": "string"
              }
            },
            "title": "返回数据体",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "根据节点池ID，删除集群节点池。",
      "title": "删除节点池"
    },
    "DeleteClusterNodes": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteClusterNodes\n> - 移除节点会涉及Pod迁移，可能会影响业务，请在业务低峰期操作。- 操作过程中可能存在非预期风险，请提前做好相关的数据备份。- 操作过程中，后台会把当前节点设置为不可调度状态。- 移除节点仅移除Worker节点，不会移除Master节点。",
      "ext": {
        "methods": [
          "post",
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"cluster_id\\\": \\\"c104d5d5f301c4e2a8ee578c37bc****\\\",\\n  \\\"request_id\\\": \\\"A9891419-D125-4D89-AFCA-68846675E2F7\\\",\\n  \\\"task_id\\\": \\\"T-60fea8ad2e277f0879000ae9\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeleteClusterNodesResponse>\\n    <cluster_id>c104d5d5f301c4e2a8ee578c37bc****</cluster_id>\\n    <request_id>A9891419-D125-4D89-AFCA-68846675E2F7</request_id>\\n    <task_id>T-60fea8ad2e277f0879000ae9</task_id>\\n</DeleteClusterNodesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据节点名称，移除集群中指定节点。",
        "title": "移除集群节点"
      },
      "method": "post",
      "name": "DeleteClusterNodes",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c850429a2287b4d968e27e87a4921****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "properties": {
              "drain_node": {
                "description": "是否自动排空节点上的Pod。取值：\n- `true`：自动排空节点上的Pod。\n- `false`：不自动排空节点上的Pod。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "是否自动排空节点上的Pod。",
                "type": "boolean"
              },
              "nodes": {
                "description": "移除节点列表，节点名称必须是节点在集群中的名称，例如：`cn-hangzhou.192.168.0.70`。",
                "items": {
                  "description": "节点名称。",
                  "example": "cn-chengdu.192.168.0.70",
                  "required": false,
                  "type": "string"
                },
                "required": true,
                "title": "移除节点列表。",
                "type": "array"
              },
              "release_node": {
                "description": "是否同时移除ECS。取值：\n\n- `true`：同时移除ECS。\n- `false`：不同移除ECS。\n\n默认值：`false`。\n\n> 当节点为包年包月实例时，不支持同时移除ECS。",
                "example": "true",
                "required": false,
                "title": "是否同时释放 ECS",
                "type": "boolean"
              }
            },
            "required": false,
            "title": "请求体。",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodes",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "c104d5d5f301c4e2a8ee578c37bc****",
                "title": "集群ID",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "A9891419-D125-4D89-AFCA-68846675E2F7",
                "title": "请求ID",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-60fea8ad2e277f0879000ae9",
                "title": "任务ID",
                "type": "string"
              }
            },
            "title": "返回数据体",
            "type": "object"
          }
        }
      },
      "summary": "根据节点名称，移除集群中指定节点。",
      "title": "移除集群节点"
    },
    "DeleteKubernetesTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteKubernetesTrigger\n根据应用触发器ID，删除应用触发器。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "summary": "根据应用触发器ID，删除应用触发器。",
        "title": "删除触发器"
      },
      "method": "delete",
      "name": "DeleteKubernetesTrigger",
      "parameters": [
        {
          "in": "path",
          "name": "Id",
          "required": true,
          "schema": {
            "description": "触发器ID。",
            "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
            "required": true,
            "title": "触发器ID。",
            "type": "string"
          }
        }
      ],
      "path": "/triggers/revoke/{Id}",
      "responses": {
        "200": {}
      },
      "summary": "根据应用触发器ID，删除应用触发器。",
      "title": "删除触发器"
    },
    "DeletePolicyInstance": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeletePolicyInstance\n调用DeletePolicyInstance在指定集群中删除策略规则实例。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"instances\\\": [\\n    \\\"[ \\\\\\\"allowed-repos-kqxnc\\\\\\\" ]\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeletePolicyInstanceResponse>\\n    <instances>[ \\\"allowed-repos-kqxnc\\\" ]</instances>\\n</DeletePolicyInstanceResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DeletePolicyInstance在指定集群中删除策略规则实例。",
        "title": "在指定集群中删除策略规则实例"
      },
      "method": "delete",
      "name": "DeletePolicyInstance",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID。",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群id",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "policy_name",
          "required": true,
          "schema": {
            "description": "策略治理规则名称。",
            "example": "ACKAllowedRepos",
            "required": true,
            "title": "策略治理规则名称",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "instance_name",
          "required": false,
          "schema": {
            "description": "策略规则实例ID。",
            "example": "allowed-repos-mqdsf",
            "required": false,
            "title": "策略规则实例id",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policies/{policy_name}",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "instances": {
                "description": "策略实例列表。",
                "items": {
                  "description": "已删除的实例列表。",
                  "example": "[ \"allowed-repos-kqxnc\" ]",
                  "type": "string"
                },
                "title": "策略实例列表",
                "type": "array"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "调用DeletePolicyInstance在指定集群中删除策略规则实例。",
      "title": "在指定集群中删除策略规则实例"
    },
    "DeleteTemplate": {
      "consumes": [
        "application/json"
      ],
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteTemplate\n根据编排模板ID，删除指定编排模板。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "summary": "根据编排模板ID，删除指定编排模板。",
        "title": "删除编排模板"
      },
      "method": "delete",
      "name": "DeleteTemplate",
      "parameters": [
        {
          "in": "path",
          "name": "TemplateId",
          "required": true,
          "schema": {
            "description": "编排模板ID。",
            "example": "20663627-81ee-4cfe-9b69-c96fcb84a674",
            "required": true,
            "title": "模板ID。",
            "type": "string"
          }
        }
      ],
      "path": "/templates/{TemplateId}",
      "responses": {
        "200": {}
      },
      "summary": "根据编排模板ID，删除指定编排模板。",
      "title": "删除编排模板"
    },
    "DeleteTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeleteTrigger\n删除应用触发器。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "删除应用触发器。",
        "systemTags": {},
        "title": "删除触发器"
      },
      "method": "delete",
      "name": "DeleteTrigger",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c68deb844dc6d480eb775be611fdf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "Id",
          "required": true,
          "schema": {
            "description": "触发器ID。",
            "example": "123407",
            "required": true,
            "title": "触发器ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/[cluster_id]/triggers/[Id]",
      "responses": {
        "200": {
          "headers": {}
        }
      },
      "summary": "删除应用触发器。",
      "title": "删除触发器"
    },
    "DeployPolicyInstance": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DeployPolicyInstance\n调用DeployPolicyInstance在指定集群中部署策略规则实例。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"instances\\\": [\\n    \\\"[ \\\\\\\"allowed-repos-kqxnc\\\\\\\" ]\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeployPolicyInstanceResponse>\\n    <instances>allowed-repos-kqxnc</instances>\\n</DeployPolicyInstanceResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DeployPolicyInstance在指定集群中部署策略规则实例。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "在指定集群中部署策略规则实例"
      },
      "method": "post",
      "name": "DeployPolicyInstance",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID。",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群id",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "policy_name",
          "required": true,
          "schema": {
            "description": "策略治理规则名称。",
            "example": "ACKNoEnvVarSecrets",
            "required": true,
            "title": "策略治理规则名称",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求结构。",
            "properties": {
              "action": {
                "description": "规则治理动作，取值：\n\n- `deny`：拦截违规部署\n- `warn`：告警",
                "example": "deny",
                "required": false,
                "title": "规则治理动作",
                "type": "string"
              },
              "namespaces": {
                "description": "限制策略实施的命名空间，为空时表示所有命名空间。",
                "items": {
                  "description": "限制策略实施的命名空间，为空时表示所有命名空间。",
                  "example": "default",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "限制策略实施的命名空间，为空时表示所有命名空间",
                "type": "array"
              },
              "parameters": {
                "description": "当前规则实例的配置参数。",
                "example": "{\"restrictedNamespaces\": [ \"test\" ]}",
                "required": false,
                "title": "当前规则实例的配置参数",
                "type": "object"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policies/{policy_name}",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "instances": {
                "description": "策略实例列表。",
                "items": {
                  "description": "已部署的实例名称列表。",
                  "example": "[ \"allowed-repos-kqxnc\" ]",
                  "type": "string"
                },
                "title": "策略实例列表",
                "type": "array"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "调用DeployPolicyInstance在指定集群中部署策略规则实例。",
      "title": "在指定集群中部署策略规则实例"
    },
    "DescirbeWorkflow": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescirbeWorkflow\n调用DescribeWorkflow查询单个工作流的详细信息。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"create_time\\\": \\\"2020-01-15 16:30:25 +0800 CST\\\",\\n  \\\"duration\\\": \\\"1h15m33.529968361s\\\",\\n  \\\"finish_time\\\": \\\"0001-01-01 00:00:00 +0000 UTC\\\",\\n  \\\"input_data_size\\\": \\\"0\\\",\\n  \\\"job_name\\\": \\\"wgs-gpu-97xfn\\\",\\n  \\\"job_namespace\\\": \\\"1171330362041663\\\",\\n  \\\"output_data_size\\\": \\\"0\\\",\\n  \\\"status\\\": \\\"Running\\\",\\n  \\\"total_bases\\\": \\\"0\\\",\\n  \\\"total_reads\\\": \\\"0\\\",\\n  \\\"user_input_data\\\": \\\"{\\\\\\\\\\\\\\\"wgs_oss_region\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"cn-shenzhen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_fastq_first_name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"fastq/huada/MGISEQ-200019SZ0002402\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_fastq_second_name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"fastq/huada/MGISEQ-200019SZ0002402\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_bucket_name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"gene-shenzhen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_vcf_file_name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"output/vcf/huada.vcf\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_bam_file_name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"output/bam/huada.bam\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_reference_file\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hg19\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"wgs_service\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"g\\\\\\\\\\\\\\\"}\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<create_time>2020-01-15 16:30:25 +0800 CST</create_time>\\n<duration>1h15m33.529968361s</duration>\\n<finish_time>0001-01-01 00:00:00 +0000 UTC</finish_time>\\n<input_data_size>0</input_data_size>\\n<job_name>wgs-gpu-97xfn</job_name>\\n<job_namespace>1171330362041663</job_namespace>\\n<output_data_size>0</output_data_size>\\n<status>Running</status>\\n<total_bases>0</total_bases>\\n<total_reads>0</total_reads>\\n<user_input_data>{\\\\\\\"wgs_oss_region\\\\\\\":\\\\\\\"cn-shenzhen\\\\\\\",\\\\\\\"wgs_fastq_first_name\\\\\\\":\\\\\\\"fastq/huada/MGISEQ-200019SZ0002402\\\\\\\",\\\\\\\"wgs_fastq_second_name\\\\\\\":\\\\\\\"fastq/huada/MGISEQ-200019SZ0002402\\\\\\\",\\\\\\\"wgs_bucket_name\\\\\\\":\\\\\\\"gene-shenzhen\\\\\\\",\\\\\\\"wgs_vcf_file_name\\\\\\\":\\\\\\\"output/vcf/huada.vcf\\\\\\\",\\\\\\\"wgs_bam_file_name\\\\\\\":\\\\\\\"output/bam/huada.bam\\\\\\\",\\\\\\\"wgs_reference_file\\\\\\\":\\\\\\\"hg19\\\\\\\",\\\\\\\"wgs_service\\\\\\\":\\\\\\\"g\\\\\\\"}</user_input_data>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribeWorkflow查询单个工作流的详细信息。",
        "title": "查询已创建的所有工作流"
      },
      "method": "get",
      "name": "DescirbeWorkflow",
      "parameters": [
        {
          "in": "path",
          "name": "workflowName",
          "required": true,
          "schema": {
            "description": "工作流名称",
            "docRequired": true,
            "example": "mapping-gpu-mhhgh",
            "required": true,
            "title": "工作流名称",
            "type": "string"
          }
        }
      ],
      "path": "/gs/workflow/{workflowName}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "create_time": {
                "description": "工作流创建时间。",
                "example": "2020-01-15 16:30:25 +0800 CST",
                "title": "工作流创建时间。",
                "type": "string"
              },
              "duration": {
                "description": "工作流经过时长。",
                "example": "1h15m33.529968361s",
                "title": "工作流经过时长。",
                "type": "string"
              },
              "finish_time": {
                "description": "任务结束时间。",
                "example": "0001-01-01 00:00:00 +0000 UTC",
                "title": "任务结束时间。",
                "type": "string"
              },
              "input_data_size": {
                "description": "输入数据大小。",
                "example": "0",
                "title": "输入数据大小。",
                "type": "string"
              },
              "job_name": {
                "description": "工作流名称。",
                "example": "wgs-gpu-97xfn",
                "title": "工作流名称。",
                "type": "string"
              },
              "job_namespace": {
                "description": "工作流所在命名空间。",
                "example": "1171330362041663",
                "title": "工作流所在命名空间。",
                "type": "string"
              },
              "output_data_size": {
                "description": "输出数据大小。",
                "example": "0",
                "title": "输出数据大小。",
                "type": "string"
              },
              "status": {
                "description": "工作流当前状态。",
                "example": "Running",
                "title": "工作流当前状态。",
                "type": "string"
              },
              "total_bases": {
                "description": "碱基对个数。",
                "example": "0",
                "title": "碱基对个数。",
                "type": "string"
              },
              "total_reads": {
                "description": "Reads个数。",
                "example": "0",
                "title": "Reads个数。",
                "type": "string"
              },
              "user_input_data": {
                "description": "用户输入参数。",
                "example": "{\\\"wgs_oss_region\\\":\\\"cn-shenzhen\\\",\\\"wgs_fastq_first_name\\\":\\\"fastq/huada/MGISEQ-200019SZ0002402\\\",\\\"wgs_fastq_second_name\\\":\\\"fastq/huada/MGISEQ-200019SZ0002402\\\",\\\"wgs_bucket_name\\\":\\\"gene-shenzhen\\\",\\\"wgs_vcf_file_name\\\":\\\"output/vcf/huada.vcf\\\",\\\"wgs_bam_file_name\\\":\\\"output/bam/huada.bam\\\",\\\"wgs_reference_file\\\":\\\"hg19\\\",\\\"wgs_service\\\":\\\"g\\\"}",
                "title": "用户输入参数。",
                "type": "string"
              }
            },
            "title": "返回体参数。",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribeWorkflow查询单个工作流的详细信息。",
      "title": "查询已创建的所有工作流"
    },
    "DescribeAddons": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeAddons\n查询平台支持的所有组件的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"ComponentGroups\\\": [\\n    {\\n      \\\"group_name\\\": \\\"storage\\\",\\n      \\\"items\\\": [\\n        {\\n          \\\"name\\\": \\\"flexvolume\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"StandardComponents\\\": {\\n    \\\"key\\\": {\\n      \\\"name\\\": \\\"ack-arena\\\",\\n      \\\"version\\\": \\\"0.5.0\\\",\\n      \\\"description\\\": \\\"***\\\",\\n      \\\"required\\\": \\\"false\\\",\\n      \\\"disabled\\\": false\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<StandardComponents>\\n    <cloud-controller-manager>\\n        <name>cloud-controller-manager</name>\\n        <version>v1.9.3.339-g9830b58-aliyun</version>\\n        <disabled>false</disabled>\\n        <required>true</required>\\n        <description>name: Cloud Controller Manager introduction: Using Cloud Controller Manager to create load balancers for k8s applications and manage node route entries doc:en: https://www.alibabacloud.com/help/doc-detail/94925.htm</description>\\n    </cloud-controller-manager>\\n    <csi-plugin>\\n        <name>csi-plugin</name>\\n        <version>v1.16.9.43-f36bb540-aliyun</version>\\n        <disabled>false</disabled>\\n        <required>false</required>\\n        <description>csi-plugin</description>\\n    </csi-plugin>\\n</StandardComponents>\\n<ComponentGroups>\\n    <group_name>storage</group_name>\\n    <items>\\n        <name>flexvolume</name>\\n    </items>\\n    <items>\\n        <name>alicloud-disk-controller</name>\\n    </items>\\n    <items>\\n        <name>csi-plugin</name>\\n    </items>\\n    <items>\\n        <name>csi-provisioner</name>\\n    </items>\\n</ComponentGroups>\\n<ComponentGroups>\\n    <group_name>network</group_name>\\n    <items>\\n        <name>kube-flannel-ds</name>\\n    </items>\\n    <items>\\n        <name>terway</name>\\n    </items>\\n    <items>\\n        <name>terway-eni</name>\\n    </items>\\n    <items>\\n        <name>terway-eniip</name>\\n    </items>\\n    <items>\\n        <name>nginx-ingress-controller</name>\\n    </items>\\n    <items>\\n        <name>coredns</name>\\n    </items>\\n    <items>\\n        <name>managed-kube-proxy</name>\\n    </items>\\n</ComponentGroups>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "summary": "查询平台支持的所有组件的详情。",
        "title": "查询集群组件详情"
      },
      "method": "get",
      "name": "DescribeAddons",
      "parameters": [
        {
          "in": "query",
          "name": "region",
          "required": true,
          "schema": {
            "description": "集群所在地域ID。",
            "example": "cn-beijing",
            "required": true,
            "title": "地域ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_type",
          "required": false,
          "schema": {
            "description": "集群类型，取值：\n\n- `Kubernetes`: ACK专有版集群。\n- `ManagedKubernetes`：ACK托管版集群，包括ACK Pro版集群、ACK基础版集群、ACK Serverless Pro版集群、ACK Serverless基础版集群、ACK Edge Pro版集群、ACK Edge基础版。\n- `ExternalKubernetes`：ACK注册集群。",
            "example": "ManagedKubernetes",
            "required": false,
            "title": "集群类型。  - Kubernetes: 专有版集群。 - ManagedKubernetes：托管版集群。 - Ask：Serverless 集群。 - ExternalKubernetes：注册到ACK的外部集群。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_profile",
          "required": false,
          "schema": {
            "description": "集群类型，取值：\n- `Default`：托管版集群。\n- `Serverless`：Serverless集群。\n- `Edge`：边缘集群。",
            "example": "Default",
            "required": false,
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_spec",
          "required": false,
          "schema": {
            "description": "集群规格，当集群类型选择`ManagedKubernetes`时，通过集群规格区分集群的类型，取值：\n- `ack.pro.small`：专业托管集群，即ACK Pro版集群。\n- `ack.standard`：标准托管集群。\n\n默认值为空值，取值可以为空，为空时不通过该字段进行过滤。",
            "example": "ack.pro.small",
            "required": false,
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_version",
          "required": false,
          "schema": {
            "description": "集群版本。",
            "example": "1.24.6-aliyun.1",
            "required": false,
            "type": "string"
          }
        }
      ],
      "path": "/clusters/components/metadata",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "ComponentGroups": {
                "description": "组件分组列表。",
                "items": {
                  "description": "组件分组详情。",
                  "properties": {
                    "group_name": {
                      "description": "组件分组名称。",
                      "example": "storage",
                      "title": "组件组名称。",
                      "type": "string"
                    },
                    "items": {
                      "description": "该分组内包含的组件名称。",
                      "items": {
                        "description": "组件详情。",
                        "properties": {
                          "name": {
                            "description": "组件名称。",
                            "example": "flexvolume",
                            "title": "组件名称。",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "title": "组件列表",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "title": "组件分组信息，例如：存储类组件，网络组件等。",
                "type": "array"
              },
              "StandardComponents": {
                "additionalProperties": {
                  "description": "标准组件的详细信息。",
                  "properties": {
                    "description": {
                      "description": "组件功能说明。",
                      "example": "***",
                      "title": "组件描述信息。",
                      "type": "string"
                    },
                    "disabled": {
                      "description": "是否禁止默认安装，集群创建时除了安装集群所需的组件外，还会额外安装一些与日志或者路由相关的组件（例如：Ingress），如果您不想默认安装，可通过设置该字段禁止默认安装。取值：\n\n- `true`：禁止默认安装。\n- `false`：默认安装。",
                      "example": "false",
                      "title": "是否禁止默认安装。",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "组件名称。",
                      "example": "ack-arena",
                      "title": "组件名称。",
                      "type": "string"
                    },
                    "required": {
                      "description": "是否为集群必需组件。取值：\n\n- `true`：必需组件，集群创建时必须要安装的组件。\n\n- `false`：非必需组件，集群创建完成后，可通过`组件管理`进行安装。\n",
                      "example": "false",
                      "title": "是否为必需组件。",
                      "type": "string"
                    },
                    "version": {
                      "description": "组件版本。",
                      "example": "0.5.0",
                      "title": "组件版本。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": "标准组件。",
                "title": "标准组件信息，包含各个组件的描述信息。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "查询平台支持的所有组件的详情。",
      "title": "查询集群组件详情"
    },
    "DescribeClusterAddonInstance": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAddonInstance\n调用DescribeClusterAddonInstance查询已安装的集群组件的版本、状态和配置等信息。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"name\\\": \\\"terway-eniip\\\",\\n  \\\"version\\\": \\\"v1.4.3\\\",\\n  \\\"state\\\": \\\"active\\\",\\n  \\\"config\\\": \\\"{\\\\\\\"NetworkPolicy\\\\\\\":\\\\\\\"true\\\\\\\"}\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterAddonInstanceResponse>\\n    <name>terway-eniip</name>\\n    <version>v1.4.3</version>\\n    <state>active</state>\\n    <config>{\\\"NetworkPolicy\\\":\\\"true\\\"}</config>\\n</DescribeClusterAddonInstanceResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "调用DescribeClusterAddonInstance查询已安装的集群组件的版本、状态和配置等信息。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群组件实例信息"
      },
      "method": "get",
      "name": "DescribeClusterAddonInstance",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterID",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "cd06bbf8a86764a31bcac76136691****",
            "required": false,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "AddonName",
          "required": false,
          "schema": {
            "description": "组件名称。",
            "example": "terway-eniip",
            "required": false,
            "title": "组件名称。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterID}/components/{AddonName}/instance",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "config": {
                "description": "组件配置。",
                "example": "{\"NetworkPolicy\":\"true\"}",
                "title": "组件配置。",
                "type": "string"
              },
              "name": {
                "description": "组件名称。",
                "example": "terway-eniip",
                "title": "组件名称。",
                "type": "string"
              },
              "state": {
                "description": "组件状态：\n\n- initial：安装中\n- active：已安装\n- unhealthy：状态异常\n- upgrading：升级中\n- updating：变更中\n- deleting：卸载中\n- deleted：已删除",
                "enum": [
                  "initial",
                  "active",
                  "unhealthy",
                  "upgrading",
                  "updating",
                  "deleting",
                  "deleted"
                ],
                "example": "active",
                "title": "组件状态。",
                "type": "string"
              },
              "version": {
                "description": "组件版本。",
                "example": "v1.4.3",
                "title": "组件版本。",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribeClusterAddonInstance查询已安装的集群组件的版本、状态和配置等信息。",
      "title": "查询集群组件实例信息"
    },
    "DescribeClusterAddonMetadata": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAddonMetadata\n调用DescribeClusterAddonMetadata查询特定集群可使用的指定组件版本信息，包括组件版本、可配置参数等。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"name\\\": \\\"coredns\\\",\\n  \\\"version\\\": \\\"1.8.4.1\\\",\\n  \\\"config_schema\\\": \\\"{\\\\\\\\n  \\\\\\\\\\\\\\\"$schema\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"https://json-schema.org/draft-07/schema#\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n    \\\\\\\\\\\\\\\"controller\\\\\\\\\\\\\\\": {\\\\\\\\n      \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n        \\\\\\\\\\\\\\\"resources\\\\\\\\\\\\\\\": {\\\\\\\\n          \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n            \\\\\\\\\\\\\\\"armsPrometheusOperator\\\\\\\\\\\\\\\": {\\\\\\\\n              \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n                \\\\\\\\\\\\\\\"resources\\\\\\\\\\\\\\\": {\\\\\\\\n                  \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n                    \\\\\\\\\\\\\\\"limits\\\\\\\\\\\\\\\": {\\\\\\\\n                      \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n                        \\\\\\\\\\\\\\\"memory\\\\\\\\\\\\\\\": {\\\\\\\\n                          \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"memory limit of arms prometheus operator\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"^[1-9][0-9]*(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"500m\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-prompt-message\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-validation-message\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-additional-tips\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\"\\\\\\\\n                        },\\\\\\\\n                        \\\\\\\\\\\\\\\"cpu\\\\\\\\\\\\\\\": {\\\\\\\\n                          \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"cpu limit of arms prometheus operator\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"^[1-9][0-9]*(m|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\d+)?$\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"1.0\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-validation-message\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                      },\\\\\\\\n                      \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n                      \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n                    },\\\\\\\\n                    \\\\\\\\\\\\\\\"requests\\\\\\\\\\\\\\\": {\\\\\\\\n                      \\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\": {\\\\\\\\n                        \\\\\\\\\\\\\\\"memory\\\\\\\\\\\\\\\": {\\\\\\\\n                          \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"memory request of arms prometheus operator\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"^[1-9][0-9]*(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"500m\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-validation-message\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\"\\\\\\\\n                        },\\\\\\\\n                        \\\\\\\\\\\\\\\"cpu\\\\\\\\\\\\\\\": {\\\\\\\\n                          \\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"cpu request of arms prometheus operator\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"^[1-9][0-9]*(m|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\d+)?$\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"1.0\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-description\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\",\\\\\\\\n                          \\\\\\\\\\\\\\\"x-ui-validation-message\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"<mds-key>\\\\\\\\\\\\\\\"\\\\\\\\n                        }\\\\\\\\n                      },\\\\\\\\n                      \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n                      \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n                    }\\\\\\\\n                  },\\\\\\\\n                  \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n                  \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n                }\\\\\\\\n              },\\\\\\\\n              \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n              \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n            }\\\\\\\\n          },\\\\\\\\n          \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n          \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n        }\\\\\\\\n      },\\\\\\\\n      \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n    }\\\\\\\\n  },\\\\\\\\n  \\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\n  \\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\": false\\\\\\\\n}\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterAddonMetadataResponse>\\n    <name>coredns</name>\\n    <version>1.8.4.1</version>\\n    <config_schema>{\\\\n  \\\\\\\"$schema\\\\\\\": \\\\\\\"https://json-schema.org/draft-07/schema#\\\\\\\",\\\\n  \\\\\\\"properties\\\\\\\": {\\\\n    \\\\\\\"controller\\\\\\\": {\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"properties\\\\\\\": {\\\\n        \\\\\\\"resources\\\\\\\": {\\\\n          \\\\\\\"properties\\\\\\\": {\\\\n            \\\\\\\"armsPrometheusOperator\\\\\\\": {\\\\n              \\\\\\\"properties\\\\\\\": {\\\\n                \\\\\\\"resources\\\\\\\": {\\\\n                  \\\\\\\"properties\\\\\\\": {\\\\n                    \\\\\\\"limits\\\\\\\": {\\\\n                      \\\\\\\"properties\\\\\\\": {\\\\n                        \\\\\\\"memory\\\\\\\": {\\\\n                          \\\\\\\"description\\\\\\\": \\\\\\\"memory limit of arms prometheus operator\\\\\\\",\\\\n                          \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n                          \\\\\\\"pattern\\\\\\\": \\\\\\\"^[1-9][0-9]*(\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\\\\\",\\\\n                          \\\\\\\"default\\\\\\\": \\\\\\\"500m\\\\\\\",\\\\n                          \\\\\\\"x-ui-description\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-prompt-message\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-validation-message\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-additional-tips\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\"\\\\n                        },\\\\n                        \\\\\\\"cpu\\\\\\\": {\\\\n                          \\\\\\\"description\\\\\\\": \\\\\\\"cpu limit of arms prometheus operator\\\\\\\",\\\\n                          \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n                          \\\\\\\"pattern\\\\\\\": \\\\\\\"^[1-9][0-9]*(m|\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?$\\\\\\\",\\\\n                          \\\\\\\"default\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\\n                          \\\\\\\"x-ui-description\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-validation-message\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\"\\\\n                        }\\\\n                      },\\\\n                      \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n                      \\\\\\\"additionalProperties\\\\\\\": false\\\\n                    },\\\\n                    \\\\\\\"requests\\\\\\\": {\\\\n                      \\\\\\\"properties\\\\\\\": {\\\\n                        \\\\\\\"memory\\\\\\\": {\\\\n                          \\\\\\\"description\\\\\\\": \\\\\\\"memory request of arms prometheus operator\\\\\\\",\\\\n                          \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n                          \\\\\\\"pattern\\\\\\\": \\\\\\\"^[1-9][0-9]*(\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\\\\\",\\\\n                          \\\\\\\"default\\\\\\\": \\\\\\\"500m\\\\\\\",\\\\n                          \\\\\\\"x-ui-description\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-validation-message\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\"\\\\n                        },\\\\n                        \\\\\\\"cpu\\\\\\\": {\\\\n                          \\\\\\\"description\\\\\\\": \\\\\\\"cpu request of arms prometheus operator\\\\\\\",\\\\n                          \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n                          \\\\\\\"pattern\\\\\\\": \\\\\\\"^[1-9][0-9]*(m|\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+)?$\\\\\\\",\\\\n                          \\\\\\\"default\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\\n                          \\\\\\\"x-ui-description\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\",\\\\n                          \\\\\\\"x-ui-validation-message\\\\\\\": \\\\\\\"&lt;mds-key&gt;\\\\\\\"\\\\n                        }\\\\n                      },\\\\n                      \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n                      \\\\\\\"additionalProperties\\\\\\\": false\\\\n                    }\\\\n                  },\\\\n                  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n                  \\\\\\\"additionalProperties\\\\\\\": false\\\\n                }\\\\n              },\\\\n              \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n              \\\\\\\"additionalProperties\\\\\\\": false\\\\n            }\\\\n          },\\\\n          \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n          \\\\\\\"additionalProperties\\\\\\\": false\\\\n        }\\\\n      },\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n      \\\\\\\"additionalProperties\\\\\\\": false\\\\n    }\\\\n  },\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Values\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n  \\\\\\\"additionalProperties\\\\\\\": false\\\\n}</config_schema>\\n</DescribeClusterAddonMetadataResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribeClusterAddonMetadata查询特定集群可使用的指定组件版本信息，包括组件版本、可配置参数等。",
        "title": "查询集群组件元数据"
      },
      "method": "get",
      "name": "DescribeClusterAddonMetadata",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID",
            "example": "c71d616e629ff40d5b42d7bb87770****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "component_id",
          "required": true,
          "schema": {
            "description": "组件ID",
            "example": "coredns",
            "required": true,
            "title": "组件ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "version",
          "required": false,
          "schema": {
            "description": "组件版本",
            "example": "1.8.4.1",
            "required": false,
            "title": "组件版本",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/components/{component_id}/metadata",
      "responses": {
        "200": {
          "schema": {
            "description": "组件版本元数据",
            "properties": {
              "config_schema": {
                "description": "组件参数Schema",
                "example": "{\\n  \\\"$schema\\\": \\\"https://json-schema.org/draft-07/schema#\\\",\\n  \\\"properties\\\": {\\n    \\\"controller\\\": {\\n      \\\"description\\\": \\\"\\\",\\n      \\\"properties\\\": {\\n        \\\"resources\\\": {\\n          \\\"properties\\\": {\\n            \\\"armsPrometheusOperator\\\": {\\n              \\\"properties\\\": {\\n                \\\"resources\\\": {\\n                  \\\"properties\\\": {\\n                    \\\"limits\\\": {\\n                      \\\"properties\\\": {\\n                        \\\"memory\\\": {\\n                          \\\"description\\\": \\\"memory limit of arms prometheus operator\\\",\\n                          \\\"type\\\": \\\"string\\\",\\n                          \\\"pattern\\\": \\\"^[1-9][0-9]*(\\\\\\\\.\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\",\\n                          \\\"default\\\": \\\"500m\\\",\\n                          \\\"x-ui-description\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-prompt-message\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-validation-message\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-additional-tips\\\": \\\"<mds-key>\\\"\\n                        },\\n                        \\\"cpu\\\": {\\n                          \\\"description\\\": \\\"cpu limit of arms prometheus operator\\\",\\n                          \\\"type\\\": \\\"string\\\",\\n                          \\\"pattern\\\": \\\"^[1-9][0-9]*(m|\\\\\\\\.\\\\\\\\d+)?$\\\",\\n                          \\\"default\\\": \\\"1.0\\\",\\n                          \\\"x-ui-description\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-validation-message\\\": \\\"<mds-key>\\\"\\n                        }\\n                      },\\n                      \\\"type\\\": \\\"object\\\",\\n                      \\\"additionalProperties\\\": false\\n                    },\\n                    \\\"requests\\\": {\\n                      \\\"properties\\\": {\\n                        \\\"memory\\\": {\\n                          \\\"description\\\": \\\"memory request of arms prometheus operator\\\",\\n                          \\\"type\\\": \\\"string\\\",\\n                          \\\"pattern\\\": \\\"^[1-9][0-9]*(\\\\\\\\.\\\\\\\\d+)?(K|Ki|M|Mi|G|Gi|T|Ti)?$\\\",\\n                          \\\"default\\\": \\\"500m\\\",\\n                          \\\"x-ui-description\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-validation-message\\\": \\\"<mds-key>\\\"\\n                        },\\n                        \\\"cpu\\\": {\\n                          \\\"description\\\": \\\"cpu request of arms prometheus operator\\\",\\n                          \\\"type\\\": \\\"string\\\",\\n                          \\\"pattern\\\": \\\"^[1-9][0-9]*(m|\\\\\\\\.\\\\\\\\d+)?$\\\",\\n                          \\\"default\\\": \\\"1.0\\\",\\n                          \\\"x-ui-description\\\": \\\"<mds-key>\\\",\\n                          \\\"x-ui-validation-message\\\": \\\"<mds-key>\\\"\\n                        }\\n                      },\\n                      \\\"type\\\": \\\"object\\\",\\n                      \\\"additionalProperties\\\": false\\n                    }\\n                  },\\n                  \\\"type\\\": \\\"object\\\",\\n                  \\\"additionalProperties\\\": false\\n                }\\n              },\\n              \\\"type\\\": \\\"object\\\",\\n              \\\"additionalProperties\\\": false\\n            }\\n          },\\n          \\\"type\\\": \\\"object\\\",\\n          \\\"additionalProperties\\\": false\\n        }\\n      },\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"additionalProperties\\\": false\\n    }\\n  },\\n  \\\"title\\\": \\\"Values\\\",\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"additionalProperties\\\": false\\n}",
                "title": "组件参数Schema",
                "type": "string"
              },
              "name": {
                "description": "组件名称",
                "example": "coredns",
                "title": "组件名称",
                "type": "string"
              },
              "version": {
                "description": "组件版本",
                "example": "1.8.4.1",
                "title": "组件版本",
                "type": "string"
              }
            },
            "title": "组件版本元数据",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribeClusterAddonMetadata查询特定集群可使用的指定组件版本信息，包括组件版本、可配置参数等。",
      "title": "查询集群组件元数据"
    },
    "DescribeClusterAddonUpgradeStatus": {
      "consumes": [
        "application/json"
      ],
      "deprecated": true,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAddonUpgradeStatus\n调用DescribeClusterAddonUpgradeStatus查询集群组件升级状态。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"key\\\": {\\n    \\\"addon_info\\\": {\\n      \\\"component_name\\\": \\\"cloud-controller-manager\\\",\\n      \\\"version\\\": \\\"v1.9.3.340-g9830b58-aliyun\\\",\\n      \\\"ready_to_upgrade\\\": \\\"true\\\"\\n    },\\n    \\\"tasks\\\": {\\n      \\\"created_at\\\": \\\"0001-01-01T00:00:00Z\\\",\\n      \\\"finished_at\\\": \\\"0001-01-01T00:00:00Z\\\",\\n      \\\"status\\\": \\\"Success\\\",\\n      \\\"is_canceled\\\": false\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<cloud-controller-manager>\\n    <tasks>\\n        <created_at>2020-12-28T16:05:32Z</created_at>\\n        <finished_at>2020-12-28T16:06:54Z</finished_at>\\n        <is_canceled>false</is_canceled>\\n        <status>Success</status>\\n    </tasks>\\n    <addon_info>\\n        <component_name>cloud-controller-manager</component_name>\\n        <version>v1.9.3.340-g9830b58-aliyun</version>\\n        <ready_to_upgrade>true</ready_to_upgrade>\\n    </addon_info>\\n</cloud-controller-manager>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "substitutions": [
            "CS::2015-12-15::DescribeClusterAddonsUpgradeStatus"
          ]
        },
        "summary": "调用DescribeClusterAddonUpgradeStatus查询集群组件升级状态。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群Addons升级状态"
      },
      "method": "get",
      "name": "DescribeClusterAddonUpgradeStatus",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "ComponentId",
          "required": true,
          "schema": {
            "description": "组件ID，例如：nginx-ingress-controller、flexvolume、metrics-server。\n\n集群支持的组件，可通过API `DescribeAddons` 进行查询。",
            "example": "cloud-controller-manager",
            "required": true,
            "title": "组件ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/{ComponentId}/upgradestatus",
      "responses": {
        "200": {
          "schema": {
            "additionalProperties": {
              "description": "组件升级状态详情。",
              "properties": {
                "addon_info": {
                  "description": "组件信息。",
                  "properties": {
                    "component_name": {
                      "description": "组件名称。",
                      "example": "cloud-controller-manager",
                      "title": "组件名称",
                      "type": "string"
                    },
                    "ready_to_upgrade": {
                      "description": "是否满足升级条件。取值：\n\n- `true`：满足升级条件。\n- `false`：不满足升级条件。",
                      "example": "true",
                      "title": "是否满足升级条件",
                      "type": "string"
                    },
                    "version": {
                      "description": "组件当前版本。",
                      "example": "v1.9.3.340-g9830b58-aliyun",
                      "title": "组件版本",
                      "type": "string"
                    }
                  },
                  "title": "组件详情",
                  "type": "object"
                },
                "tasks": {
                  "description": "升级任务详情。",
                  "properties": {
                    "created_at": {
                      "description": "\t\n升级开始时间。",
                      "example": "0001-01-01T00:00:00Z",
                      "title": "升级开始时间",
                      "type": "string"
                    },
                    "finished_at": {
                      "description": "升级完成时间。",
                      "example": "0001-01-01T00:00:00Z",
                      "title": "升级完成时间",
                      "type": "string"
                    },
                    "is_canceled": {
                      "description": "升级任务是否被取消。取值：\n\n- `true`：任务被取消。\n- `false`：任务未被取消。",
                      "example": "false",
                      "title": "任务是否被取消",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "升级任务状态。",
                      "example": "Success",
                      "title": "升级任务状态",
                      "type": "string"
                    }
                  },
                  "title": "升级任务详情",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "返回体参数。",
            "title": "组件升级状态",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribeClusterAddonUpgradeStatus查询集群组件升级状态。",
      "title": "查询集群Addons升级状态"
    },
    "DescribeClusterAddonsUpgradeStatus": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAddonsUpgradeStatus\n根据组件名称查询该组件升级状态。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"key\\\": {\\n    \\\"addon_info\\\": {\\n      \\\"component_name\\\": \\\"cloud-controller-manager\\\",\\n      \\\"version\\\": \\\"v1.9.3.340-g9830b58-aliyun\\\",\\n      \\\"ready_to_upgrade\\\": \\\"true\\\"\\n    },\\n    \\\"tasks\\\": {\\n      \\\"created_at\\\": \\\"2020-12-28T17:00:50Z\\\",\\n      \\\"finished_at\\\": \\\"2020-12-28T17:05:36Z\\\",\\n      \\\"status\\\": \\\"Success\\\",\\n      \\\"is_canceled\\\": false\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterAddonsUpgradeStatusResponse>\\n    <key>\\n        <addon_info>\\n            <component_name>cloud-controller-manager</component_name>\\n            <version>v1.9.3.340-g9830b58-aliyun</version>\\n            <ready_to_upgrade>true</ready_to_upgrade>\\n        </addon_info>\\n        <tasks>\\n            <created_at>2020-12-28T17:00:50Z</created_at>\\n            <finished_at>2020-12-28T17:05:36Z</finished_at>\\n            <status>Success</status>\\n            <is_canceled>false</is_canceled>\\n        </tasks>\\n    </key>\\n</DescribeClusterAddonsUpgradeStatusResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据组件名称查询该组件升级状态。",
        "title": "查询集群组件升级状态"
      },
      "method": "get",
      "name": "DescribeClusterAddonsUpgradeStatus",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "componentIds",
          "required": true,
          "schema": {
            "description": "组件名称列表。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "组件名称。",
              "example": "metric-server",
              "required": true,
              "type": "string"
            },
            "required": true,
            "title": "组件名称列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/upgradestatus",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "additionalProperties": {
              "description": "组件升级状态详情。",
              "properties": {
                "addon_info": {
                  "description": "组件信息。",
                  "properties": {
                    "component_name": {
                      "description": "组件名称。",
                      "example": "cloud-controller-manager",
                      "title": "组件名称",
                      "type": "string"
                    },
                    "ready_to_upgrade": {
                      "description": "组件是否满足升级条件。取值：\n\n- `true`：满足升级条件。\n- `false`：不满足升级条件。",
                      "example": "true",
                      "title": "组件是否满足升级条件",
                      "type": "string"
                    },
                    "version": {
                      "description": "组件当前版本。\n",
                      "example": "v1.9.3.340-g9830b58-aliyun",
                      "title": "组件版本",
                      "type": "string"
                    }
                  },
                  "title": "组件信息",
                  "type": "object"
                },
                "tasks": {
                  "description": "升级任务详情。",
                  "properties": {
                    "created_at": {
                      "description": "任务开始时间。",
                      "example": "2020-12-28T17:00:50Z",
                      "title": "升级任务创建时间",
                      "type": "string"
                    },
                    "finished_at": {
                      "description": "任务完成时间。",
                      "example": "2020-12-28T17:05:36Z",
                      "title": "升级任务完成时间",
                      "type": "string"
                    },
                    "is_canceled": {
                      "description": "升级任务是否被取消。取值：\n\n- `true`：任务被取消。\n- `false`：任务未被取消。",
                      "example": "false",
                      "title": "升级任务是否被取消。",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "升级任务状态。取值：\n- `Upgrading`：升级中。\n- `Success`：成功。\n- ` Failed`：失败。\n- ` Running`：安装中。\n- `Paused`：暂停中。\n- `Canceled`：已取消。",
                      "example": "Success",
                      "title": "升级任务状态",
                      "type": "string"
                    }
                  },
                  "title": "升级任务详情",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "\n返回数据体。",
            "title": "组件升级详情",
            "type": "object"
          }
        }
      },
      "summary": "根据组件名称查询该组件升级状态。",
      "title": "查询集群组件升级状态"
    },
    "DescribeClusterAddonsVersion": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAddonsVersion\n根据集群ID，查询集群中已安装的所有组件的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"key\\\": {\\n    \\\"component_name\\\": \\\"ack-node-problem-detector\\\",\\n    \\\"version\\\": \\\"1.2.1\\\",\\n    \\\"next_version\\\": \\\"1.2.1\\\",\\n    \\\"changed\\\": \\\"false\\\",\\n    \\\"can_upgrade\\\": false,\\n    \\\"policy\\\": \\\"overwrite\\\",\\n    \\\"ready_to_upgrade\\\": \\\"false\\\",\\n    \\\"exist\\\": true,\\n    \\\"required\\\": false,\\n    \\\"message\\\": \\\"节点故障检测以及上报至事件中心的插件\\\",\\n    \\\"value\\\": \\\"npd:\\\\\\\\n  # Custom monitor definitions to add to Node Problem Detector ****\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ack-node-problem-detector>\\n    <exist>true</exist>\\n    <component_name>ack-node-problem-detector</component_name>\\n    <can_upgrade>false</can_upgrade>\\n    <ready_to_upgrade>false</ready_to_upgrade>\\n    <message>节点故障检测以及上报至事件中心的插件</message>\\n    <version>1.2.1</version>\\n    <value>npd:\\n  # Custom monitor definitions to add to Node Problem Detector ****</value>\\n    <required>false</required>\\n    <next_version>1.2.1</next_version>\\n    <changed>false</changed>\\n    <policy>overwrite</policy>\\n</ack-node-problem-detector>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，查询集群中已安装的所有组件的详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群组件版本"
      },
      "method": "get",
      "name": "DescribeClusterAddonsVersion",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/version",
      "responses": {
        "200": {
          "schema": {
            "additionalProperties": {
              "description": "组件详情。",
              "properties": {
                "can_upgrade": {
                  "description": "组件是否可升级。取值：\n\n- `true`：组件可升级。\n- `false`：组件不可升级。",
                  "example": "false",
                  "title": "组件是否可以升级。",
                  "type": "boolean"
                },
                "changed": {
                  "description": "组件是否有更新。取值：\n\n- `true`：已更新。\n- `false`：未更新。",
                  "example": "false",
                  "title": "组件是否升级过。",
                  "type": "string"
                },
                "component_name": {
                  "description": "组件名称。",
                  "example": "ack-node-problem-detector",
                  "title": "组件名称",
                  "type": "string"
                },
                "exist": {
                  "description": "是否可以在集群中安装该组件。取值：\n\n- `true`：可安装。\n- `false`：不可安装。",
                  "example": "true",
                  "title": "组件是否已经存在",
                  "type": "boolean"
                },
                "message": {
                  "description": "组件是否可升级的额外说明。",
                  "example": "节点故障检测以及上报至事件中心的插件",
                  "title": "组件描述信息",
                  "type": "string"
                },
                "next_version": {
                  "description": "下一个可升级版本。",
                  "example": "1.2.1",
                  "title": "组件可升级版本",
                  "type": "string"
                },
                "policy": {
                  "description": "组件升级策略。\n\n- `overwrite`：强制覆盖。\n\n默认值：`overwrite`。\n\n",
                  "example": "overwrite",
                  "title": "组件升级策略",
                  "type": "string"
                },
                "ready_to_upgrade": {
                  "description": "组件是否满足升级条件。取值：\n\n- `true`：满足升级条件。\n- `false`：不满足升级条件。",
                  "example": "false",
                  "title": "组件是否满足升级条件",
                  "type": "string"
                },
                "required": {
                  "description": "组件是否为集群必需组件。取值：\n\n- `true`：为必需组件。\n- `false`：非必需组件。",
                  "example": "false",
                  "title": "组件是否为集群必需。",
                  "type": "boolean"
                },
                "value": {
                  "description": "组件安装时，用户自定义的参数值。",
                  "example": "npd:\\n  # Custom monitor definitions to add to Node Problem Detector ****",
                  "title": "安装addon的时候，用户自定义的参数值。Yaml字符串。",
                  "type": "string"
                },
                "version": {
                  "description": "组件当前版本。\n\n> 如果`version`值不为空，则表示该组件已经安装。",
                  "example": "1.2.1",
                  "title": "组件当前版本",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "返回体参数。",
            "title": "组件版本信息。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID，查询集群中已安装的所有组件的详情。",
      "title": "查询集群组件版本"
    },
    "DescribeClusterAttachScripts": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterAttachScripts\n查询手动添加实例到集群的脚本。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"\\\"\\\\\\\"curl http://aliacs-k8s-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/public/pkg/run/attach/1.12.6-aliyunedge.1/edgeadm -O edgeadm; chmod u+x edgeadm; ./edgeadm join --openapi-token=XXX --node-spec=\\\\\\\"{\\\\\\\\\\\\\\\"flannelIface\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"eth0\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"enableIptables\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"assumeYes\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"manageRuntime\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"nodeNameStrategy\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"hostname\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"enabledAddons\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"kube-proxy\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"flannel\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"coredns\\\\\\\\\\\\\\\"]}\\\\\\\"\\\\\\\"\\\"\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询手动添加实例到集群的脚本。",
        "title": "手动添加已有实例到集群"
      },
      "method": "post",
      "name": "DescribeClusterAttachScripts",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "ca375a93a30474552ad2a0ebe183e****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "amd64",
            "properties": {
              "arch": {
                "description": "节点CPU架构。支持的CPU架构包括`amd64`、`arm`、`arm64`。\n\n默认值：`amd64`。\n\n> 当集群类型为边缘托管版时必填。",
                "example": "amd64",
                "required": false,
                "title": "节点CPU架构,支持amd64、arm、arm64。边缘托管集群专有字段。",
                "type": "string"
              },
              "format_disk": {
                "description": "手动添加已有实例到集群时，是否对该实例进行数据盘挂载，将容器和镜像存储在数据盘上。取值：\n\n- `true`：对实例进行数据盘挂载，数据盘内原有数据将丢失，请注意备份数据。\n- `false`：不对实例进行数据盘挂载。\n\n默认值：`false`。\n\n数据挂载规则：\n\n- 如果 ECS 已挂载数据盘，且最后一块数据盘的文件系统未初始化，系统会自动将该数据盘格式化为 ext4，用来存放内容/var/lib/docker、/var/lib/kubelet 。\n- 如果 ECS 未挂载数据盘，则不会挂载新的数据盘。\n\n",
                "example": "false",
                "required": false,
                "title": "数据盘挂载",
                "type": "boolean"
              },
              "keep_instance_name": {
                "description": "添加已有实到集群时，是否保留实例名称。如果不保留，则实例名称格式为`worker-k8s-for-cs-<clusterid>`。取值：\n\n- `true`：保留实例名称。\n- `false`：不保留实例名称，会用系统规则进行替换。\n\n默认值：`true`。",
                "example": "true",
                "required": false,
                "title": "保留实例名称",
                "type": "boolean"
              },
              "nodepool_id": {
                "description": "节点池ID，添加节点时可以将该节点添加到指定的节点池中。\n\n> 如果不指定节点池ID，默认将节点添加至默认节点池。",
                "example": "np1c9229d9be2d432c93f77a88fca0****",
                "required": false,
                "title": "节点池ID。将节点加入指定节点池。",
                "type": "string"
              },
              "options": {
                "description": "节点的接入配置参数。\n\n> 当集群类型为边缘托管版时必填。",
                "example": "{\\\"enableIptables\\\": true,\\\"manageRuntime\\\": true,\\\"quiet\\\": true,\\\"allowedClusterAddons\\\": [\\\"kube-proxy\\\",\\\"flannel\\\",\\\"coredns\\\"]}",
                "required": false,
                "title": "边缘托管版集群节点的接入配置。",
                "type": "string"
              },
              "rds_instances": {
                "description": "如果指定了RDS实例列表，集群节点ECS会自动加入RDS访问白名单。",
                "items": {
                  "description": "RDS实例名称。",
                  "example": "rm-xxx",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "RDS白名单",
                "type": "array"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/attachscript",
      "responses": {
        "200": {
          "schema": {
            "description": "节点接入脚本。",
            "example": "\"curl http://aliacs-k8s-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/public/pkg/run/attach/1.12.6-aliyunedge.1/edgeadm -O edgeadm; chmod u+x edgeadm; ./edgeadm join --openapi-token=XXX --node-spec=\"{\\\"flannelIface\\\":\\\"eth0\\\",\\\"enableIptables\\\":true,\\\"assumeYes\\\":true,\\\"manageRuntime\\\":true,\\\"nodeNameStrategy\\\":\\\"hostname\\\",\\\"enabledAddons\\\":[\\\"kube-proxy\\\",\\\"flannel\\\",\\\"coredns\\\"]}\"\"",
            "title": "添加节点脚本。",
            "type": "string"
          }
        },
        "5XX": {}
      },
      "summary": "查询手动添加实例到集群的脚本。",
      "title": "手动添加已有实例到集群"
    },
    "DescribeClusterDetail": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterDetail\n根据集群ID查询该集群的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"cluster_id\\\": \\\"c82e6987e2961451182edacd74faf****\\\",\\n  \\\"cluster_type\\\": \\\"Kubernetes\\\",\\n  \\\"created\\\": \\\"2019-11-25T15:50:20+08:00\\\",\\n  \\\"init_version\\\": \\\"1.16.6-aliyun.1\\\",\\n  \\\"current_version\\\": \\\"1.16.6-aliyun.1\\\",\\n  \\\"deletion_protection\\\": true,\\n  \\\"docker_version\\\": \\\"19.03.5\\\",\\n  \\\"meta_data\\\": \\\"\\\\\\\\\\\\\\\"Addons\\\\\\\\\\\\\\\":***\\\",\\n  \\\"name\\\": \\\"cluster-demo\\\",\\n  \\\"region_id\\\": \\\"cn-beijing\\\",\\n  \\\"resource_group_id\\\": \\\"rg-acfmyvw3wjm****\\\",\\n  \\\"security_group_id\\\": \\\"sg-25yq****\\\",\\n  \\\"size\\\": 5,\\n  \\\"state\\\": \\\"running\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"key\\\": \\\"env\\\",\\n      \\\"value\\\": \\\"prod\\\"\\n    }\\n  ],\\n  \\\"updated\\\": \\\"2020-01-13T23:01:03+08:00\\\",\\n  \\\"vpc_id\\\": \\\"vpc-2zecuu62b9zw7a7qn****\\\",\\n  \\\"vswitch_id\\\": \\\"vsw-2zete8s4qocqg0mf6****,vsw-2zete8s4qocqg0mf6****\\\",\\n  \\\"subnet_cidr\\\": \\\"172.20.0.0/16\\\",\\n  \\\"master_url\\\": \\\"{\\\\\\\\\\\\\\\"intranet_api_server_endpoint\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://192.168.0.251:6443\\\\\\\\\\\\\\\"***}\\\",\\n  \\\"profile\\\": \\\"Default\\\",\\n  \\\"cluster_spec\\\": \\\"ack.pro.small\\\",\\n  \\\"worker_ram_role_name\\\": \\\"KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****\\\",\\n  \\\"maintenance_window\\\": {\\n    \\\"enable\\\": false,\\n    \\\"maintenance_time\\\": \\\"03:00:00Z\\\",\\n    \\\"duration\\\": \\\"3h\\\",\\n    \\\"weekly_period\\\": \\\"Monday,Thursday\\\"\\n  },\\n  \\\"parameters\\\": {\\n    \\\"key\\\": \\\"WorkerImageId\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<cluster_id>c82e6987e2961451182edacd74faf****</cluster_id>\\n<cluster_type>Kubernetes</cluster_type>\\n<created>2019-11-25T15:50:20+08:00</created>\\n<init_version>1.16.6-aliyun.1</init_version>\\n<current_version>1.16.6-aliyun.1</current_version>\\n<next_version>1.18.8-aliyun.1</next_version>\\n<deletion_protection>true</deletion_protection>\\n<docker_version>19.03.5</docker_version>\\n<external_loadbalancer_id>lb-2ze3buguz3gx9920z****</external_loadbalancer_id>\\n<meta_data>\\\\\\\"Addons\\\\\\\":***</meta_data>\\n<name>cluster-demo</name>\\n<network_mode>vpc</network_mode>\\n<region_id>cn-beijing</region_id>\\n<resource_group_id>rg-acfmyvw3wjm****</resource_group_id>\\n<security_group_id>sg-25yq****</security_group_id>\\n<size>5</size>\\n<state>running</state>\\n<tags>\\n    <key>env</key>\\n    <value>prod</value>\\n</tags>\\n<updated>2020-01-13T23:01:03+08:00</updated>\\n<vpc_id>vpc-2zecuu62b9zw7a7qn****</vpc_id>\\n<vswitch_id>vsw-2zete8s4qocqg0mf6****,vsw-2zete8s4qocqg0mf6****</vswitch_id>\\n<subnet_cidr>172.20.0.0/16</subnet_cidr>\\n<zone_id>cn-beijing-a</zone_id>\\n<master_url>{\\\\\\\"intranet_api_server_endpoint\\\\\\\":\\\\\\\"https://192.168.0.251:6443\\\\\\\"***}</master_url>\\n<private_zone>false</private_zone>\\n<profile>Default</profile>\\n<cluster_spec>ack.pro.small</cluster_spec>\\n<worker_ram_role_name>KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****</worker_ram_role_name>\\n<maintenance_window>\\n    <enable>false</enable>\\n    <maintenance_time>03:00:00Z</maintenance_time>\\n    <duration>3h</duration>\\n    <weekly_period>Monday,Thursday</weekly_period>\\n</maintenance_window>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID查询该集群的详情。",
        "title": "查询集群实例"
      },
      "method": "get",
      "name": "DescribeClusterDetail",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "cdde1f21ae22e483ebcb068a6eb7f****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "c82e6987e2961451182edacd74faf****",
                "title": "集群ID。",
                "type": "string"
              },
              "cluster_spec": {
                "description": "托管版集群类型，面向托管集群：\n\n- `ack.pro.small`：专业托管集群。\n- `ack.standard` ：标准托管集群。\n\n",
                "example": "ack.pro.small",
                "title": "托管版集群类型，面向托管集群。  ack.pro.small：专业托管集群。 ack.standard ：标准托管集群。",
                "type": "string"
              },
              "cluster_type": {
                "description": "集群类型，取值：\n\n- `Kubernetes`: ACK专有版集群。\n- `ManagedKubernetes`：ACK托管版集群，包括ACK Pro版集群、ACK基础版集群、ACK Serverless Pro版集群、ACK Serverless基础版集群、ACK Edge Pro版集群、ACK Edge基础版。\n- `ExternalKubernetes`：注册集群。",
                "example": "Kubernetes",
                "title": "集群类型。",
                "type": "string"
              },
              "created": {
                "description": "集群创建时间。",
                "example": "2019-11-25T15:50:20+08:00",
                "title": "集群创建时间。",
                "type": "string"
              },
              "current_version": {
                "description": "集群当前版本。ACK支持的Kubernetes版本，请参见[Kubernetes版本发布概览](https://help.aliyun.com/document_detail/185269.html)。",
                "example": "1.16.6-aliyun.1",
                "title": "集群当前版本。",
                "type": "string"
              },
              "deletion_protection": {
                "description": "集群删除保护，防止通过控制台或API误删除集群。取值：\n\n- `true`：启用集群删除保护，将不能通过控制台或API删除集群。\n- `false`：不启用集群删除保护，则能通过控制台或API删除集群。\n\n",
                "example": "true",
                "title": "集群是否开启删除保护。",
                "type": "boolean"
              },
              "docker_version": {
                "description": "集群中的Docker版本。",
                "example": "19.03.5",
                "title": "集群内Docker版本。",
                "type": "string"
              },
              "external_loadbalancer_id": {
                "example": "lb-2zehc05z3b8dwiifh****",
                "title": "集群Ingress LB实例ID。",
                "type": "string"
              },
              "init_version": {
                "description": "集群初始化版本。",
                "example": "1.16.6-aliyun.1",
                "title": "集群初始化版本。",
                "type": "string"
              },
              "maintenance_window": {
                "$ref": "#/definitions/maintenance_window",
                "description": "集群维护窗口配置，只在专业托管版本（即：ACK Pro版集群）中生效。",
                "isDefsType": true,
                "typeName": "maintenance_window"
              },
              "master_url": {
                "description": "集群访问地址，包含内网访问地址及公网访问地址。",
                "example": "{\\\"intranet_api_server_endpoint\\\":\\\"https://192.168.0.251:6443\\\"***}",
                "title": "集群访问地址。",
                "type": "string"
              },
              "meta_data": {
                "description": "集群元数据信息。",
                "example": "\\\"Addons\\\":***",
                "title": "集群元数据。",
                "type": "string"
              },
              "name": {
                "description": "集群名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                "example": "cluster-demo",
                "title": "集群名称。",
                "type": "string"
              },
              "network_mode": {
                "example": "vpc",
                "title": "集群采用的网络类型，例如：VPC网络。",
                "type": "string"
              },
              "next_version": {
                "example": "1.18.8-aliyun.1",
                "title": "集群可升级版本。",
                "type": "string"
              },
              "parameters": {
                "additionalProperties": {
                  "description": "ROS参数",
                  "example": "WorkerImageId",
                  "type": "string"
                },
                "description": "集群ROS参数集合。",
                "type": "object"
              },
              "private_zone": {
                "example": "false",
                "title": "集群是否启用用PrivateZone。  true：启用 false：不启用 默认值：false。",
                "type": "boolean"
              },
              "profile": {
                "description": "面向场景时的集群类型：\n\n- `Default`：非边缘场景集群。\n- `Edge`：边缘场景集群。\n\n",
                "example": "Default",
                "title": "面向场景时的集群类型。  Default：非边缘场景集群。 Edge：边缘场景集群。",
                "type": "string"
              },
              "region_id": {
                "description": "集群所在地域ID。",
                "example": "cn-beijing",
                "title": "集群所在地域ID。",
                "type": "string"
              },
              "resource_group_id": {
                "description": "集群资源组ID。",
                "example": "rg-acfmyvw3wjm****",
                "title": "集群资源组ID。",
                "type": "string"
              },
              "security_group_id": {
                "description": "集群安全组ID。",
                "example": "sg-25yq****",
                "title": "集群安全组ID。",
                "type": "string"
              },
              "size": {
                "description": "集群节点数，包含Master节点及Worker节点。",
                "example": "5",
                "format": "int64",
                "title": "集群节点数量。",
                "type": "integer"
              },
              "state": {
                "description": "集群运行状态，取值：\n\n- `initial`：集群创建中。\n- `failed`：集群创建失败。\n- `running`：集群运行中。\n- `updating`：集群升级中。\n- `updating_failed`：集群升级失败。\n- `scaling`：集群伸缩中。\n- `waiting`：等待接入状态。\n- `disconnected`：断开状态。\n- `stopped`：集群已经停止运行。\n- `deleting`：集群删除中。\n- `deleted`：集群已经被删除。\n- `delete_failed`：集群删除失败。   ",
                "example": "running",
                "title": "集群运行状态。",
                "type": "string"
              },
              "subnet_cidr": {
                "description": "Pod网络地址段，必须是有效的私有网段，即以下网段及其子网：\n- 10.0.0.0/8\n- 172.16-31.0.0/12-16\n- 192.168.0.0/16\n\n不能与VPC及VPC内已有Kubernetes集群使用的网段重复，创建成功后不能被修改。\n\n关于集群网络规划，请参见[VPC下Kubernetes的网络地址段规划](https://help.aliyun.com/document_detail/186964.html)。",
                "example": "172.20.0.0/16",
                "title": "Pod网络地址段，必须是有效的私有网段，即以下网段及其子网：10.0.0.0/8，172.16-31.0.0/12-16，192.168.0.0/16。不能与 VPC 及VPC 内已有 Kubernetes 集群使用的网段重复，创建成功后不能修改。  有关集群网络规划，请参见：[VPC下 Kubernetes 的网络地址段规划](https://help.aliyun.com/document_detail/～～86500～～)。",
                "type": "string"
              },
              "tags": {
                "description": "集群资源标签。",
                "items": {
                  "$ref": "#/definitions/tag",
                  "description": "集群资源标签。",
                  "isDefsType": true,
                  "typeName": "tag"
                },
                "title": "集群标签。",
                "type": "array"
              },
              "updated": {
                "description": "集群更新时间。",
                "example": "2020-01-13T23:01:03+08:00",
                "title": "集群更新时间。",
                "type": "string"
              },
              "vpc_id": {
                "description": "集群专有网络ID，创建集群时的必填参数。",
                "example": "vpc-2zecuu62b9zw7a7qn****",
                "title": "集群使用的VPC ID。",
                "type": "string"
              },
              "vswitch_id": {
                "description": "虚拟交换机ID，创建集群时可选择1~3个虚拟交换机。为保证集群高可用，建议选择不同可用区的虚拟交换机。",
                "example": "vsw-2zete8s4qocqg0mf6****,vsw-2zete8s4qocqg0mf6****",
                "title": "集群节点使用的虚拟交换机列表。",
                "type": "string"
              },
              "worker_ram_role_name": {
                "description": "Worker RAM角色名称，授权ECS实例为集群Woker节点。",
                "example": "KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****",
                "title": "Worker节点RAM角色名称。",
                "type": "string"
              },
              "zone_id": {
                "example": "cn-beijing-a",
                "title": "集群所在地域内的可用区ID。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID查询该集群的详情。",
      "title": "查询集群实例"
    },
    "DescribeClusterEvents": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterEvents\n查询指定集群的事件列表。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"events\\\": [\\n    {\\n      \\\"event_id\\\": \\\"e-9ad04f72-8ee7-46bf-a02c-e4a06b39****\\\",\\n      \\\"type\\\": \\\"nodepool_update\\\",\\n      \\\"source\\\": \\\"cluster\\\",\\n      \\\"subject\\\": \\\"npdd89dc2b76c04f14b06774883b******\\\",\\n      \\\"time\\\": \\\"2020-12-01T17:31:00Z\\\",\\n      \\\"cluster_id\\\": \\\"c82e6987e2961451182edacd74faf****\\\",\\n      \\\"data\\\": {\\n        \\\"level\\\": \\\"info\\\",\\n        \\\"reason\\\": \\\"Started\\\",\\n        \\\"message\\\": \\\"Start to upgrade NodePool nodePool/npdd89dc2b76c04f14b06774883b******\\\"\\n      }\\n    }\\n  ],\\n  \\\"page_info\\\": {\\n    \\\"page_size\\\": 50,\\n    \\\"page_number\\\": 1,\\n    \\\"total_count\\\": 3\\n  }\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询指定集群的事件列表。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群事件列表"
      },
      "method": "get",
      "name": "DescribeClusterEvents",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "description": "每页大小，取值范围1-50。\n默认值：50。",
            "example": "50",
            "format": "int64",
            "required": false,
            "title": "每页大小。",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "page_number",
          "required": false,
          "schema": {
            "description": "分页页数。",
            "example": "1",
            "format": "int64",
            "required": false,
            "title": "分页页数。",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "task_id",
          "required": false,
          "schema": {
            "description": "查询的任务ID。",
            "example": "T-xascadasd*****",
            "required": false,
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/events",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "events": {
                "description": "事件列表。",
                "items": {
                  "properties": {
                    "cluster_id": {
                      "description": "集群ID。",
                      "example": "c82e6987e2961451182edacd74faf****",
                      "title": "集群ID。",
                      "type": "string"
                    },
                    "data": {
                      "description": "事件描述。",
                      "properties": {
                        "level": {
                          "description": "事件级别。",
                          "enumValueTitles": {
                            "error": "error",
                            "info": "info",
                            "warning": "warning"
                          },
                          "example": "info",
                          "title": "事件级别。",
                          "type": "string"
                        },
                        "message": {
                          "description": "事件详情。",
                          "example": "Start to upgrade NodePool nodePool/npdd89dc2b76c04f14b06774883b******",
                          "title": "事件详情。",
                          "type": "string"
                        },
                        "reason": {
                          "description": "事件状态。",
                          "example": "Started",
                          "title": "事件状态。",
                          "type": "string"
                        }
                      },
                      "title": "事件描述。",
                      "type": "object"
                    },
                    "event_id": {
                      "description": "事件ID。",
                      "example": "e-9ad04f72-8ee7-46bf-a02c-e4a06b39****",
                      "title": "事件ID。",
                      "type": "string"
                    },
                    "source": {
                      "description": "事件源。",
                      "example": "cluster",
                      "title": "事件源。",
                      "type": "string"
                    },
                    "subject": {
                      "description": "事件关联的操作对象。",
                      "example": "npdd89dc2b76c04f14b06774883b******",
                      "title": "事件子项。",
                      "type": "string"
                    },
                    "time": {
                      "description": "事件开始时间。",
                      "example": "2020-12-01T17:31:00Z",
                      "title": "事件开始时间。",
                      "type": "string"
                    },
                    "type": {
                      "description": "事件类型。",
                      "example": "nodepool_update",
                      "title": "事件类型。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "事件列表。",
                "type": "array"
              },
              "page_info": {
                "description": "分页信息。",
                "properties": {
                  "page_number": {
                    "description": "分页页数。",
                    "example": "1",
                    "format": "int64",
                    "title": "分页页数。",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "每页大小，取值范围1-50。\n默认值：50。",
                    "example": "50",
                    "format": "int64",
                    "title": "每页大小。",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "3",
                    "format": "int64",
                    "title": "结果总数。",
                    "type": "integer"
                  }
                },
                "title": "分页信息。",
                "type": "object"
              }
            },
            "title": "返回体参数。",
            "type": "object"
          }
        }
      },
      "summary": "查询指定集群的事件列表。",
      "title": "查询集群事件列表"
    },
    "DescribeClusterLogs": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterLogs\n根据集群ID，查询集群日志。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"ID\\\": 590749245,\\n    \\\"cluster_id\\\": \\\"c23421cfa74454bc8b37163fd19af***\\\",\\n    \\\"cluster_log\\\": \\\"start to update cluster status to CREATE_COMPLETE\\\",\\n    \\\"created\\\": \\\"2020-09-11T10:11:51+08:00\\\",\\n    \\\"updated\\\": \\\"2020-09-11T10:11:51+08:00\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterLogsResponse>\\n    <ID>590749245</ID>\\n    <cluster_id>c23421cfa74454bc8b37163fd19af***</cluster_id>\\n    <cluster_log>start to update cluster status to CREATE_COMPLETE</cluster_log>\\n    <created>2020-09-11T10:11:51+08:00</created>\\n    <updated>2020-09-11T10:11:51+08:00</updated>\\n</DescribeClusterLogsResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，查询集群日志。",
        "title": "查询集群日志"
      },
      "method": "get",
      "name": "DescribeClusterLogs",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/logs",
      "responses": {
        "200": {
          "schema": {
            "description": "日志列表。",
            "items": {
              "description": "日志详情。",
              "properties": {
                "ID": {
                  "description": "日志ID。",
                  "example": "590749245",
                  "format": "int64",
                  "title": "日志ID。",
                  "type": "integer"
                },
                "cluster_id": {
                  "description": "集群ID。",
                  "example": "c23421cfa74454bc8b37163fd19af***",
                  "title": "集群ID。",
                  "type": "string"
                },
                "cluster_log": {
                  "description": "日志内容。",
                  "example": "start to update cluster status to CREATE_COMPLETE",
                  "title": "日志内容。",
                  "type": "string"
                },
                "created": {
                  "description": "日志产生时间。",
                  "example": "2020-09-11T10:11:51+08:00",
                  "title": "日志创建时间。",
                  "type": "string"
                },
                "updated": {
                  "description": "日志更新时间。",
                  "example": "2020-09-11T10:11:51+08:00",
                  "title": "日志更新时间。",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回数据体",
            "type": "array"
          }
        }
      },
      "summary": "根据集群ID，查询集群日志。",
      "title": "查询集群日志"
    },
    "DescribeClusterNodePoolDetail": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterNodePoolDetail\n根据节点池ID，查询集群中该节点池的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"auto_scaling\\\": {\\n    \\\"eip_bandwidth\\\": 5,\\n    \\\"eip_internet_charge_type\\\": \\\"PayByBandwidth\\\",\\n    \\\"enable\\\": true,\\n    \\\"is_bond_eip\\\": true,\\n    \\\"max_instances\\\": 10,\\n    \\\"min_instances\\\": 1,\\n    \\\"type\\\": \\\"cpu\\\"\\n  },\\n  \\\"kubernetes_config\\\": {\\n    \\\"cms_enabled\\\": true,\\n    \\\"cpu_policy\\\": \\\"none\\\",\\n    \\\"labels\\\": [\\n      {\\n        \\\"key\\\": \\\"env\\\",\\n        \\\"value\\\": \\\"prod\\\"\\n      }\\n    ],\\n    \\\"runtime\\\": \\\"docker\\\",\\n    \\\"runtime_version\\\": \\\"19.03.5\\\",\\n    \\\"taints\\\": [\\n      {\\n        \\\"key\\\": \\\"key\\\",\\n        \\\"value\\\": \\\"value\\\",\\n        \\\"effect\\\": \\\"NoSchedule\\\"\\n      }\\n    ],\\n    \\\"user_data\\\": \\\"IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFDSyEi\\\",\\n    \\\"node_name_mode\\\": \\\"customized,test.,5,.com\\\"\\n  },\\n  \\\"nodepool_info\\\": {\\n    \\\"created\\\": \\\"2020-09-27T19:14:09.156823496+08:00\\\",\\n    \\\"is_default\\\": true,\\n    \\\"name\\\": \\\"default-nodepool\\\",\\n    \\\"nodepool_id\\\": \\\"np615c0e0966124216a0412e10afe0****\\\",\\n    \\\"region_id\\\": \\\"cn-beijing\\\",\\n    \\\"resource_group_id\\\": \\\"rg-acfmyvw3wjmb****\\\",\\n    \\\"type\\\": \\\"ess\\\",\\n    \\\"updated\\\": \\\"2020-09-27T20:37:46+08:00\\\"\\n  },\\n  \\\"scaling_group\\\": {\\n    \\\"auto_renew\\\": false,\\n    \\\"auto_renew_period\\\": 1,\\n    \\\"data_disks\\\": [\\n      {\\n        \\\"category\\\": \\\"cloud_ssd\\\",\\n        \\\"size\\\": 40,\\n        \\\"encrypted\\\": \\\"true\\\",\\n        \\\"auto_snapshot_policy_id\\\": \\\"sp-2zej1nogjvovnz4z****\\\",\\n        \\\"performance_level\\\": \\\"PL1\\\",\\n        \\\"provisioned_iops\\\": 1000,\\n        \\\"bursting_enabled\\\": true,\\n        \\\"auto_format\\\": true,\\n        \\\"file_system\\\": \\\"ext4\\\",\\n        \\\"mount_target\\\": \\\"/mnt/path1\\\"\\n      }\\n    ],\\n    \\\"image_id\\\": \\\"aliyun_2_1903_x64_20G_alibase_20200529.vhd\\\",\\n    \\\"instance_charge_type\\\": \\\"PostPaid\\\",\\n    \\\"instance_types\\\": [\\n      \\\"ecs.n4.large\\\"\\n    ],\\n    \\\"multi_az_policy\\\": \\\"BALANCE\\\",\\n    \\\"on_demand_base_capacity\\\": 0,\\n    \\\"on_demand_percentage_above_base_capacity\\\": 20,\\n    \\\"spot_instance_pools\\\": 5,\\n    \\\"spot_instance_remedy\\\": false,\\n    \\\"compensate_with_on_demand\\\": true,\\n    \\\"period\\\": 0,\\n    \\\"period_unit\\\": \\\"Month\\\",\\n    \\\"platform\\\": \\\"AliyunLinux\\\",\\n    \\\"ram_policy\\\": \\\"KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****\\\",\\n    \\\"spot_strategy\\\": \\\"NoSpot\\\",\\n    \\\"spot_price_limit\\\": [\\n      {\\n        \\\"instance_type\\\": \\\"ecs.c6.large\\\",\\n        \\\"price_limit\\\": \\\"0.39\\\"\\n      }\\n    ],\\n    \\\"rds_instances\\\": [\\n      \\\"rm-xxx\\\"\\n    ],\\n    \\\"scaling_group_id\\\": \\\"asg-2zeieod8giqmov7z****\\\",\\n    \\\"scaling_policy\\\": \\\"release\\\",\\n    \\\"security_group_id\\\": \\\"sg-2ze60ockeekspl3d****\\\",\\n    \\\"security_group_ids\\\": [\\n      \\\"sg-2ze60ockeekspl3d****\\\"\\n    ],\\n    \\\"system_disk_category\\\": \\\"cloud_efficiency\\\",\\n    \\\"system_disk_size\\\": 120,\\n    \\\"system_disk_performance_level\\\": \\\"PL1\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"key\\\": \\\"env\\\",\\n        \\\"value\\\": \\\"prod\\\"\\n      }\\n    ],\\n    \\\"vswitch_ids\\\": [\\n      \\\"vsw-2ze3ds0mdip0hdz8i****\\\"\\n    ],\\n    \\\"login_password\\\": \\\"********\\\",\\n    \\\"key_pair\\\": \\\"pro-nodepool\\\",\\n    \\\"internet_charge_type\\\": \\\"PayByBandwidth\\\",\\n    \\\"internet_max_bandwidth_out\\\": 10,\\n    \\\"deploymentset_id\\\": \\\"ds-bp1d19mmbsv3jf6xxxxx\\\",\\n    \\\"desired_size\\\": 2,\\n    \\\"private_pool_options\\\": {\\n      \\\"id\\\": \\\"eap-bp67acfmxazb4****\\\",\\n      \\\"match_criteria\\\": \\\"Open\\\"\\n    }\\n  },\\n  \\\"status\\\": {\\n    \\\"failed_nodes\\\": 0,\\n    \\\"healthy_nodes\\\": 3,\\n    \\\"initial_nodes\\\": 0,\\n    \\\"offline_nodes\\\": 0,\\n    \\\"removing_nodes\\\": 0,\\n    \\\"serving_nodes\\\": 3,\\n    \\\"state\\\": \\\"active\\\",\\n    \\\"total_nodes\\\": 3\\n  },\\n  \\\"tee_config\\\": {\\n    \\\"tee_enable\\\": false\\n  },\\n  \\\"management\\\": {\\n    \\\"enable\\\": true,\\n    \\\"auto_repair\\\": true,\\n    \\\"upgrade_config\\\": {\\n      \\\"auto_upgrade\\\": true,\\n      \\\"surge\\\": 5,\\n      \\\"surge_percentage\\\": 50,\\n      \\\"max_unavailable\\\": 1\\n    },\\n    \\\"auto_repair_policy\\\": {\\n      \\\"restart_node\\\": true\\n    },\\n    \\\"auto_vul_fix\\\": true,\\n    \\\"auto_vul_fix_policy\\\": {\\n      \\\"restart_node\\\": true,\\n      \\\"vul_level\\\": \\\"asap,nntf\\\"\\n    },\\n    \\\"auto_upgrade\\\": true,\\n    \\\"auto_upgrade_policy\\\": {\\n      \\\"auto_upgrade_kubelet\\\": true\\n    }\\n  },\\n  \\\"interconnect_config\\\": {\\n    \\\"cen_id\\\": \\\"cen-ey9k9nfhz0f*******\\\",\\n    \\\"ccn_id\\\": \\\"ccn-qm5i0i0q9yi*******\\\",\\n    \\\"ccn_region_id\\\": \\\"cn-shanghai\\\",\\n    \\\"bandwidth\\\": 10,\\n    \\\"improved_period\\\": \\\"1\\\"\\n  },\\n  \\\"interconnect_mode\\\": \\\"basic\\\",\\n  \\\"max_nodes\\\": 10,\\n  \\\"node_config\\\": {\\n    \\\"kubelet_configuration\\\": {\\n      \\\"registryPullQPS\\\": 5,\\n      \\\"registryBurst\\\": 10,\\n      \\\"eventRecordQPS\\\": 5,\\n      \\\"eventBurst\\\": 10,\\n      \\\"kubeAPIQPS\\\": 5,\\n      \\\"kubeAPIBurst\\\": 10,\\n      \\\"serializeImagePulls\\\": true,\\n      \\\"cpuManagerPolicy\\\": \\\"none\\\",\\n      \\\"evictionHard\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"evictionSoft\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"evictionSoftGracePeriod\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"systemReserved\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"kubeReserved\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"readOnlyPort\\\": 0,\\n      \\\"maxPods\\\": 110,\\n      \\\"containerLogMaxSize\\\": \\\"10Mi\\\",\\n      \\\"containerLogMaxFiles\\\": 5,\\n      \\\"featureGates\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"allowedUnsafeSysctls\\\": [\\n        \\\"\\\"\\n      ]\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterNodePoolDetailResponse>\\n    <auto_scaling>\\n        <eip_bandwidth>5</eip_bandwidth>\\n        <eip_internet_charge_type>PayByBandwidth</eip_internet_charge_type>\\n        <enable>true</enable>\\n        <is_bond_eip>true</is_bond_eip>\\n        <max_instances>10</max_instances>\\n        <min_instances>1</min_instances>\\n        <type>cpu</type>\\n    </auto_scaling>\\n    <kubernetes_config>\\n        <cms_enabled>true</cms_enabled>\\n        <cpu_policy>none</cpu_policy>\\n        <labels>\\n            <key>env</key>\\n            <value>prod</value>\\n        </labels>\\n        <runtime>docker</runtime>\\n        <runtime_version>19.03.5</runtime_version>\\n        <taints>\\n            <key>key</key>\\n            <value>value</value>\\n            <effect>NoSchedule</effect>\\n        </taints>\\n        <user_data>IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFDSyEi</user_data>\\n        <node_name_mode>customized,test.,5,.com</node_name_mode>\\n    </kubernetes_config>\\n    <nodepool_info>\\n        <created>2020-09-27T19:14:09.156823496+08:00</created>\\n        <is_default>true</is_default>\\n        <name>default-nodepool</name>\\n        <nodepool_id>np615c0e0966124216a0412e10afe0****</nodepool_id>\\n        <region_id>cn-beijing</region_id>\\n        <resource_group_id>rg-acfmyvw3wjmb****</resource_group_id>\\n        <type>ess</type>\\n        <updated>2020-09-27T20:37:46+08:00</updated>\\n    </nodepool_info>\\n    <scaling_group>\\n        <auto_renew>false</auto_renew>\\n        <auto_renew_period>1</auto_renew_period>\\n        <data_disks>\\n            <category>cloud_ssd</category>\\n            <size>40</size>\\n            <encrypted>true</encrypted>\\n            <auto_snapshot_policy_id>sp-2zej1nogjvovnz4z****</auto_snapshot_policy_id>\\n            <performance_level>PL1</performance_level>\\n            <provisioned_iops>1000</provisioned_iops>\\n            <bursting_enabled>true</bursting_enabled>\\n            <auto_format>true</auto_format>\\n            <file_system>ext4</file_system>\\n            <mount_target>/mnt/path1</mount_target>\\n        </data_disks>\\n        <image_id>aliyun_2_1903_x64_20G_alibase_20200529.vhd</image_id>\\n        <instance_charge_type>PostPaid</instance_charge_type>\\n        <instance_types>ecs.n4.large</instance_types>\\n        <multi_az_policy>BALANCE</multi_az_policy>\\n        <on_demand_base_capacity>0</on_demand_base_capacity>\\n        <on_demand_percentage_above_base_capacity>20</on_demand_percentage_above_base_capacity>\\n        <spot_instance_pools>5</spot_instance_pools>\\n        <spot_instance_remedy>false</spot_instance_remedy>\\n        <compensate_with_on_demand>true</compensate_with_on_demand>\\n        <period>0</period>\\n        <period_unit>Month</period_unit>\\n        <platform>AliyunLinux</platform>\\n        <ram_policy>KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****</ram_policy>\\n        <spot_strategy>NoSpot</spot_strategy>\\n        <spot_price_limit>\\n            <instance_type>ecs.c6.large</instance_type>\\n            <price_limit>0.39</price_limit>\\n        </spot_price_limit>\\n        <rds_instances>rm-xxx</rds_instances>\\n        <scaling_group_id>asg-2zeieod8giqmov7z****</scaling_group_id>\\n        <scaling_policy>release</scaling_policy>\\n        <security_group_id>sg-2ze60ockeekspl3d****</security_group_id>\\n        <security_group_ids>sg-2ze60ockeekspl3d****</security_group_ids>\\n        <system_disk_category>cloud_efficiency</system_disk_category>\\n        <system_disk_size>120</system_disk_size>\\n        <system_disk_performance_level>PL1</system_disk_performance_level>\\n        <tags>\\n            <key>env</key>\\n            <value>prod</value>\\n        </tags>\\n        <vswitch_ids>vsw-2ze3ds0mdip0hdz8i****</vswitch_ids>\\n        <login_password>********</login_password>\\n        <key_pair>pro-nodepool</key_pair>\\n        <internet_charge_type>PayByBandwidth</internet_charge_type>\\n        <internet_max_bandwidth_out>10</internet_max_bandwidth_out>\\n        <deploymentset_id>ds-bp1d19mmbsv3jf6xxxxx</deploymentset_id>\\n        <desired_size>2</desired_size>\\n        <private_pool_options>\\n            <id>eap-bp67acfmxazb4****</id>\\n            <match_criteria>Open</match_criteria>\\n        </private_pool_options>\\n    </scaling_group>\\n    <status>\\n        <failed_nodes>0</failed_nodes>\\n        <healthy_nodes>3</healthy_nodes>\\n        <initial_nodes>0</initial_nodes>\\n        <offline_nodes>0</offline_nodes>\\n        <removing_nodes>0</removing_nodes>\\n        <serving_nodes>3</serving_nodes>\\n        <state>active</state>\\n        <total_nodes>3</total_nodes>\\n    </status>\\n    <tee_config>\\n        <tee_enable>false</tee_enable>\\n    </tee_config>\\n    <management>\\n        <enable>true</enable>\\n        <auto_repair>true</auto_repair>\\n        <upgrade_config>\\n            <auto_upgrade>true</auto_upgrade>\\n            <surge>5</surge>\\n            <surge_percentage>50</surge_percentage>\\n            <max_unavailable>1</max_unavailable>\\n        </upgrade_config>\\n        <auto_repair_policy>\\n            <restart_node>true</restart_node>\\n        </auto_repair_policy>\\n        <auto_vul_fix>true</auto_vul_fix>\\n        <auto_vul_fix_policy>\\n            <restart_node>true</restart_node>\\n            <vul_level>asap,nntf</vul_level>\\n        </auto_vul_fix_policy>\\n        <auto_upgrade>true</auto_upgrade>\\n        <auto_upgrade_policy>\\n            <auto_upgrade_kubelet>true</auto_upgrade_kubelet>\\n        </auto_upgrade_policy>\\n    </management>\\n    <interconnect_config>\\n        <cen_id>cen-ey9k9nfhz0f*******</cen_id>\\n        <ccn_id>ccn-qm5i0i0q9yi*******</ccn_id>\\n        <ccn_region_id>cn-shanghai</ccn_region_id>\\n        <bandwidth>10</bandwidth>\\n        <improved_period>1</improved_period>\\n    </interconnect_config>\\n    <interconnect_mode>basic</interconnect_mode>\\n    <max_nodes>10</max_nodes>\\n    <node_config>\\n        <kubelet_configuration>\\n            <registryPullQPS>5</registryPullQPS>\\n            <registryBurst>10</registryBurst>\\n            <eventRecordQPS>5</eventRecordQPS>\\n            <eventBurst>10</eventBurst>\\n            <kubeAPIQPS>5</kubeAPIQPS>\\n            <kubeAPIBurst>10</kubeAPIBurst>\\n            <serializeImagePulls>true</serializeImagePulls>\\n            <cpuManagerPolicy>none</cpuManagerPolicy>\\n            <readOnlyPort>0</readOnlyPort>\\n            <maxPods>110</maxPods>\\n            <containerLogMaxSize>10Mi</containerLogMaxSize>\\n            <containerLogMaxFiles>5</containerLogMaxFiles>\\n        </kubelet_configuration>\\n    </node_config>\\n</DescribeClusterNodePoolDetailResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据节点池ID，查询集群中该节点池的详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询节点池详情"
      },
      "method": "get",
      "name": "DescribeClusterNodePoolDetail",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np31da1b38983f4511b490fc62108a****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}",
      "responses": {
        "200": {
          "schema": {
            "description": "节点池详情。",
            "properties": {
              "auto_scaling": {
                "description": "自动伸缩节点池配置。",
                "properties": {
                  "eip_bandwidth": {
                    "description": "EIP带宽峰值。",
                    "example": "5",
                    "format": "int64",
                    "title": "EIP带宽峰值。",
                    "type": "integer"
                  },
                  "eip_internet_charge_type": {
                    "description": "EIP计费类型，取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。\n",
                    "example": "PayByBandwidth",
                    "title": "EIP实例付费类型。",
                    "type": "string"
                  },
                  "enable": {
                    "description": "是否启用自动伸缩。取值：\n\n- `true`：开启节点池自动伸缩功能。\n- `false`：不开启自动伸缩，当取值为false时，`auto_scaling`内的其他配置参数将不生效。\n",
                    "example": "true",
                    "title": "是否启用自动伸缩。",
                    "type": "boolean"
                  },
                  "is_bond_eip": {
                    "description": "是否绑定EIP，取值：\n\n- `true`：绑定EIP。\n- `false`：不绑定EIP。\n\n",
                    "example": "true",
                    "title": "是否绑定EIP。",
                    "type": "boolean"
                  },
                  "max_instances": {
                    "description": "最大实例数。",
                    "example": "10",
                    "format": "int64",
                    "title": "最大实例数。",
                    "type": "integer"
                  },
                  "min_instances": {
                    "description": "最小实例数。",
                    "example": "1",
                    "format": "int64",
                    "title": "最小实例数。",
                    "type": "integer"
                  },
                  "type": {
                    "description": "自动伸缩类型，按照自动伸缩实例类型划分。取值：\n\n- `cpu`：普通实例型。\n- `gpu`：GPU实例型。\n- `gpushare`：GPU共享型。\n- `spot`：抢占式实例型。\n",
                    "example": "cpu",
                    "title": "扩容组类型",
                    "type": "string"
                  }
                },
                "title": "节点池自动伸缩信息。",
                "type": "object"
              },
              "interconnect_config": {
                "description": "【该字段已废弃】\n\n边缘节点池网络相关的配置。该值只对edge类型的节点池有意义。",
                "properties": {
                  "bandwidth": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池的网络带宽，单位为Mbps。",
                    "example": "10",
                    "format": "int64",
                    "title": "边缘增强型节点池的网络带宽，单位M",
                    "type": "integer"
                  },
                  "ccn_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例ID (CCNID)。",
                    "example": "ccn-qm5i0i0q9yi*******",
                    "title": "边缘增强型节点池绑定的云连接网实例ID(CCNID)",
                    "type": "string"
                  },
                  "ccn_region_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例所属的区域。",
                    "example": "cn-shanghai",
                    "title": "边缘增强型节点池绑定的云连接网实例所属的区域",
                    "type": "string"
                  },
                  "cen_id": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云企业网实例ID (CENID)。",
                    "example": "cen-ey9k9nfhz0f*******",
                    "title": "边缘增强型节点池绑定的云企业网实例ID(CENID)",
                    "type": "string"
                  },
                  "improved_period": {
                    "description": "【该字段已废弃】\n\n边缘增强型节点池的购买时长，单位为月。",
                    "example": "1",
                    "title": "边缘增强型节点池的购买时长，单位月",
                    "type": "string"
                  }
                },
                "title": "边缘节点池网络相关的配置。该值只对edge类型的节点池有意义",
                "type": "object"
              },
              "interconnect_mode": {
                "description": "边缘节点池的网络类型。basic：基础型；dedicated：专用型。该值只对edge类型的节点池有意义。",
                "example": "basic",
                "title": "边缘节点池的网络类型。basic：基础型；improved：增强型。该值只对edge类型的节点池有意义",
                "type": "string"
              },
              "kubernetes_config": {
                "description": "集群相关配置。",
                "properties": {
                  "cms_enabled": {
                    "description": "是否在ECS节点上安装云监控，安装后可以在云监控控制台查看所创建ECS实例的监控信息，推荐开启。取值：\n\n- `true`：在ECS节点上安装云监控。\n- `false`：不在ECS节点上安装云监控。",
                    "example": "true",
                    "title": "是否开启云监控",
                    "type": "boolean"
                  },
                  "cpu_policy": {
                    "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。",
                    "example": "none",
                    "title": "CPU管理策略",
                    "type": "string"
                  },
                  "labels": {
                    "description": "节点标签，为Kubernetes集群节点添加标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以`aliyun`、`acs:`、`https://`或`http://`开头。更多信息，请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。",
                    "items": {
                      "$ref": "#/definitions/tag",
                      "description": "ECS标签。",
                      "isDefsType": true,
                      "typeName": "tag"
                    },
                    "title": "节点标签。",
                    "type": "array"
                  },
                  "node_name_mode": {
                    "description": "节点名称由三部分组成：前缀 \\+ 节点 IP 地址子串 \\+ 后缀：\n\n- 前缀和后缀均可由“.”分隔的一个或多个部分构成，每个部分可以使用小写字母、数字和“-”，节点名称首尾必须为小写字母和数字。\n- IP 地址段长度指截取节点 IP 地址末尾的位数，取值范围 5-12。\n\n例如，节点 IP 地址为：192.168.0.55，指定前缀为 aliyun.com，IP 地址段长度为 5，后缀为 test，则节点名称为aliyun.com00055test。",
                    "example": "customized,test.,5,.com",
                    "title": "自定义节点名称",
                    "type": "string"
                  },
                  "runtime": {
                    "description": "容器运行时名称。",
                    "example": "docker",
                    "title": "容器运行时",
                    "type": "string"
                  },
                  "runtime_version": {
                    "description": "容器运行时版本。",
                    "example": "19.03.5",
                    "title": "容器运行时版本。",
                    "type": "string"
                  },
                  "taints": {
                    "description": "节点污点信息。污点和容忍度（Toleration）相互配合，可以用来避免Pod被分配到不合适的节点上。更多信息，请参见[taint-and-toleration](https://kubernetes.io/zh/docs/concepts/scheduling-eviction/taint-and-toleration/)。",
                    "items": {
                      "$ref": "#/definitions/taint",
                      "description": "节点污点配置。",
                      "isDefsType": true,
                      "typeName": "taint"
                    },
                    "title": "污点配置。",
                    "type": "array"
                  },
                  "user_data": {
                    "description": "节点池自定义数据。更多详情，请参见[生成实例自定义数据](https://help.aliyun.com/document_detail/49121.html)。",
                    "example": "IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFDSyEi",
                    "title": "节点自定义数据",
                    "type": "string"
                  }
                },
                "title": "节点池所属集群配置。",
                "type": "object"
              },
              "management": {
                "description": "托管节点池配置。",
                "properties": {
                  "auto_repair": {
                    "description": "自动修复，仅当`enable=true`时生效。\n\n- `true`：自动修复。\n- `false`：不自动修复。\n",
                    "example": "true",
                    "title": "自动修复。",
                    "type": "boolean"
                  },
                  "auto_repair_policy": {
                    "description": "自动修复节点策略。",
                    "properties": {
                      "restart_node": {
                        "description": "是否允许重启节点。",
                        "example": "true",
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      }
                    },
                    "title": "自动修复节点策略。",
                    "type": "object"
                  },
                  "auto_upgrade": {
                    "description": "是否自动升级。",
                    "example": "true",
                    "title": "是否自动升级。",
                    "type": "boolean"
                  },
                  "auto_upgrade_policy": {
                    "description": "自动升级策略。",
                    "properties": {
                      "auto_upgrade_kubelet": {
                        "description": "是否允许自动升级kubelet。",
                        "example": "true",
                        "title": "是否允许自动升级kubelet。",
                        "type": "boolean"
                      }
                    },
                    "title": "自动升级策略。",
                    "type": "object"
                  },
                  "auto_vul_fix": {
                    "description": "是否自动修复CVE。",
                    "example": "true",
                    "title": "是否自动修复CVE。",
                    "type": "boolean"
                  },
                  "auto_vul_fix_policy": {
                    "description": "自动修复CVE策略。",
                    "properties": {
                      "restart_node": {
                        "description": "是否允许重启节点。",
                        "example": "true",
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      },
                      "vul_level": {
                        "description": "允许自动修复的漏洞级别，以逗号分隔。",
                        "example": "asap,nntf",
                        "title": "允许自动修复的漏洞级别，以逗号分隔。",
                        "type": "string"
                      }
                    },
                    "title": "自动修复CVE策略。",
                    "type": "object"
                  },
                  "enable": {
                    "description": "是否开启托管版节点池，取值：\n\n- `true`：开启托管节点池。\n- `false`：不开启托管节点池，只有当`enable=true`时，其他相关配置才生效。\n",
                    "example": "true",
                    "title": "是否开启托管版节点池。",
                    "type": "boolean"
                  },
                  "upgrade_config": {
                    "description": "自动升级配置，仅当`enable=true`时生效。",
                    "properties": {
                      "auto_upgrade": {
                        "description": "是否启用自动升级，取值：\n\n- `true`：启用自动升级。\n- `false`：不启用自动升级。\n",
                        "example": "true",
                        "title": "是否启用自动升级，自修复。",
                        "type": "boolean"
                      },
                      "max_unavailable": {
                        "description": "最大不可用节点数量，取值范围：\\[1,1000\\]。\n\n默认值：1。",
                        "example": "1",
                        "format": "int64",
                        "title": "最大不可用节点数量。",
                        "type": "integer"
                      },
                      "surge": {
                        "description": "额外节点数量。",
                        "example": "5",
                        "format": "int64",
                        "title": "额外节点数量。",
                        "type": "integer"
                      },
                      "surge_percentage": {
                        "description": "额外节点比例，和`surge`二选一。",
                        "example": "50",
                        "format": "int64",
                        "title": "额外节点比例， 和surge 二选一。",
                        "type": "integer"
                      }
                    },
                    "title": "自动升级配置。",
                    "type": "object"
                  }
                },
                "title": "托管版节点池配置。",
                "type": "object"
              },
              "max_nodes": {
                "description": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制（仅受限于集群整体可以容纳的节点数，节点池本身无额外限制）。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0。",
                "example": "10",
                "format": "int64",
                "title": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制(仅受限于集群整体可以容纳的节点数，节点池本身无额外限制)。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0",
                "type": "integer"
              },
              "node_config": {
                "description": "节点配置。",
                "properties": {
                  "kubelet_configuration": {
                    "$ref": "#/definitions/kubelet_config",
                    "description": "Kubelet参数配置。",
                    "isDefsType": true,
                    "title": "Kubelet参数配置。",
                    "typeName": "kubelet_config"
                  }
                },
                "title": "节点配置",
                "type": "object"
              },
              "nodepool_info": {
                "description": "节点池配置。",
                "properties": {
                  "created": {
                    "description": "节点池创建时间。",
                    "example": "2020-09-27T19:14:09.156823496+08:00",
                    "title": "节点池创建时间。",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "是否为默认节点池，通常一个集群仅有一个默认节点池。取值：\n`true`：设置为默认节点池。\n`false`：不设置为默认节点池。\n\n",
                    "example": "true",
                    "title": "是否为默认节点池。",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "节点池名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                    "example": "default-nodepool",
                    "title": "节点池名称。",
                    "type": "string"
                  },
                  "nodepool_id": {
                    "description": "节点池ID。",
                    "example": "np615c0e0966124216a0412e10afe0****",
                    "title": "节点池ID。",
                    "type": "string"
                  },
                  "region_id": {
                    "description": "地域ID。",
                    "example": "cn-beijing",
                    "title": "节点池所属地域ID。",
                    "type": "string"
                  },
                  "resource_group_id": {
                    "description": "资源组ID。",
                    "example": "rg-acfmyvw3wjmb****",
                    "title": "节点池所属资源组ID。",
                    "type": "string"
                  },
                  "type": {
                    "description": "节点池类型。",
                    "example": "ess",
                    "title": "节点池类型。",
                    "type": "string"
                  },
                  "updated": {
                    "description": "节点池更新时间。",
                    "example": "2020-09-27T20:37:46+08:00",
                    "title": "节点池更新时间。",
                    "type": "string"
                  }
                },
                "title": "节点池详情。",
                "type": "object"
              },
              "scaling_group": {
                "description": "扩容组配置。",
                "properties": {
                  "auto_renew": {
                    "description": "节点是否开启自动续费，当`instance_charge_type`取值为`PrePaid`时才生效，取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n",
                    "example": "false",
                    "title": "节点是否开启自动续费。",
                    "type": "boolean"
                  },
                  "auto_renew_period": {
                    "description": "节点自动续费周期。当`instance_charge_type`取值为`PrePaid`时才生效，且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2, 3, 6, 12}。",
                    "example": "1",
                    "format": "int64",
                    "title": "节点自动续费周期。",
                    "type": "integer"
                  },
                  "compensate_with_on_demand": {
                    "description": "当`multi_az_policy`取值为`COST_OPTIMIZED`时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值：\n\n- `true`：允许自动尝试创建按量实例满足ECS实例数量要求。\n- `false`：不允许自动尝试创建按量实例满足ECS实例数量要求。",
                    "example": "true",
                    "title": "当MultiAZPolicy取值为COST_OPTIMIZED时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值范围：true：允许。false：不允许。默认值：true",
                    "type": "boolean"
                  },
                  "data_disks": {
                    "description": "节点数据盘类型、大小等配置的组合。",
                    "items": {
                      "$ref": "#/definitions/data_disk",
                      "description": "节点数据盘配置。",
                      "isDefsType": true,
                      "typeName": "data_disk"
                    },
                    "title": "数据盘配置。",
                    "type": "array"
                  },
                  "deploymentset_id": {
                    "description": "部署集ID。",
                    "example": "ds-bp1d19mmbsv3jf6xxxxx",
                    "title": "部署集ID。",
                    "type": "string"
                  },
                  "desired_size": {
                    "description": "节点池期望节点数。",
                    "example": "2",
                    "format": "int64",
                    "title": "节点池期望节点数",
                    "type": "integer"
                  },
                  "image_id": {
                    "description": "自定义镜像ID，可通过`DescribeKubernetesVersionMetadata`查询系统支持的镜像。\n\n",
                    "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                    "title": "自定义镜像ID。",
                    "type": "string"
                  },
                  "instance_charge_type": {
                    "description": "节点池节点付费类型，取值：\n\n- `PrePaid`：预付费。\n- `PostPaid`：按量付费。\n",
                    "example": "PostPaid",
                    "title": "节点付费类型。",
                    "type": "string"
                  },
                  "instance_types": {
                    "description": "节点实例规格列表，您可以选择多个实例规格作为备选，每个节点创建时，将从第一个规格开始尝试购买，直到创建成功。最终购买的实例规格可能随库存变化而不同。",
                    "items": {
                      "description": "节点实例规格。",
                      "example": "ecs.n4.large",
                      "type": "string"
                    },
                    "title": "节点ECS规格类型。",
                    "type": "array"
                  },
                  "internet_charge_type": {
                    "description": "节点公网IP网络计费类型。",
                    "example": "PayByBandwidth",
                    "title": "节点公网IP网络计费类型",
                    "type": "string"
                  },
                  "internet_max_bandwidth_out": {
                    "description": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100。",
                    "example": "10",
                    "format": "int64",
                    "title": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
                    "type": "integer"
                  },
                  "key_pair": {
                    "description": "密钥对名称，和`login_password`二选一。当节点池为托管版节点池时，只支持`key_pair`。",
                    "example": "pro-nodepool",
                    "title": "密钥对名称",
                    "type": "string"
                  },
                  "login_password": {
                    "description": "SSH登录密码，和`key_pair`二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。\n\n出于安全性考虑，密码查询结果经过加密处理。",
                    "example": "********",
                    "title": "登录密码",
                    "type": "string"
                  },
                  "multi_az_policy": {
                    "description": "多可用区伸缩组ECS实例扩缩容策略。取值：\n\n- `PRIORITY`：根据您定义的虚拟交换机（VSwitchIds.N）扩缩容。当优先级较高的虚拟交换机所在可用区无法创建ECS实例时，自动使用下一优先级的虚拟交换机创建ECS实例。\n\n- `COST_OPTIMIZED`：按vCPU单价从低到高进行尝试创建。当伸缩配置设置了抢占式计费方式的多实例规格时，优先创建对应抢占式实例。您可以继续通过`CompensateWithOnDemand`参数指定当抢占式实例由于库存等原因无法创建时，是否自动尝试以按量付费的方式创建。\n\n  >`COST_OPTIMIZED`仅在伸缩配置设置了多实例规格或者选用了抢占式实例的情况下生效。\n\n- `BALANCE`：在伸缩组指定的多可用区之间均匀分配ECS实例。如果由于库存不足等原因可用区之间变得不平衡，您可以通过API RebalanceInstances平衡资源。更多信息，请参见[RebalanceInstances](https://help.aliyun.com/document_detail/71516.html)。\n\n默认值：`PRIORITY`。",
                    "example": "BALANCE",
                    "title": "多可用区伸缩组ECS实例扩缩容策略",
                    "type": "string"
                  },
                  "on_demand_base_capacity": {
                    "description": "伸缩组所需要按量实例个数的最小值，取值范围：\\[0,1000\\]。当按量实例个数少于该值时，将优先创建按量实例。",
                    "example": "0",
                    "format": "int64",
                    "title": "伸缩组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例。",
                    "type": "integer"
                  },
                  "on_demand_percentage_above_base_capacity": {
                    "description": "伸缩组满足最小按量实例数（`on_demand_base_capacity`）要求后，超出的实例中按量实例应占的比例。取值范围：\\[0,100\\]。",
                    "example": "20",
                    "format": "int64",
                    "title": "伸缩组满足最小按量实例数（OnDemandBaseCapacity）要求后，超出的实例中按量实例应占的比例，取值范围：0～100。",
                    "type": "integer"
                  },
                  "period": {
                    "description": "节点包年包月时长，当`instance_charge_type`取值为`PrePaid`时才生效且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2 , 3, 6, 12, 24, 36, 48, 60}。",
                    "example": "0",
                    "format": "int64",
                    "title": "节点包年包月时长。",
                    "type": "integer"
                  },
                  "period_unit": {
                    "description": "节点付费周期，当`instance_charge_type`取值为`PrePaid`时时候需要指定周期。\n\n`Month`：目前只支持以月为单位。\n",
                    "example": "Month",
                    "title": "节点付费周期。",
                    "type": "string"
                  },
                  "platform": {
                    "description": "操作系统发行版。取值：\n\n- `CentOS`\n- `AliyunLinux`\n- `Windows`\n- `WindowsCore`",
                    "example": "AliyunLinux",
                    "title": "操作系统发行版。取值： CentOS，AliyunLinux，Windows，WindowsCore。",
                    "type": "string"
                  },
                  "private_pool_options": {
                    "description": "私有节点池配置。",
                    "properties": {
                      "id": {
                        "description": "私有节点池ID。",
                        "example": "eap-bp67acfmxazb4****",
                        "type": "string"
                      },
                      "match_criteria": {
                        "description": "私有节点池类型，实例启动的私有池容量选项。弹性保障服务或容量预定服务在生效后会生成私有池容量，供实例启动时选择。取值：\n\n- `Open`：开放模式。将自动匹配开放类型的私有池容量。如果没有符合条件的私有池容量，则使用公共池资源启动。\n\n- `Target`：指定模式。使用指定的私有池容量启动实例，如果该私有池容量不可用，则实例会启动失败。\n\n- `None`：不使用模式。实例启动将不使用私有池容量。",
                        "example": "Open",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "ram_policy": {
                    "description": "Worker RAM角色名称，授权ECS实例为集群Woker节点。",
                    "example": "KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****",
                    "title": "节点RAM 角色名称。",
                    "type": "string"
                  },
                  "rds_instances": {
                    "description": "如果指定了RDS实例列表，集群节点ECS会自动加入RDS访问白名单。",
                    "items": {
                      "description": "RDS实例。",
                      "example": "rm-xxx",
                      "type": "string"
                    },
                    "title": "RDS实例列表。",
                    "type": "array"
                  },
                  "scaling_group_id": {
                    "description": "伸缩组ID。",
                    "example": "asg-2zeieod8giqmov7z****",
                    "title": "扩容组ID。",
                    "type": "string"
                  },
                  "scaling_policy": {
                    "description": "伸缩组模式，取值：\n\n- `release`：标准模式，根据申请资源值的使用量，通过创建、释放ECS的方式进行伸缩。\n- `recycle`：极速模式，通过创建、停机、启动的方式进行伸缩，提高再次伸缩的速度（停机时计算资源不收费，只收取存储费用，本地盘机型除外）。",
                    "example": "release",
                    "title": "扩容策略。",
                    "type": "string"
                  },
                  "security_group_id": {
                    "description": "节点池安全组ID，当节点池绑定了多个安全组时，为`security_group_ids`中的第一个值。",
                    "example": "sg-2ze60ockeekspl3d****",
                    "title": "节点所属安全组ID。",
                    "type": "string"
                  },
                  "security_group_ids": {
                    "description": "节点池安全组ID列表。",
                    "items": {
                      "description": "节点池安全组ID列表。",
                      "example": "sg-2ze60ockeekspl3d****",
                      "type": "string"
                    },
                    "title": "节点池所属安全组ID列表。",
                    "type": "array"
                  },
                  "spot_instance_pools": {
                    "description": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：\\[1,10\\]。",
                    "example": "5",
                    "format": "int64",
                    "title": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：1~10。",
                    "type": "integer"
                  },
                  "spot_instance_remedy": {
                    "description": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值：\n\n- `true`：开启补齐抢占式实例。\n- `false`：不开启补齐抢占式实例。\n\n",
                    "example": "false",
                    "title": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。",
                    "type": "boolean"
                  },
                  "spot_price_limit": {
                    "description": "抢占实例市场价格区间配置。",
                    "items": {
                      "description": "抢占实例市场价格区间配置，可为不同实例规格设置不同的价格区间。",
                      "properties": {
                        "instance_type": {
                          "description": "抢占式实例规格。",
                          "example": "ecs.c6.large",
                          "title": "抢占式实例规格。",
                          "type": "string"
                        },
                        "price_limit": {
                          "description": "单台实例市场价格。\n\n单位：元/时。\n",
                          "example": "0.39",
                          "title": "单台实例上限价格，单位：元/小时。",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "抢占式实例价格上限配置。",
                    "type": "array"
                  },
                  "spot_strategy": {
                    "description": "抢占式实例类型，取值：\n- NoSpot：非抢占式实例。\n- SpotWithPriceLimit：设置抢占实例价格上限。\n- SpotAsPriceGo：系统自动出价，跟随当前市场实际价格。\n\n更多信息，请参见[抢占式实例](https://help.aliyun.com/document_detail/157759.html)。\n",
                    "example": "NoSpot",
                    "title": "抢占式实例类型",
                    "type": "string"
                  },
                  "system_disk_category": {
                    "description": "节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n",
                    "example": "cloud_efficiency",
                    "title": "系统盘类型",
                    "type": "string"
                  },
                  "system_disk_performance_level": {
                    "description": "节点系统盘磁盘性能，只针对ESSD磁盘生效。",
                    "example": "PL1",
                    "title": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
                    "type": "string"
                  },
                  "system_disk_size": {
                    "description": "节点系统盘大小，单位为GiB。\n\n取值范围：\\[20,500\\]。",
                    "example": "120",
                    "format": "int64",
                    "title": "系统盘大小",
                    "type": "integer"
                  },
                  "tags": {
                    "description": "仅为ECS实例添加标签。\n\n标签键不可以重复，最大长度为128个字符；标签键和标签值都不能以“aliyun”、“acs:”开头，或包含“https://”、“http://”。",
                    "items": {
                      "$ref": "#/definitions/tag",
                      "description": "节点标签。",
                      "isDefsType": true,
                      "typeName": "tag"
                    },
                    "title": "ECS标签",
                    "type": "array"
                  },
                  "vswitch_ids": {
                    "description": "虚拟交换机ID，取值范围：\\[1,20\\]。\n\n> 为保证高可用性，建议选择不同可用区的虚拟交换机。",
                    "items": {
                      "description": "虚拟交换机ID。",
                      "example": "vsw-2ze3ds0mdip0hdz8i****",
                      "type": "string"
                    },
                    "title": "虚拟交换机ID。",
                    "type": "array"
                  }
                },
                "title": "节点池扩容组信息。",
                "type": "object"
              },
              "status": {
                "description": "节点池状态配置。",
                "properties": {
                  "failed_nodes": {
                    "description": "失败节点数。",
                    "example": "0",
                    "format": "int64",
                    "title": "失败节点数。",
                    "type": "integer"
                  },
                  "healthy_nodes": {
                    "description": "健康节点数。",
                    "example": "3",
                    "format": "int64",
                    "title": "处于健康状态节点数。",
                    "type": "integer"
                  },
                  "initial_nodes": {
                    "description": "正在创建节点数。",
                    "example": "0",
                    "format": "int64",
                    "title": "正在初始化节点数。",
                    "type": "integer"
                  },
                  "offline_nodes": {
                    "description": "离线节点数。",
                    "example": "0",
                    "format": "int64",
                    "title": "离线节点数量。",
                    "type": "integer"
                  },
                  "removing_nodes": {
                    "description": "正在被移除节点数。",
                    "example": "0",
                    "format": "int64",
                    "title": "正在被移除节点数。",
                    "type": "integer"
                  },
                  "serving_nodes": {
                    "description": "工作中节点数。",
                    "example": "3",
                    "format": "int64",
                    "title": "工作节点数量。",
                    "type": "integer"
                  },
                  "state": {
                    "description": "节点池状态，取值：\n\n- `active`：已激活。\n- `scaling`：伸缩中。\n- `removing`：节点移除中。\n- `deleting`：删除中。\n- `updating`：更新中。",
                    "example": "active",
                    "title": "节点池状态。",
                    "type": "string"
                  },
                  "total_nodes": {
                    "description": "节点池内总节点数。",
                    "example": "3",
                    "format": "int64",
                    "title": "总节点数。",
                    "type": "integer"
                  }
                },
                "title": "节点池状态。",
                "type": "object"
              },
              "tee_config": {
                "description": "加密计算节集群配置。",
                "properties": {
                  "tee_enable": {
                    "description": "是否开启加密计算集群，取值：\n\n- `true`：开启。\n- `false`：不开启。\n",
                    "example": "false",
                    "title": "是否为加密计算节点池。",
                    "type": "boolean"
                  }
                },
                "title": "加密计算节点池信息。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "根据节点池ID，查询集群中该节点池的详情。",
      "title": "查询节点池详情"
    },
    "DescribeClusterNodePools": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterNodePools\n调用DescribeClusterNodePools查询集群内所有节点池详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"nodepools\\\": [\\n    {\\n      \\\"auto_scaling\\\": {\\n        \\\"eip_bandwidth\\\": 5,\\n        \\\"is_bond_eip\\\": true,\\n        \\\"eip_internet_charge_type\\\": \\\"PayByBandwidth\\\",\\n        \\\"enable\\\": true,\\n        \\\"max_instances\\\": 10,\\n        \\\"min_instances\\\": 2,\\n        \\\"type\\\": \\\"cpu\\\"\\n      },\\n      \\\"kubernetes_config\\\": {\\n        \\\"cms_enabled\\\": true,\\n        \\\"cpu_policy\\\": \\\"none\\\",\\n        \\\"labels\\\": [\\n          {\\n            \\\"key\\\": \\\"env\\\",\\n            \\\"value\\\": \\\"prod\\\"\\n          }\\n        ],\\n        \\\"runtime\\\": \\\"docker\\\",\\n        \\\"runtime_version\\\": \\\"19.03.5\\\",\\n        \\\"taints\\\": [\\n          {\\n            \\\"key\\\": \\\"key\\\",\\n            \\\"value\\\": \\\"value\\\",\\n            \\\"effect\\\": \\\"NoSchedule\\\"\\n          }\\n        ],\\n        \\\"user_data\\\": \\\"IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFD****\\\",\\n        \\\"node_name_mode\\\": \\\"customized,test.,5,.com\\\"\\n      },\\n      \\\"nodepool_info\\\": {\\n        \\\"created\\\": \\\"2020-09-27T19:14:09.156823496+08:00\\\",\\n        \\\"is_default\\\": true,\\n        \\\"name\\\": \\\"default-nodepool\\\",\\n        \\\"nodepool_id\\\": \\\"np615c0e0966124216a0412e10afe0****\\\",\\n        \\\"region_id\\\": \\\"cn-beijing\\\",\\n        \\\"resource_group_id\\\": \\\"rg-acfmyvw3wjm****\\\",\\n        \\\"type\\\": \\\"ess\\\",\\n        \\\"updated\\\": \\\"2020-09-27T20:37:46+08:00\\\"\\n      },\\n      \\\"scaling_group\\\": {\\n        \\\"auto_renew\\\": false,\\n        \\\"auto_renew_period\\\": 0,\\n        \\\"data_disks\\\": [\\n          {\\n            \\\"category\\\": \\\"cloud_ssd\\\",\\n            \\\"size\\\": 40,\\n            \\\"encrypted\\\": \\\"true\\\",\\n            \\\"auto_snapshot_policy_id\\\": \\\"sp-2zej1nogjvovnz4z****\\\",\\n            \\\"performance_level\\\": \\\"PL1\\\",\\n            \\\"provisioned_iops\\\": 1000,\\n            \\\"bursting_enabled\\\": true,\\n            \\\"auto_format\\\": true,\\n            \\\"file_system\\\": \\\"ext4\\\",\\n            \\\"mount_target\\\": \\\"/mnt/path1\\\"\\n          }\\n        ],\\n        \\\"image_id\\\": \\\"aliyun_2_1903_x64_20G_alibase_20200529.vhd\\\",\\n        \\\"instance_charge_type\\\": \\\"PostPaid\\\",\\n        \\\"instance_types\\\": [\\n          \\\"ecs.n4.large\\\"\\n        ],\\n        \\\"multi_az_policy\\\": \\\"COST_OPTIMIZED\\\",\\n        \\\"on_demand_base_capacity\\\": 0,\\n        \\\"on_demand_percentage_above_base_capacity\\\": 20,\\n        \\\"spot_instance_pools\\\": 5,\\n        \\\"spot_instance_remedy\\\": false,\\n        \\\"compensate_with_on_demand\\\": true,\\n        \\\"period\\\": 1,\\n        \\\"period_unit\\\": \\\"Month\\\",\\n        \\\"platform\\\": \\\"AliyunLinux\\\",\\n        \\\"ram_policy\\\": \\\"KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****\\\",\\n        \\\"spot_strategy\\\": \\\"NoSpot\\\",\\n        \\\"spot_price_limit\\\": [\\n          {\\n            \\\"instance_type\\\": \\\"ecs.c6.large\\\",\\n            \\\"price_limit\\\": \\\"0.39\\\"\\n          }\\n        ],\\n        \\\"rds_instances\\\": [\\n          \\\"rm-xxx\\\"\\n        ],\\n        \\\"scaling_group_id\\\": \\\"asg-2ze8n5qw4atggut8****\\\",\\n        \\\"scaling_policy\\\": \\\"release\\\",\\n        \\\"security_group_id\\\": \\\"sg-2ze1iuk12m2sb4c4****\\\",\\n        \\\"security_group_ids\\\": [\\n          \\\"sg-2ze1iuk12m2sb4c4****\\\"\\n        ],\\n        \\\"system_disk_category\\\": \\\"cloud_efficiency\\\",\\n        \\\"system_disk_size\\\": 120,\\n        \\\"system_disk_performance_level\\\": \\\"PL1\\\",\\n        \\\"tags\\\": [\\n          {\\n            \\\"key\\\": \\\"env\\\",\\n            \\\"value\\\": \\\"prod\\\"\\n          }\\n        ],\\n        \\\"vswitch_ids\\\": [\\n          \\\"vsw-2ze3ds0mdip0hdz8i****\\\"\\n        ],\\n        \\\"login_password\\\": \\\"******\\\",\\n        \\\"key_pair\\\": \\\"pro-nodepool\\\",\\n        \\\"internet_charge_type\\\": \\\"PayByBandwidth\\\",\\n        \\\"internet_max_bandwidth_out\\\": 10,\\n        \\\"deploymentset_id\\\": \\\"ds-bp1d19mmbsv3jf6xxxxx\\\",\\n        \\\"desired_size\\\": 2,\\n        \\\"private_pool_options\\\": {\\n          \\\"id\\\": \\\"eap-bp67acfmxazb4****\\\",\\n          \\\"match_criteria\\\": \\\"Open\\\"\\n        }\\n      },\\n      \\\"status\\\": {\\n        \\\"failed_nodes\\\": 0,\\n        \\\"healthy_nodes\\\": 3,\\n        \\\"initial_nodes\\\": 0,\\n        \\\"offline_nodes\\\": 0,\\n        \\\"removing_nodes\\\": 0,\\n        \\\"serving_nodes\\\": 3,\\n        \\\"state\\\": \\\"active\\\",\\n        \\\"total_nodes\\\": 3\\n      },\\n      \\\"tee_config\\\": {\\n        \\\"tee_enable\\\": false\\n      },\\n      \\\"management\\\": {\\n        \\\"enable\\\": true,\\n        \\\"auto_repair\\\": true,\\n        \\\"upgrade_config\\\": {\\n          \\\"auto_upgrade\\\": true,\\n          \\\"surge\\\": 5,\\n          \\\"surge_percentage\\\": 50,\\n          \\\"max_unavailable\\\": 1\\n        },\\n        \\\"auto_repair_policy\\\": {\\n          \\\"restart_node\\\": true\\n        },\\n        \\\"auto_vul_fix\\\": true,\\n        \\\"auto_vul_fix_policy\\\": {\\n          \\\"restart_node\\\": true,\\n          \\\"vul_level\\\": \\\"asap,nntf\\\"\\n        },\\n        \\\"auto_upgrade\\\": true,\\n        \\\"auto_upgrade_policy\\\": {\\n          \\\"auto_upgrade_kubelet\\\": true\\n        }\\n      },\\n      \\\"interconnect_config\\\": {\\n        \\\"cen_id\\\": \\\"cen-ey9k9nfhz0f*******\\\",\\n        \\\"ccn_id\\\": \\\"ccn-qm5i0i0q9yi*******\\\",\\n        \\\"ccn_region_id\\\": \\\"cn-shanghai\\\",\\n        \\\"bandwidth\\\": 10,\\n        \\\"improved_period\\\": \\\"1\\\"\\n      },\\n      \\\"interconnect_mode\\\": \\\"basic\\\",\\n      \\\"max_nodes\\\": 10,\\n      \\\"node_config\\\": {\\n        \\\"kubelet_configuration\\\": {\\n          \\\"registryPullQPS\\\": 5,\\n          \\\"registryBurst\\\": 10,\\n          \\\"eventRecordQPS\\\": 5,\\n          \\\"eventBurst\\\": 10,\\n          \\\"kubeAPIQPS\\\": 5,\\n          \\\"kubeAPIBurst\\\": 10,\\n          \\\"serializeImagePulls\\\": true,\\n          \\\"cpuManagerPolicy\\\": \\\"none\\\",\\n          \\\"evictionHard\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"evictionSoft\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"evictionSoftGracePeriod\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"systemReserved\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"kubeReserved\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"readOnlyPort\\\": 0,\\n          \\\"maxPods\\\": 110,\\n          \\\"containerLogMaxSize\\\": \\\"10Mi\\\",\\n          \\\"containerLogMaxFiles\\\": 5,\\n          \\\"featureGates\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"allowedUnsafeSysctls\\\": [\\n            \\\"\\\"\\n          ]\\n        }\\n      }\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterNodePoolsResponse>\\n    <nodepools>\\n        <auto_scaling>\\n            <eip_bandwidth>5</eip_bandwidth>\\n            <is_bond_eip>true</is_bond_eip>\\n            <eip_internet_charge_type>PayByBandwidth</eip_internet_charge_type>\\n            <enable>true</enable>\\n            <max_instances>10</max_instances>\\n            <min_instances>2</min_instances>\\n            <type>cpu</type>\\n        </auto_scaling>\\n        <kubernetes_config>\\n            <cms_enabled>true</cms_enabled>\\n            <cpu_policy>none</cpu_policy>\\n            <labels>\\n                <key>env</key>\\n                <value>prod</value>\\n            </labels>\\n            <runtime>docker</runtime>\\n            <runtime_version>19.03.5</runtime_version>\\n            <taints>\\n                <key>key</key>\\n                <value>value</value>\\n                <effect>NoSchedule</effect>\\n            </taints>\\n            <user_data>IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFD****</user_data>\\n        </kubernetes_config>\\n        <nodepool_info>\\n            <created>2020-09-27T19:14:09.156823496+08:00</created>\\n            <is_default>true</is_default>\\n            <name>default-nodepool</name>\\n            <nodepool_id>np615c0e0966124216a0412e10afe0****</nodepool_id>\\n            <region_id>cn-beijing</region_id>\\n            <resource_group_id>rg-acfmyvw3wjm****</resource_group_id>\\n            <type>ess</type>\\n            <updated>2020-09-27T20:37:46+08:00</updated>\\n        </nodepool_info>\\n        <scaling_group>\\n            <auto_renew>false</auto_renew>\\n            <auto_renew_period>0</auto_renew_period>\\n            <data_disks>\\n                <category>cloud_ssd</category>\\n                <size>40</size>\\n                <encrypted>true</encrypted>\\n                <auto_snapshot_policy_id>sp-2zej1nogjvovnz4z****</auto_snapshot_policy_id>\\n            </data_disks>\\n            <image_id>aliyun_2_1903_x64_20G_alibase_20200529.vhd</image_id>\\n            <instance_charge_type>PostPaid</instance_charge_type>\\n            <instance_types>ecs.n4.large</instance_types>\\n            <multi_az_policy>COST_OPTIMIZED</multi_az_policy>\\n            <on_demand_base_capacity>0</on_demand_base_capacity>\\n            <on_demand_percentage_above_base_capacity>20</on_demand_percentage_above_base_capacity>\\n            <spot_instance_pools>5</spot_instance_pools>\\n            <spot_instance_remedy>false</spot_instance_remedy>\\n            <compensate_with_on_demand>true</compensate_with_on_demand>\\n            <period>0</period>\\n            <period_unit>Month</period_unit>\\n            <platform>AliyunLinux</platform>\\n            <ram_policy>KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****</ram_policy>\\n            <spot_strategy>NoSpot</spot_strategy>\\n            <spot_price_limit>\\n                <instance_type>ecs.c6.large</instance_type>\\n                <price_limit>0.39</price_limit>\\n            </spot_price_limit>\\n            <rds_instances>rm-xxx</rds_instances>\\n            <scaling_group_id>asg-2ze8n5qw4atggut8****</scaling_group_id>\\n            <scaling_policy>release</scaling_policy>\\n            <security_group_id>sg-2ze1iuk12m2sb4c4****</security_group_id>\\n            <security_group_ids>sg-2ze1iuk12m2sb4c4****</security_group_ids>\\n            <system_disk_category>cloud_efficiency</system_disk_category>\\n            <system_disk_size>120</system_disk_size>\\n            <tags>\\n                <key>env</key>\\n                <value>prod</value>\\n            </tags>\\n            <vswitch_ids>vsw-2ze3ds0mdip0hdz8i****</vswitch_ids>\\n            <login_password>******</login_password>\\n            <key_pair>pro-nodepool</key_pair>\\n            <internet_charge_type>PayByBandwidth</internet_charge_type>\\n            <internet_max_bandwidth_out>10</internet_max_bandwidth_out>\\n        </scaling_group>\\n        <status>\\n            <failed_nodes>0</failed_nodes>\\n            <healthy_nodes>3</healthy_nodes>\\n            <initial_nodes>0</initial_nodes>\\n            <offline_nodes>0</offline_nodes>\\n            <removing_nodes>0</removing_nodes>\\n            <serving_nodes>3</serving_nodes>\\n            <state>active</state>\\n            <total_nodes>3</total_nodes>\\n        </status>\\n        <tee_config>\\n            <tee_enable>false</tee_enable>\\n        </tee_config>\\n        <management>\\n            <enable>true</enable>\\n            <auto_repair>true</auto_repair>\\n            <upgrade_config>\\n                <auto_upgrade>true</auto_upgrade>\\n                <surge>5</surge>\\n                <surge_percentage>50</surge_percentage>\\n                <max_unavailable>1</max_unavailable>\\n            </upgrade_config>\\n        </management>\\n    </nodepools>\\n</DescribeClusterNodePoolsResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribeClusterNodePools查询集群内所有节点池详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询节点池列表"
      },
      "method": "get",
      "name": "DescribeClusterNodePools",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "cc0f87de0b8fb403f86e10e204f83****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools",
      "responses": {
        "200": {
          "schema": {
            "description": "节点池详情。",
            "properties": {
              "nodepools": {
                "description": "节点池实例列表。",
                "items": {
                  "description": "节点池实例详情。",
                  "properties": {
                    "auto_scaling": {
                      "description": "自动伸缩配置。",
                      "properties": {
                        "eip_bandwidth": {
                          "description": "EIP带宽峰值。",
                          "example": "5",
                          "format": "int64",
                          "title": "EIP带宽峰值",
                          "type": "integer"
                        },
                        "eip_internet_charge_type": {
                          "description": "EIP计费类型，取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。\n",
                          "example": "PayByBandwidth",
                          "title": "EIP实例计费方式",
                          "type": "string"
                        },
                        "enable": {
                          "description": "是否启用自动伸缩，取值：\n\n- `true`：开启节点池自动伸缩功能。\n- `false`：不开启自动伸缩，当取值为`false`时，`auto_scaling`内的其他配置参数将不生效。\n\n",
                          "example": "true",
                          "title": "自动伸缩",
                          "type": "boolean"
                        },
                        "is_bond_eip": {
                          "description": "是否绑定EIP，取值：\n\n- `true`：绑定EIP。\n- `false`：不绑定EIP。\n\n",
                          "example": "true",
                          "title": "是否绑定EIP",
                          "type": "boolean"
                        },
                        "max_instances": {
                          "description": "最大实例数。",
                          "example": "10",
                          "format": "int64",
                          "title": "最大节点数\t",
                          "type": "integer"
                        },
                        "min_instances": {
                          "description": "最小实例数。",
                          "example": "2",
                          "format": "int64",
                          "title": "最小节点数\t",
                          "type": "integer"
                        },
                        "type": {
                          "description": "自动伸缩类型，按照自动伸缩实例类型划分。取值：\n\n- `cpu`：普通实例型。\n- `gpu`：GPU实例型。\n- `gpushare`：GPU共享型。\n- `spot`：抢占式实例型。\n",
                          "example": "cpu",
                          "title": "扩容组类型",
                          "type": "string"
                        }
                      },
                      "title": "自动伸缩配置详情",
                      "type": "object"
                    },
                    "interconnect_config": {
                      "description": "【该字段已废弃】\n\n边缘节点池网络相关的配置。该值只对edge类型的节点池有意义。",
                      "properties": {
                        "bandwidth": {
                          "description": "【该字段已废弃】\n\n边缘增强型节点池的网络带宽，单位：Mbps。",
                          "example": "10",
                          "format": "int64",
                          "title": "边缘增强型节点池的网络带宽，单位M",
                          "type": "integer"
                        },
                        "ccn_id": {
                          "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例ID(CCNID)。",
                          "example": "ccn-qm5i0i0q9yi*******",
                          "title": "边缘增强型节点池绑定的云连接网实例ID(CCNID)",
                          "type": "string"
                        },
                        "ccn_region_id": {
                          "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例所属的区域。",
                          "example": "cn-shanghai",
                          "title": "边缘增强型节点池绑定的云连接网实例所属的区域",
                          "type": "string"
                        },
                        "cen_id": {
                          "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云企业网实例ID(CENID)。",
                          "example": "cen-ey9k9nfhz0f*******",
                          "title": "边缘增强型节点池绑定的云企业网实例ID(CENID)",
                          "type": "string"
                        },
                        "improved_period": {
                          "description": "【该字段已废弃】\n\n边缘增强型节点池的购买时长，单位：月。",
                          "example": "1",
                          "title": "边缘增强型节点池的购买时长，单位月",
                          "type": "string"
                        }
                      },
                      "title": "边缘节点池网络相关的配置。该值只对edge类型的节点池有意义",
                      "type": "object"
                    },
                    "interconnect_mode": {
                      "description": "边缘节点池的网络类型。basic：基础型；dedicated：专用型。该值只对edge类型的节点池有意义。",
                      "example": "basic",
                      "title": "边缘节点池的网络类型。basic：基础型；improved：增强型。该值只对edge类型的节点池有意义",
                      "type": "string"
                    },
                    "kubernetes_config": {
                      "description": "集群相关配置。",
                      "properties": {
                        "cms_enabled": {
                          "description": "是否在ECS节点上安装云监控，安装后可以在云监控控制台查看所创建ECS实例的监控信息，推荐开启。取值：\n\n- `true`：在ECS节点上安装云监控。\n- `false`：不在ECS节点上安装云监控\n\n",
                          "example": "true",
                          "title": "是否开启云监控\t",
                          "type": "boolean"
                        },
                        "cpu_policy": {
                          "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。",
                          "example": "none",
                          "title": "CPU管理策略\t",
                          "type": "string"
                        },
                        "labels": {
                          "description": "节点标签，为Kubernetes集群节点添加标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以`aliyun`、`acs:`、`https://`或`http://`开头。更多信息，请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。",
                          "items": {
                            "$ref": "#/definitions/tag",
                            "description": "标签配置。",
                            "isDefsType": true,
                            "typeName": "tag"
                          },
                          "title": "ECS标签",
                          "type": "array"
                        },
                        "node_name_mode": {
                          "description": "节点名称由三部分组成：前缀 \\+ 节点 IP 地址子串 \\+ 后缀：\n\n- 前缀和后缀均可由“.”分隔的一个或多个部分构成，每个部分可以使用小写字母、数字和“-”，节点名称首尾必须为小写字母和数字；\n- IP 地址段长度指截取节点 IP 地址末尾的位数，取值范围 5-12\n\n例如：节点 IP 地址为：192.168.0.55，指定前缀为 aliyun.com，IP 地址段长度为 5，后缀为 test，则节点名称为 aliyun.com00055test",
                          "example": "customized,test.,5,.com",
                          "title": "自定义节点名称",
                          "type": "string"
                        },
                        "runtime": {
                          "description": "容器运行时名称。",
                          "example": "docker",
                          "title": "容器运行时\t",
                          "type": "string"
                        },
                        "runtime_version": {
                          "description": "容器运行时版本。",
                          "example": "19.03.5",
                          "title": "容器运行时版本\t",
                          "type": "string"
                        },
                        "taints": {
                          "description": "节点污点信息。污点和容忍度（Toleration）相互配合，可以用来避免Pod被分配到不合适的节点上。更多信息，请参见[taint-and-toleration](https://kubernetes.io/zh/docs/concepts/scheduling-eviction/taint-and-toleration/)。",
                          "items": {
                            "$ref": "#/definitions/taint",
                            "description": "节点污点信息。",
                            "isDefsType": true,
                            "typeName": "taint"
                          },
                          "title": "污点配置",
                          "type": "array"
                        },
                        "user_data": {
                          "description": "节点池自定义数据。更多详情，请参见[生成实例自定义数据](https://help.aliyun.com/document_detail/49121.html)。",
                          "example": "IyEvYmluL3NoCmVjaG8gIkhlbGxvIEFD****",
                          "title": "节点自定义数据",
                          "type": "string"
                        }
                      },
                      "title": "集群配置信息",
                      "type": "object"
                    },
                    "management": {
                      "description": "托管节点池配置，当前只在专业托管集群中生效。",
                      "properties": {
                        "auto_repair": {
                          "description": "自动修复，仅当`enable=true`时生效。\n\n- `true`：自动修复。\n- `false`：不自动修复。\n\n",
                          "example": "true",
                          "title": "是否启用自动修复",
                          "type": "boolean"
                        },
                        "auto_repair_policy": {
                          "description": "自动修复节点策略。",
                          "properties": {
                            "restart_node": {
                              "description": "是否允许重启节点。",
                              "example": "true",
                              "title": "是否允许重启节点。",
                              "type": "boolean"
                            }
                          },
                          "title": "自动修复节点策略。",
                          "type": "object"
                        },
                        "auto_upgrade": {
                          "description": "是否自动升级。",
                          "example": "true",
                          "title": "是否自动升级。",
                          "type": "boolean"
                        },
                        "auto_upgrade_policy": {
                          "description": "自动升级策略。",
                          "properties": {
                            "auto_upgrade_kubelet": {
                              "description": "是否允许自动升级kubelet。",
                              "example": "true",
                              "title": "是否允许自动升级kubelet。",
                              "type": "boolean"
                            }
                          },
                          "title": "自动升级策略。",
                          "type": "object"
                        },
                        "auto_vul_fix": {
                          "description": "是否自动修复CVE。",
                          "example": "true",
                          "title": "是否自动修复CVE。",
                          "type": "boolean"
                        },
                        "auto_vul_fix_policy": {
                          "description": "自动修复CVE策略。",
                          "properties": {
                            "restart_node": {
                              "description": "是否允许重启节点。",
                              "example": "true",
                              "title": "是否允许重启节点。",
                              "type": "boolean"
                            },
                            "vul_level": {
                              "description": "允许自动修复的漏洞级别，以逗号分隔。",
                              "example": "asap,nntf",
                              "title": "允许自动修复的漏洞级别，以逗号分隔。",
                              "type": "string"
                            }
                          },
                          "title": "自动修复CVE策略。",
                          "type": "object"
                        },
                        "enable": {
                          "description": "是否开启托管版节点池，取值：\n\n- `true`：开启托管节点池。\n- `false`：不开启托管节点池，只有当`enable=true`时，其他相关配置才生效。\n",
                          "example": "true",
                          "title": "是否开启托管版节点池",
                          "type": "boolean"
                        },
                        "upgrade_config": {
                          "description": "自动升级配置，仅当`enable=true`时生效。",
                          "properties": {
                            "auto_upgrade": {
                              "description": "是否启用自动升级，取值：\n\n- `true`：启用自动升级。\n- `false`：不启用自动升级。\n",
                              "example": "true",
                              "title": "是否启用自动升级，自修复",
                              "type": "boolean"
                            },
                            "max_unavailable": {
                              "description": "最大不可用节点数量，取值范围：\\[1,1000\\]\n\n默认值：1。",
                              "example": "1",
                              "format": "int64",
                              "title": "最大不可用节点数量",
                              "type": "integer"
                            },
                            "surge": {
                              "description": "额外节点数量。",
                              "example": "5",
                              "format": "int64",
                              "title": "额外节点数量",
                              "type": "integer"
                            },
                            "surge_percentage": {
                              "description": "设置额外节点数的比例，和`surge`二选一。\n\n额外节点数=额外节点数比例×节点数，例如，设置额外节点数比例为50%，存在的节点数为6，那么将产生的额外节点数=50%×6，也就是将生产3个额外节点数。",
                              "example": "50",
                              "format": "int64",
                              "title": "额外节点比例， 和surge 二选一",
                              "type": "integer"
                            }
                          },
                          "title": "是否启用自动修复",
                          "type": "object"
                        }
                      },
                      "title": "托管节点池配置",
                      "type": "object"
                    },
                    "max_nodes": {
                      "description": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制（仅受限于集群整体可以容纳的节点数，节点池本身无额外限制）。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0",
                      "example": "10",
                      "format": "int64",
                      "title": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制(仅受限于集群整体可以容纳的节点数，节点池本身无额外限制)。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0",
                      "type": "integer"
                    },
                    "node_config": {
                      "description": "节点配置。",
                      "properties": {
                        "kubelet_configuration": {
                          "$ref": "#/definitions/kubelet_config",
                          "description": "Kubelet参数配置。",
                          "isDefsType": true,
                          "title": "Kubelet参数配置。",
                          "typeName": "kubelet_config"
                        }
                      },
                      "title": "节点配置。",
                      "type": "object"
                    },
                    "nodepool_info": {
                      "description": "节点池信息。",
                      "properties": {
                        "created": {
                          "description": "节点池创建时间。",
                          "example": "2020-09-27T19:14:09.156823496+08:00",
                          "title": "节点池创建时间",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "是否为默认节点池，通常一个集群仅有一个默认节点池。取值：\n\n- `true`：设置为默认节点池。\n- `false`：不设置为默认节点池。\n\n",
                          "example": "true",
                          "title": "是否为默认节点池",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "节点池名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                          "example": "default-nodepool",
                          "title": "节点池名称",
                          "type": "string"
                        },
                        "nodepool_id": {
                          "description": "节点池ID。",
                          "example": "np615c0e0966124216a0412e10afe0****",
                          "title": "节点池ID",
                          "type": "string"
                        },
                        "region_id": {
                          "description": "地域ID。",
                          "example": "cn-beijing",
                          "title": "节点池所在地域ID",
                          "type": "string"
                        },
                        "resource_group_id": {
                          "description": "资源组ID。",
                          "example": "rg-acfmyvw3wjm****",
                          "title": "资源组ID",
                          "type": "string"
                        },
                        "type": {
                          "description": "节点池类型。取值：\n- `edge`：边缘节点池。\n- `ess`：云端节点池。",
                          "example": "ess",
                          "title": "节点池类型",
                          "type": "string"
                        },
                        "updated": {
                          "description": "节点池更新时间。",
                          "example": "2020-09-27T20:37:46+08:00",
                          "title": "节点池更新时间",
                          "type": "string"
                        }
                      },
                      "title": "节点池配置详情",
                      "type": "object"
                    },
                    "scaling_group": {
                      "description": "扩容组配置。\t",
                      "properties": {
                        "auto_renew": {
                          "description": "节点是否开启自动续费，当`instance_charge_type`取值为`PrePaid`时才生效，取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n",
                          "example": "false",
                          "title": "自动续费\t",
                          "type": "boolean"
                        },
                        "auto_renew_period": {
                          "description": "节点自动续费周期。当`instance_charge_type`取值为`PrePaid`时才生效，且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2, 3, 6, 12}。",
                          "example": "0",
                          "format": "int64",
                          "title": "自动付费时长\t",
                          "type": "integer"
                        },
                        "compensate_with_on_demand": {
                          "description": "当`multi_az_policy`取值为`COST_OPTIMIZED`时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值：\n\n- `true`：允许自动尝试创建按量实例满足ECS实例数量要求。\n- `false`：不允许自动尝试创建按量实例满足ECS实例数量要求。",
                          "example": "true",
                          "title": "当MultiAZPolicy取值为COST_OPTIMIZED时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值范围：true：允许。false：不允许。默认值：true",
                          "type": "boolean"
                        },
                        "data_disks": {
                          "description": "节点数据盘类型、大小等配置的组合。",
                          "items": {
                            "$ref": "#/definitions/data_disk",
                            "description": "节点数据盘配置。",
                            "isDefsType": true,
                            "typeName": "data_disk"
                          },
                          "title": "数据盘配置\t",
                          "type": "array"
                        },
                        "deploymentset_id": {
                          "description": "部署集ID。",
                          "example": "ds-bp1d19mmbsv3jf6xxxxx",
                          "title": "部署集ID。",
                          "type": "string"
                        },
                        "desired_size": {
                          "description": "节点池期望节点数",
                          "example": "2",
                          "format": "int64",
                          "title": "节点池期望节点数",
                          "type": "integer"
                        },
                        "image_id": {
                          "description": "自定义镜像ID，可通过`DescribeKubernetesVersionMetadata`查询系统支持的镜像。\n",
                          "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                          "title": "镜像ID\t",
                          "type": "string"
                        },
                        "instance_charge_type": {
                          "description": "节点池节点付费类型，取值：\n\n- `PrePaid`：预付费。\n- `PostPaid`：按量付费。\n\n",
                          "example": "PostPaid",
                          "title": "节点付费类型\t",
                          "type": "string"
                        },
                        "instance_types": {
                          "description": "节点实例规格列表，您可以选择多个实例规格作为备选，每个节点创建时，将从第一个规格开始尝试购买，直到创建成功。最终购买的实例规格可能随库存变化而不同。",
                          "example": "ecs.n4.large",
                          "items": {
                            "description": "节点实例规格。",
                            "example": "ecs.n4.large",
                            "type": "string"
                          },
                          "title": "节点类型\t",
                          "type": "array"
                        },
                        "internet_charge_type": {
                          "description": "节点公网IP网络计费类型",
                          "example": "PayByBandwidth",
                          "title": "节点公网IP网络计费类型",
                          "type": "string"
                        },
                        "internet_max_bandwidth_out": {
                          "description": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
                          "example": "10",
                          "format": "int64",
                          "title": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
                          "type": "integer"
                        },
                        "key_pair": {
                          "description": "密钥对名称，和`login_password`二选一。\n\n当节点池为托管版节点池时，只支持`key_pair`。",
                          "example": "pro-nodepool",
                          "title": "密钥对名称，和login_password二选一。",
                          "type": "string"
                        },
                        "login_password": {
                          "description": "SSH登录密码，和`key_pair`二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。\n\n出于安全性考虑，密码查询结果经过加密处理。",
                          "example": "******",
                          "title": "登录密码，返回结果是加密的。",
                          "type": "string"
                        },
                        "multi_az_policy": {
                          "description": "多可用区伸缩组ECS实例扩缩容策略。取值：\n\n- `PRIORITY`：根据您定义的虚拟交换机（VSwitchIds.N）扩缩容。当优先级较高的虚拟交换机所在可用区无法创建ECS实例时，自动使用下一优先级的虚拟交换机创建ECS实例。\n\n- `COST_OPTIMIZED`：按vCPU单价从低到高进行尝试创建。当伸缩配置设置了抢占式计费方式的多实例规格时，优先创建对应抢占式实例。您可以继续通过`CompensateWithOnDemand`参数指定当抢占式实例由于库存等原因无法创建时，是否自动尝试以按量付费的方式创建。\n\n  >`COST_OPTIMIZED`仅在伸缩配置设置了多实例规格或者选用了抢占式实例的情况下生效。\n\n- `BALANCE`：在伸缩组指定的多可用区之间均匀分配ECS实例。如果由于库存不足等原因可用区之间变得不平衡，您可以通过API `RebalanceInstances`平衡资源。更多信息，请参见[RebalanceInstances](https://help.aliyun.com/document_detail/71516.html)。\n\n",
                          "example": "COST_OPTIMIZED",
                          "title": "多可用区伸缩组ECS实例扩缩容策略",
                          "type": "string"
                        },
                        "on_demand_base_capacity": {
                          "description": "伸缩组所需要按量实例个数的最小值，取值范围：\\[0,1000\\]。当按量实例个数少于该值时，将优先创建按量实例。",
                          "example": "0",
                          "format": "int64",
                          "title": "伸缩组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例",
                          "type": "integer"
                        },
                        "on_demand_percentage_above_base_capacity": {
                          "description": "伸缩组满足最小按量实例数（`on_demand_base_capacity`）要求后，超出的实例中按量实例应占的比例。取值范围：\\[0,100\\]。",
                          "example": "20",
                          "format": "int64",
                          "title": "伸缩组满足最小按量实例数（OnDemandBaseCapacity）要求后，超出的实例中按量实例应占的比例，取值范围：0～100",
                          "type": "integer"
                        },
                        "period": {
                          "description": "节点包年包月时长，当`instance_charge_type`取值为`PrePaid`时才生效且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2 , 3, 6, 12, 24, 36, 48, 60}。",
                          "example": "1",
                          "format": "int64",
                          "title": "包年包月时长\t",
                          "type": "integer"
                        },
                        "period_unit": {
                          "description": "节点付费周期，当`instance_charge_type`取值为`PrePaid`时才生效。\n\n`Month`：以月为计时单位，当前只支持以月为单位。\n\n",
                          "example": "Month",
                          "title": "自动付费周期\t",
                          "type": "string"
                        },
                        "platform": {
                          "description": "操作系统发行版。取值：\n\n- `CentOS`\n- `AliyunLinux`\n- `Windows`\n- `WindowsCore`",
                          "example": "AliyunLinux",
                          "title": "操作系统发行版。取值： CentOS，AliyunLinux，Windows，WindowsCore",
                          "type": "string"
                        },
                        "private_pool_options": {
                          "description": "私有池选项。",
                          "properties": {
                            "id": {
                              "description": "私有池ID。即弹性保障服务ID或容量预定服务ID。",
                              "example": "eap-bp67acfmxazb4****",
                              "type": "string"
                            },
                            "match_criteria": {
                              "description": "私有节点池类型，实例启动的私有池容量选项。弹性保障服务或容量预定服务在生效后会生成私有池容量，供实例启动时选择。取值：\n\n- `Open`：开放模式。将自动匹配开放类型的私有池容量。如果没有符合条件的私有池容量，则使用公共池资源启动。\n\n- `Target`：指定模式。使用指定的私有池容量启动实例，如果该私有池容量不可用，则实例会启动失败。\n\n- `None`：不使用模式。实例启动将不使用私有池容量。",
                              "example": "Open",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "ram_policy": {
                          "description": "Worker RAM角色名称，授权ECS实例为集群Woker节点。",
                          "example": "KubernetesWorkerRole-021dc54f-929b-437a-8ae0-34c24d3e****",
                          "title": "RAM 角色名称\t",
                          "type": "string"
                        },
                        "rds_instances": {
                          "description": "如果指定了RDS实例列表，集群节点ECS会自动加入RDS访问白名单。",
                          "items": {
                            "description": "RDS实例。",
                            "example": "rm-xxx",
                            "type": "string"
                          },
                          "title": "RDS列表\t",
                          "type": "array"
                        },
                        "scaling_group_id": {
                          "description": "伸缩组ID。",
                          "example": "asg-2ze8n5qw4atggut8****",
                          "title": "扩容组ID\t",
                          "type": "string"
                        },
                        "scaling_policy": {
                          "description": "伸缩组模式，取值：\n\n- `release`：标准模式，根据申请资源值的使用量，通过创建、释放ECS的方式进行伸缩。\n- `recycle`：极速模式，通过创建、停机、启动的方式进行伸缩，提高再次伸缩的速度（停机时计算资源不收费，只收取存储费用，本地盘机型除外）。",
                          "example": "release",
                          "title": "扩容节点策略\t",
                          "type": "string"
                        },
                        "security_group_id": {
                          "description": "节点池安全组ID，当节点池绑定多个安全组时，为`security_group_ids`中的第一个值。",
                          "example": "sg-2ze1iuk12m2sb4c4****",
                          "title": "安全组ID。",
                          "type": "string"
                        },
                        "security_group_ids": {
                          "description": "节点池安全组ID列表。",
                          "items": {
                            "description": "节点池安全组ID列表。",
                            "example": "sg-2ze1iuk12m2sb4c4****",
                            "type": "string"
                          },
                          "title": "安全组ID列表",
                          "type": "array"
                        },
                        "spot_instance_pools": {
                          "description": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：\\[1,10\\]。",
                          "example": "5",
                          "format": "int64",
                          "title": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：1~10",
                          "type": "integer"
                        },
                        "spot_instance_remedy": {
                          "description": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值：\n\n- `true`：开启补齐抢占式实例。\n- `false`：不开启补齐抢占式实例。\n\n",
                          "example": "false",
                          "title": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例",
                          "type": "boolean"
                        },
                        "spot_price_limit": {
                          "description": "抢占式实例市场价格区间配置。",
                          "items": {
                            "description": "抢占实例市场价格区间配置，可为不同实例规格设置不同的价格区间。",
                            "properties": {
                              "instance_type": {
                                "description": "抢占式实例规格。",
                                "example": "ecs.c6.large",
                                "title": "抢占式实例规格",
                                "type": "string"
                              },
                              "price_limit": {
                                "description": "单台实例市场价格区间。\n\n单位：元/时。\n",
                                "example": "0.39",
                                "title": "单台实例上限价格，单位：元/小时",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "title": "抢占实例价格上限配置",
                          "type": "array"
                        },
                        "spot_strategy": {
                          "description": "抢占式实例类型，取值：\n- NoSpot：非抢占式实例。\n- SpotWithPriceLimit：设置抢占实例价格上限。\n- SpotAsPriceGo：系统自动出价，跟随当前市场实际价格。\n\n更多信息，请参见[抢占式实例](https://help.aliyun.com/document_detail/157759.html)。\n\n",
                          "example": "NoSpot",
                          "title": "抢占式实例类型",
                          "type": "string"
                        },
                        "system_disk_category": {
                          "description": "节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n",
                          "example": "cloud_efficiency",
                          "title": "系统盘类型。\t",
                          "type": "string"
                        },
                        "system_disk_performance_level": {
                          "description": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
                          "example": "PL1",
                          "title": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
                          "type": "string"
                        },
                        "system_disk_size": {
                          "description": "节点系统盘大小，单位为GiB。\n\n取值范围：\\[20,500\\]。\n\n",
                          "example": "120",
                          "format": "int64",
                          "title": "系统盘大小\t",
                          "type": "integer"
                        },
                        "tags": {
                          "description": "仅为ECS实例添加标签。\n\n标签键不可以重复，最大长度为128个字符；标签键和标签值都不能以“aliyun”、“acs:”开头，或包含“https://”、“http://”。",
                          "items": {
                            "$ref": "#/definitions/tag",
                            "description": "节点标签。",
                            "isDefsType": true,
                            "typeName": "tag"
                          },
                          "title": "节点标签\t",
                          "type": "array"
                        },
                        "vswitch_ids": {
                          "description": "虚拟交换机ID，取值范围：\\[1,20\\]。\n\n> 为保证高可用性，建议选择不同可用区的虚拟交换机。",
                          "items": {
                            "description": "虚拟交换机ID。",
                            "example": "vsw-2ze3ds0mdip0hdz8i****",
                            "type": "string"
                          },
                          "title": "虚拟交换机ID",
                          "type": "array"
                        }
                      },
                      "title": "扩容组配置详情",
                      "type": "object"
                    },
                    "status": {
                      "description": "节点池状态信息。\t",
                      "properties": {
                        "failed_nodes": {
                          "description": "失败实例数。",
                          "example": "0",
                          "format": "int64",
                          "title": "失败的节点数\t",
                          "type": "integer"
                        },
                        "healthy_nodes": {
                          "description": "处于健康状态实例数。",
                          "example": "3",
                          "format": "int64",
                          "title": "处于健康状态的节点数\t",
                          "type": "integer"
                        },
                        "initial_nodes": {
                          "description": "正在创建的节点数。\t",
                          "example": "0",
                          "format": "int64",
                          "title": "正在创建的节点数\t",
                          "type": "integer"
                        },
                        "offline_nodes": {
                          "description": "离线节点数。\t",
                          "example": "0",
                          "format": "int64",
                          "title": "离线节点数\t",
                          "type": "integer"
                        },
                        "removing_nodes": {
                          "description": "正在被移除的节点数。\t",
                          "example": "0",
                          "format": "int64",
                          "title": "正在被移除的节点数",
                          "type": "integer"
                        },
                        "serving_nodes": {
                          "description": "处于工作状态的节点数。",
                          "example": "3",
                          "format": "int64",
                          "title": "正在工作节点数\t",
                          "type": "integer"
                        },
                        "state": {
                          "description": "节点池状态，取值：\n\n- `active`：已激活。\n- `scaling`：伸缩中。\n- `removing`：节点移除中。\n- `deleting`：删除中。\n- `updating`：更新中。",
                          "example": "active",
                          "title": "节点池状态\t",
                          "type": "string"
                        },
                        "total_nodes": {
                          "description": "节点池内节点数量。",
                          "example": "3",
                          "format": "int64",
                          "title": "节点总数\t",
                          "type": "integer"
                        }
                      },
                      "title": "节点池状态详情",
                      "type": "object"
                    },
                    "tee_config": {
                      "description": "加密计算配置。\t",
                      "properties": {
                        "tee_enable": {
                          "description": "是否开启加密计算集群，取值：\n\n- `true`：开启。\n- `false`：不开启。\n",
                          "example": "false",
                          "title": "是否为加密计算节点池\t",
                          "type": "boolean"
                        }
                      },
                      "title": "加密计算配置详情",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "title": "节点池列表",
                "type": "array"
              }
            },
            "title": "返回数据体",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "调用DescribeClusterNodePools查询集群内所有节点池详情。",
      "title": "查询节点池列表"
    },
    "DescribeClusterNodes": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterNodes\n根据集群ID，查询该集群中的所有节点的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"nodes\\\": [\\n    {\\n      \\\"creation_time\\\": \\\"2020-08-25T11:25:35+08:00\\\",\\n      \\\"error_message\\\": \\\"error***\\\",\\n      \\\"expired_time\\\": \\\"2099-12-31T23:59:00+08:00\\\",\\n      \\\"host_name\\\": \\\"iZ2vcckdmxp7u0urj2k****\\\",\\n      \\\"image_id\\\": \\\"aliyun_2_1903_x64_20G_alibase_20200529.vhd\\\",\\n      \\\"instance_charge_type\\\": \\\"PostPaid\\\",\\n      \\\"instance_id\\\": \\\"i-2vcckdmxp7u0urj2****\\\",\\n      \\\"instance_name\\\": \\\"worker-k8s-for-cs-c5cdf7e3938bc4f8eb0e44b21a80f****\\\",\\n      \\\"instance_role\\\": \\\"Worker\\\",\\n      \\\"instance_status\\\": \\\"Running\\\",\\n      \\\"instance_type\\\": \\\"ecs.c5.xlarge\\\",\\n      \\\"instance_type_family\\\": \\\"ecs.c5\\\",\\n      \\\"ip_address\\\": [\\n        \\\"192.168.0.36\\\"\\n      ],\\n      \\\"is_aliyun_node\\\": true,\\n      \\\"node_name\\\": \\\"cn-chengdu.192.168.0.36\\\",\\n      \\\"node_status\\\": \\\"Ready\\\",\\n      \\\"nodepool_id\\\": \\\"np0794239424a84eb7a95327369d56****\\\",\\n      \\\"source\\\": \\\"ess_attach\\\",\\n      \\\"state\\\": \\\"running\\\",\\n      \\\"spot_strategy\\\": \\\"NoSpot\\\"\\n    }\\n  ],\\n  \\\"page\\\": {\\n    \\\"page_number\\\": 1,\\n    \\\"page_size\\\": 10,\\n    \\\"total_count\\\": 5\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterNodesResponse>\\n    <nodes>\\n        <creation_time>2020-08-25T11:25:35+08:00</creation_time>\\n        <error_message>error***</error_message>\\n        <expired_time>2099-12-31T23:59:00+08:00</expired_time>\\n        <host_name>iZ2vcckdmxp7u0urj2k****</host_name>\\n        <image_id>aliyun_2_1903_x64_20G_alibase_20200529.vhd</image_id>\\n        <instance_charge_type>PostPaid</instance_charge_type>\\n        <instance_id>i-2vcckdmxp7u0urj2****</instance_id>\\n        <instance_name>worker-k8s-for-cs-c5cdf7e3938bc4f8eb0e44b21a80f****</instance_name>\\n        <instance_role>Worker</instance_role>\\n        <instance_status>Running</instance_status>\\n        <instance_type>ecs.c5.xlarge</instance_type>\\n        <instance_type_family>ecs.c5</instance_type_family>\\n        <ip_address>192.168.0.36</ip_address>\\n        <is_aliyun_node>true</is_aliyun_node>\\n        <node_name>cn-chengdu.192.168.0.36</node_name>\\n        <node_status>Ready</node_status>\\n        <nodepool_id>np0794239424a84eb7a95327369d56****</nodepool_id>\\n        <source>ess_attach</source>\\n        <state>running</state>\\n        <spot_strategy>NoSpot</spot_strategy>\\n    </nodes>\\n    <page>\\n        <page_number>1</page_number>\\n        <page_size>10</page_size>\\n        <total_count>5</total_count>\\n    </page>\\n</DescribeClusterNodesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，查询该集群中的所有节点的详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群节点"
      },
      "method": "get",
      "name": "DescribeClusterNodes",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "instanceIds",
          "required": false,
          "schema": {
            "description": "节点实例ID列表，多值使用英文逗号（,）分隔。",
            "example": "\"i-bp11xjhwkj8k966u****,i-bp1dmhc2bu5igkyq****\"",
            "required": false,
            "title": "节点实例ID，按照实例ID进行过滤。  节点池ID不为空时会忽略此字段。多节点用逗号分割",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "nodepool_id",
          "required": false,
          "schema": {
            "description": "节点池ID。",
            "example": "np****",
            "required": false,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "state",
          "required": false,
          "schema": {
            "description": "集群节点状态，按照集群节点运行状态进行过滤，取值：\n\n- `all`：以下4种状态的集群节点。\n- `running`：正在运行的集群节点。\n- `removing`：正在删除的集群节点。\n- `initial`：正在初始化的集群节点。\n- `failed`：创建失败的集群节点。\n\n默认值：`all`。",
            "example": "running",
            "required": false,
            "title": "节点状态。默认值：all。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "pageSize",
          "required": false,
          "schema": {
            "description": "每页显示的记录数。取值范围为[1,100]。\n\n默认值：10。",
            "example": "10",
            "required": false,
            "title": "每页大小。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "pageNumber",
          "required": false,
          "schema": {
            "description": "页码。\n\n默认值：1。",
            "example": "1",
            "required": false,
            "title": "分页数量",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodes",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "nodes": {
                "description": "节点详情列表。",
                "items": {
                  "description": "节点详情。",
                  "properties": {
                    "creation_time": {
                      "description": "节点创建时间。",
                      "example": "2020-08-25T11:25:35+08:00",
                      "title": "节点创建时间。",
                      "type": "string"
                    },
                    "error_message": {
                      "description": "节点创建时错误信息。",
                      "example": "error***",
                      "title": "错误信息说明。",
                      "type": "string"
                    },
                    "expired_time": {
                      "description": "节点到期时间。",
                      "example": "2099-12-31T23:59:00+08:00",
                      "title": "节点过期时间。",
                      "type": "string"
                    },
                    "host_name": {
                      "description": "节点主机名。",
                      "example": "iZ2vcckdmxp7u0urj2k****",
                      "title": "节点主机名。",
                      "type": "string"
                    },
                    "image_id": {
                      "description": "节点使用的系统镜像ID。",
                      "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                      "title": "节点使用的镜像ID。",
                      "type": "string"
                    },
                    "instance_charge_type": {
                      "description": "节点付费类型。取值：\n\n- `PrePaid`：预付费，包年包月。选择该类付费方式时，您必须确认自己的账号支持余额支付或信用支付，否则将返回`InvalidPayMethod`的错误提示。\n\n- `PostPaid`：按量付费。",
                      "example": "PostPaid",
                      "title": "节点付费类型。",
                      "type": "string"
                    },
                    "instance_id": {
                      "description": "节点实例ID。",
                      "example": "i-2vcckdmxp7u0urj2****",
                      "title": "节点实例ID。",
                      "type": "string"
                    },
                    "instance_name": {
                      "description": "节点在集群中的名称。",
                      "example": "worker-k8s-for-cs-c5cdf7e3938bc4f8eb0e44b21a80f****",
                      "title": "节点名称。",
                      "type": "string"
                    },
                    "instance_role": {
                      "description": "节点角色类型：\n\n- Master：集群Master节点。\n- Worker：集群Worker节点。",
                      "example": "Worker",
                      "title": "节点实例角色类型，Master或Worker。",
                      "type": "string"
                    },
                    "instance_status": {
                      "description": "节点运行状态。",
                      "example": "Running",
                      "title": "节点实例状态，",
                      "type": "string"
                    },
                    "instance_type": {
                      "description": "节点类型。",
                      "example": "ecs.c5.xlarge",
                      "title": "节点实例类型。",
                      "type": "string"
                    },
                    "instance_type_family": {
                      "description": "节点所属ECS族名称。",
                      "example": "ecs.c5",
                      "title": "节点实例所属ECS实例簇名称。",
                      "type": "string"
                    },
                    "ip_address": {
                      "description": "节点IP地址。",
                      "items": {
                        "description": "IP地址。",
                        "example": "192.168.0.36",
                        "type": "string"
                      },
                      "title": "节点IP地址。",
                      "type": "array"
                    },
                    "is_aliyun_node": {
                      "description": "是否为阿里云实例。取值：\n\n- `true`：是阿里云实例。\n\n- `false`：不是阿里云实例。",
                      "example": "true",
                      "title": "节点是否为aliyun实例。",
                      "type": "boolean"
                    },
                    "node_name": {
                      "description": "节点名称，集群内节点标识。",
                      "example": "cn-chengdu.192.168.0.36",
                      "title": "节点名称，该名称是k8s专用名称。",
                      "type": "string"
                    },
                    "node_status": {
                      "description": "节点是否就绪。取值：\n\n- `Ready`：节点已就绪。\n\n- `NotReady`：节点未就绪。\n\n- `Unknown`：未知。\n\n- `Offline`：离线中。",
                      "example": "Ready",
                      "title": "节点状态，是否Ready。",
                      "type": "string"
                    },
                    "nodepool_id": {
                      "description": "节点池ID。",
                      "example": "np0794239424a84eb7a95327369d56****",
                      "title": "节点池ID。",
                      "type": "string"
                    },
                    "source": {
                      "description": "节点通过何种方式初始化，例如：手动创建或ROS创建。",
                      "example": "ess_attach",
                      "title": "节点通过什么方式创建出来的，例如：ROS。",
                      "type": "string"
                    },
                    "spot_strategy": {
                      "description": "抢占式实例类型，取值：\n- NoSpot：非抢占式实例。\n- SpotWithPriceLimit：设置抢占实例价格上限。\n- SpotAsPriceGo：系统自动出价，跟随当前市场实际价格。\n",
                      "example": "NoSpot",
                      "title": "抢占时实例类型",
                      "type": "string"
                    },
                    "state": {
                      "description": "节点运行状态。取值：\n\n- `pending`：创建中。\n\n- `running`：运行中。\n\n- `starting`：启动中。\n\n- `stopping`：停止中。\n\n- `stopped`：已停止。",
                      "example": "running",
                      "title": "ECS运行状态，例如：Running。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "节点信息列表。",
                "type": "array"
              },
              "page": {
                "description": "分页信息。",
                "properties": {
                  "page_number": {
                    "description": "页码。",
                    "example": "1",
                    "format": "int32",
                    "title": "总页数。",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "每页显示的记录数。",
                    "example": "10",
                    "format": "int32",
                    "title": "单页展示结果数量。",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "5",
                    "format": "int32",
                    "title": "结果总条数。",
                    "type": "integer"
                  }
                },
                "title": "分页信息。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID，查询该集群中的所有节点的详情。",
      "title": "查询集群节点"
    },
    "DescribeClusterResources": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterResources\n根据集群ID查询该集群的所有资源。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"cluster_id\\\": \\\"cb95aa626a47740afbf6aa099b65****\\\",\\n    \\\"created\\\": \\\"2023-08-15T14:34:42+08:00\\\",\\n    \\\"instance_id\\\": \\\"ngw-wz9sphwk42sdtjixo****\\\",\\n    \\\"resource_info\\\": \\\"{\\\\\\\\\\\\\\\"Id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"k8s_NAT_Gateway\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"k8s_NAT_Gateway\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"ALIYUN::VPC::NatGateway\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Status\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"CREATE_COMPLETE\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"StatusReason\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"state changed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Updated\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"2023-08-15T06:33:10\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"PhysicalId\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"ngw-wz9sphwk42sdtjixo****\\\\\\\\\\\\\\\"}\\\",\\n    \\\"resource_type\\\": \\\"ALIYUN::VPC::NatGateway\\\",\\n    \\\"state\\\": \\\"CREATE_COMPLETE\\\",\\n    \\\"auto_create\\\": 1,\\n    \\\"dependencies\\\": [\\n      {\\n        \\\"cluster_id\\\": \\\"cc5ee03f63e43425cb6f71f1a1756****\\\",\\n        \\\"resource_type\\\": \\\"ALIYUN::VPC::NatGateway\\\",\\n        \\\"instance_id\\\": \\\"ngw-wz9sphwk42sdtjixo****\\\"\\n      }\\n    ]\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterResourcesResponse>\\n    <cluster_id>cb95aa626a47740afbf6aa099b65****</cluster_id>\\n    <created>2023-08-15T14:34:42+08:00</created>\\n    <instance_id>ngw-wz9sphwk42sdtjixo****</instance_id>\\n    <resource_info>{\\\\\\\"Id\\\\\\\":\\\\\\\"k8s_NAT_Gateway\\\\\\\",\\\\\\\"Name\\\\\\\":\\\\\\\"k8s_NAT_Gateway\\\\\\\",\\\\\\\"Type\\\\\\\":\\\\\\\"ALIYUN::VPC::NatGateway\\\\\\\",\\\\\\\"Status\\\\\\\":\\\\\\\"CREATE_COMPLETE\\\\\\\",\\\\\\\"StatusReason\\\\\\\":\\\\\\\"state changed\\\\\\\",\\\\\\\"Updated\\\\\\\":\\\\\\\"2023-08-15T06:33:10\\\\\\\",\\\\\\\"PhysicalId\\\\\\\":\\\\\\\"ngw-wz9sphwk42sdtjixo****\\\\\\\"}</resource_info>\\n    <resource_type>ALIYUN::VPC::NatGateway</resource_type>\\n    <state>CREATE_COMPLETE</state>\\n    <auto_create>1</auto_create>\\n    <dependencies>\\n        <cluster_id>cc5ee03f63e43425cb6f71f1a1756****</cluster_id>\\n        <resource_type>ALIYUN::VPC::NatGateway</resource_type>\\n        <instance_id>ngw-wz9sphwk42sdtjixo****</instance_id>\\n    </dependencies>\\n</DescribeClusterResourcesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID查询该集群的所有资源。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群资源"
      },
      "method": "get",
      "name": "DescribeClusterResources",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。\n\n关于如何查看集群ID，请参见[查看集群信息](https://help.aliyun.com/document_detail/89446.html)。\n\n您也可通过API接口[DescribeClustersV1](https://help.aliyun.com/document_detail/183905.html)，查看阿里云账号下所有创建的集群信息。",
            "example": "cb95aa626a47740afbf6aa099b65****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/resources",
      "responses": {
        "200": {
          "schema": {
            "description": "资源对象列表。",
            "items": {
              "description": "资源详情。",
              "properties": {
                "auto_create": {
                  "description": "资源是否由ACK创建：\n\n- 1：表示由ACK创建\n- 0：表示该资源为已有资源",
                  "example": "1",
                  "format": "int64",
                  "title": "是否为自动创建。",
                  "type": "integer"
                },
                "cluster_id": {
                  "description": "集群ID。",
                  "example": "cb95aa626a47740afbf6aa099b65****",
                  "title": "集群ID。",
                  "type": "string"
                },
                "created": {
                  "description": "资源创建时间。",
                  "example": "2023-08-15T14:34:42+08:00",
                  "title": "资源创建时间。",
                  "type": "string"
                },
                "dependencies": {
                  "description": "依赖资源列表。",
                  "items": {
                    "description": "依赖资源详情。",
                    "properties": {
                      "cluster_id": {
                        "description": "依赖资源的集群ID。",
                        "example": "cc5ee03f63e43425cb6f71f1a1756****",
                        "title": "依赖资源的集群ID。",
                        "type": "string"
                      },
                      "instance_id": {
                        "description": "依赖资源实例ID。",
                        "example": "ngw-wz9sphwk42sdtjixo****",
                        "title": "依赖资源实例ID。",
                        "type": "string"
                      },
                      "resource_type": {
                        "description": "依赖资源类型。",
                        "example": "ALIYUN::VPC::NatGateway",
                        "title": "依赖资源类型。",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "instance_id": {
                  "description": "资源ID。",
                  "example": "ngw-wz9sphwk42sdtjixo****",
                  "title": "资源实例ID。",
                  "type": "string"
                },
                "resource_info": {
                  "description": "资源信息。关于资源的源信息，请参见[ListStackResources](https://help.aliyun.com/document_detail/133836.html)。",
                  "example": "{\\\"Id\\\":\\\"k8s_NAT_Gateway\\\",\\\"Name\\\":\\\"k8s_NAT_Gateway\\\",\\\"Type\\\":\\\"ALIYUN::VPC::NatGateway\\\",\\\"Status\\\":\\\"CREATE_COMPLETE\\\",\\\"StatusReason\\\":\\\"state changed\\\",\\\"Updated\\\":\\\"2023-08-15T06:33:10\\\",\\\"PhysicalId\\\":\\\"ngw-wz9sphwk42sdtjixo****\\\"}",
                  "title": "资源元信息。",
                  "type": "string"
                },
                "resource_type": {
                  "description": "资源类型。",
                  "example": "ALIYUN::VPC::NatGateway",
                  "title": "资源类型。",
                  "type": "string"
                },
                "state": {
                  "description": "资源状态。可选值：\n\n- `CREATE_COMPLETE`：成功创建资源。\n- `CREATE_FAILED`：创建资源失败。\n- `CREATE_IN_PROGRESS`：创建资源中。\n- `DELETE_FAILED`：删除资源失败。\n- `DELETE_IN_PROGRESS`：删除资源中。\n- `ROLLBACK_COMPLETE`：成功回滚。\n- `ROLLBACK_FAILED`：回滚失败。\n- `ROLLBACK_IN_PROGRESS`：回滚中。",
                  "example": "CREATE_COMPLETE",
                  "title": "资源状态。",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回数据体。",
            "type": "array"
          }
        }
      },
      "summary": "根据集群ID查询该集群的所有资源。",
      "title": "查询集群资源"
    },
    "DescribeClusterTasks": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterTasks\n根据集群ID查询集群任务列表。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"page_info\\\": {\\n    \\\"page_size\\\": 10,\\n    \\\"page_number\\\": 1,\\n    \\\"total_count\\\": 10\\n  },\\n  \\\"tasks\\\": [\\n    {\\n      \\\"task_id\\\": \\\"install-addons-c3xxxxxx\\\",\\n      \\\"task_type\\\": \\\"cluster_addon_install\\\",\\n      \\\"state\\\": \\\"success\\\",\\n      \\\"created\\\": \\\"2022-08-03T10:11:33+08:00\\\",\\n      \\\"updated\\\": \\\"2022-08-03T10:12:03.482+08:00\\\",\\n      \\\"error\\\": {\\n        \\\"message\\\": \\\"Addon status not match\\\",\\n        \\\"code\\\": \\\"BadRequest\\\"\\n      }\\n    }\\n  ],\\n  \\\"requestId\\\": \\\"0527ac9a-c899-4341-a21a-xxxxxxxxx\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID查询集群任务列表。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群任务列表"
      },
      "method": "get",
      "name": "DescribeClusterTasks",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群id。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": false,
            "title": "集群id。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "format": "int32",
            "required": false,
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "page_number",
          "required": false,
          "schema": {
            "format": "int32",
            "required": false,
            "type": "integer"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/tasks",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "page_info": {
                "description": "分页信息。",
                "properties": {
                  "page_number": {
                    "description": "页数。",
                    "example": "1",
                    "format": "int64",
                    "title": "页数。",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "每页数量。",
                    "example": "10",
                    "format": "int64",
                    "title": "每页数量。",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "10",
                    "format": "int64",
                    "title": "结果总数。",
                    "type": "integer"
                  }
                },
                "title": "分页信息。",
                "type": "object"
              },
              "requestId": {
                "description": "请求ID。",
                "example": "0527ac9a-c899-4341-a21a-xxxxxxxxx",
                "title": "请求ID。",
                "type": "string"
              },
              "tasks": {
                "description": "任务数组。",
                "items": {
                  "description": "任务详情。",
                  "properties": {
                    "created": {
                      "description": "创建时间。",
                      "example": "2022-08-03T10:11:33+08:00",
                      "title": "创建时间。",
                      "type": "string"
                    },
                    "error": {
                      "description": "任务错误信息。",
                      "properties": {
                        "code": {
                          "description": "错误码。",
                          "example": "BadRequest",
                          "title": "错误码。",
                          "type": "string"
                        },
                        "message": {
                          "description": "错误信息。",
                          "example": "Addon status not match",
                          "title": "错误信息。",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "state": {
                      "description": "任务状态。",
                      "example": "success",
                      "title": "任务状态。",
                      "type": "string"
                    },
                    "task_id": {
                      "description": "任务ID。",
                      "example": "install-addons-c3xxxxxx",
                      "title": "任务ID。",
                      "type": "string"
                    },
                    "task_type": {
                      "description": "任务类型。",
                      "example": "cluster_addon_install",
                      "title": "任务类型。",
                      "type": "string"
                    },
                    "updated": {
                      "description": "更新时间。",
                      "example": "2022-08-03T10:12:03.482+08:00",
                      "title": "更新时间。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "任务数组。",
                "type": "array"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID查询集群任务列表。",
      "title": "查询集群任务列表"
    },
    "DescribeClusterUserKubeconfig": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterUserKubeconfig\n> KubeConfig签发证书的默认有效期为3年。在临近过期两个月内，您可以通过容器服务管理控制台或获取集群KubeConfig接口获取轮转后刷新的KubeConfig，新KubeConfig证书的有效期仍为3年，老的KubeConfig凭据在证书过期前仍然有效，请您根据控制台显示或接口返回的KubeConfig过期时间及时获取轮转凭据。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"config\\\": \\\"apiVersion: v1****\\\",\\n  \\\"expiration\\\": \\\"2024-03-10T09:56:17Z\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClusterUserKubeconfigResponse>\\n    <config>apiVersion: v1****</config>\\n    <expiration>2024-03-10T09:56:17Z</expiration>\\n</DescribeClusterUserKubeconfigResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID查询访问该集群的kubeconfig配置。",
        "title": "获取集群kubeconfig"
      },
      "method": "get",
      "name": "DescribeClusterUserKubeconfig",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "PrivateIpAddress",
          "required": false,
          "schema": {
            "description": "是否获取内网连接配置。取值：\n- `true`：仅获取内网连接凭据。\n- `false`：仅获取公网连接凭据。 \n\n默认值：`false`。",
            "example": "true",
            "required": false,
            "title": "ApiServer是否为内网地址。",
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "TemporaryDurationMinutes",
          "required": false,
          "schema": {
            "description": "临时kubeconfig有效期，单位：分钟。取值范围：15（15分钟）～4320（3天）。\n>当不设置该参数时，将由系统自动确定一个更长的有效期，具体过期时间通过返回的`expiration`字段的值确定。",
            "example": "15",
            "format": "int64",
            "required": false,
            "title": "临时kubeconfig有效期，单位：分钟。  最小值：15（15分钟）  最大值：4320（3天）。",
            "type": "integer"
          }
        }
      ],
      "path": "/k8s/{ClusterId}/user_config",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "config": {
                "description": "集群访问配置。关于如何查看访问集群配置信息，请参见[配置集群凭据](https://help.aliyun.com/document_detail/86494.html)。",
                "example": "apiVersion: v1****",
                "title": "kubeconfig内容。",
                "type": "string"
              },
              "expiration": {
                "description": "kubeconfig的过期时间。格式：RFC3339格式的UTC时间。",
                "example": "2024-03-10T09:56:17Z",
                "title": "kubeconfig过期时间。格式：RFC3339 格式的 UTC 时间。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID查询访问该集群的kubeconfig配置。",
      "title": "获取集群kubeconfig"
    },
    "DescribeClusterV2UserKubeconfig": {
      "consumes": [
        "application/json"
      ],
      "deprecated": true,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterV2UserKubeconfig\n获取集群kubeconfig接口",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "获取集群kubeconfig接口"
      },
      "method": "get",
      "name": "DescribeClusterV2UserKubeconfig",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "PrivateIpAddress",
          "schema": {
            "title": "是否为内网访问。",
            "type": "boolean"
          }
        }
      ],
      "path": "/api/v2/k8s/{ClusterId}/user_config",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "config": {
                "title": "kubeconfig内容。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "获取集群kubeconfig接口",
      "title": "获取集群kubeconfig接口"
    },
    "DescribeClusterVuls": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusterVuls\n查询集群安全漏洞信息。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"vul_records\\\": [\\n    {\\n      \\\"nodepool_name\\\": \\\"test\\\",\\n      \\\"nodepool_id\\\": \\\"np0156da1082b54fa987e32618dd45f5d3\\\",\\n      \\\"node_count\\\": 1,\\n      \\\"vul_name\\\": \\\"oval:com.redhat.rhsa:def:xxxxxxx\\\",\\n      \\\"vul_alias_name\\\": \\\"CVE-2022-xxxx:rsync 安全漏洞\\\",\\n      \\\"vul_type\\\": \\\"cve\\\",\\n      \\\"necessity\\\": \\\"asap\\\",\\n      \\\"cve_list\\\": [\\n        \\\"CVE-2022-xxxxx\\\"\\n      ]\\n    }\\n  ]\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "查询集群安全漏洞信息。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群安全漏洞信息"
      },
      "method": "get",
      "name": "DescribeClusterVuls",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
            "required": false,
            "title": "A short description of struct",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/vuls",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "返回体",
            "properties": {
              "vul_records": {
                "description": "漏洞列表。",
                "items": {
                  "description": "漏洞信息。",
                  "properties": {
                    "cve_list": {
                      "description": "CVE列表。",
                      "items": {
                        "description": "CVE信息。",
                        "example": "CVE-2022-xxxxx",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "necessity": {
                      "description": "漏洞等级。",
                      "enumValueTitles": {
                        "asap": "高",
                        "later": "中",
                        "nntf": "低"
                      },
                      "example": "asap",
                      "type": "string"
                    },
                    "node_count": {
                      "description": "具有该漏洞的节点数量。",
                      "example": "1",
                      "format": "int32",
                      "type": "integer"
                    },
                    "nodepool_id": {
                      "description": "节点池ID。",
                      "example": "np0156da1082b54fa987e32618dd45f5d3",
                      "type": "string"
                    },
                    "nodepool_name": {
                      "description": "节点池名称。",
                      "example": "test",
                      "type": "string"
                    },
                    "vul_alias_name": {
                      "description": "漏洞别名。",
                      "example": "CVE-2022-xxxx:rsync 安全漏洞",
                      "type": "string"
                    },
                    "vul_name": {
                      "description": "漏洞名称。",
                      "example": "oval:com.redhat.rhsa:def:xxxxxxx",
                      "type": "string"
                    },
                    "vul_type": {
                      "description": "漏洞类型。",
                      "enumValueTitles": {
                        "app": "应用漏洞",
                        "cms": "WebCMS漏洞",
                        "cve": "Linux漏洞",
                        "emg": "应急漏洞",
                        "sca": "应用漏洞（软件成分分析）",
                        "sys": "Windows漏洞"
                      },
                      "example": "cve",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "查询集群安全漏洞信息。",
      "title": "查询集群安全漏洞信息"
    },
    "DescribeClusters": {
      "consumes": [
        "application/json"
      ],
      "deprecated": true,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClusters\n查看容器服务中创建的所有集群（包括Swarm和Kubernetes集群）。",
      "ext": {
        "extraInfo": " ",
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "requestParamsDescription": " ",
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"348D4C9C-9105-4A1B-A86E-B58F0F875575\\\",\\n  \\\"clusters\\\": [\\n    {\\n      \\\"created\\\": \\\"2019-11-25T15:50:20+08:00\\\",\\n      \\\"security_group_id\\\": \\\"sg-2zedf74ifulatvx0****\\\",\\n      \\\"docker_version\\\": \\\"18.09.2\\\",\\n      \\\"master_url\\\": \\\"\\\\\\\"{\\\\\\\\\\\\\\\"api_server_endpoint\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://47.93.xx.xxx:6443https://mirana.cs-cn-beijing.aliyuncs.com:4243https://192.xxx.x.xx:6443\\\\\\\\\\\\\\\"}\\\\\\\",   \\\\\\\"external_loadbalancer_id\\\\\\\": \\\\\\\"lb-2ze3buguz3gx9920z****\\\\\\\"\\\",\\n      \\\"meta_data\\\": \\\"***\\\",\\n      \\\"cluster_id\\\": \\\"cb95aa626a47740afbf6aa099b650****\\\",\\n      \\\"external_loadbalancer_id\\\": \\\"lb-2ze3buguz3gx9920z****\\\",\\n      \\\"network_mode\\\": \\\"vpc\\\",\\n      \\\"zone_id\\\": \\\"cn-beijing-a\\\",\\n      \\\"deletion_protection\\\": true,\\n      \\\"current_version\\\": \\\"1.14.8-aliyun.1\\\",\\n      \\\"updated\\\": \\\"2020-01-13T23:01:03+08:00\\\",\\n      \\\"resource_group_id\\\": \\\"rg-acfmyvw3wjm****\\\",\\n      \\\"cluster_type\\\": \\\"Kubernetes\\\",\\n      \\\"region_id\\\": \\\"cn-beijing\\\",\\n      \\\"vpc_id\\\": \\\"vpc-2zecuu62b9zw7a7qn****\\\",\\n      \\\"data_disk_size\\\": 0,\\n      \\\"state\\\": \\\"running\\\",\\n      \\\"size\\\": 4,\\n      \\\"vswitch_id\\\": \\\"vsw-2zete8s4qocqg0mf6****\\\",\\n      \\\"vswitch_cidr\\\": \\\"\\\\\\\"26\\\\\\\"\\\",\\n      \\\"name\\\": \\\"my-test-Kubernetes-cluster\\\",\\n      \\\"data_disk_category\\\": \\\"cloud\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"key\\\": \\\"2\\\",\\n          \\\"value\\\": \\\"3\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<0>\\n    <name>sl-numa</name>\\n    <cluster_id>cd62be8675b514f278163cf750acb****</cluster_id>\\n    <size>4</size>\\n    <region_id>cn-shenzhen</region_id>\\n    <state>running</state>\\n    <cluster_type>Kubernetes</cluster_type>\\n    <current_version>1.16.6-aliyun.1</current_version>\\n    <resource_group_id>rg-acfmyvw3wjm****</resource_group_id>\\n    <instance_type/>\\n    <vswitch_id>vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****</vswitch_id>\\n    <data_disk_category>cloud</data_disk_category>\\n    <security_group_id>sg-wz956lln6kknnwlw****</security_group_id>\\n    <tags>\\n        <key>ack.aliyun.com</key>\\n        <value>cd62be8675b514f278163cf750acb****</value>\\n    </tags>\\n    <zone_id>cn-shenzhen-e</zone_id>\\n    <docker_version>19.03.5</docker_version>\\n    <deletion_protection>false</deletion_protection>\\n</0>\\n<1>\\n    <name>sl-terway</name>\\n    <cluster_id>c5b269738d1f5427ebd32884fc59c****</cluster_id>\\n    <size>5</size>\\n    <region_id>cn-shenzhen</region_id>\\n    <state>running</state>\\n    <cluster_type>Kubernetes</cluster_type>\\n    <current_version>1.16.6-aliyun.1</current_version>\\n    <vpc_id>vpc-wz984yvbd6lck22z3****</vpc_id>\\n    <vswitch_id>vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****,vsw-wz9uwxhawmtzg7u9h****</vswitch_id>\\n    <security_group_id>sg-wz9e8pvnjalx1tm1****</security_group_id>\\n    <tags>\\n        <key>ack.aliyun.com</key>\\n        <value>c5b269738d1f5427ebd32884fc59c****</value>\\n    </tags>\\n    <zone_id>cn-shenzhen-e</zone_id>\\n    <docker_version>19.03.5</docker_version>\\n    <deletion_protection>false</deletion_protection>\\n</1>\",\"errorExample\":\"\"}]",
        "responseParamsDescription": " ",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查看容器服务中创建的所有集群（包括Swarm和Kubernetes集群）。",
        "title": "(旧)查询用户所有集群实例"
      },
      "method": "get",
      "name": "DescribeClusters",
      "parameters": [
        {
          "in": "query",
          "name": "name",
          "required": false,
          "schema": {
            "description": "根据集群Name进行模糊匹配查询。",
            "example": "test",
            "required": false,
            "title": "集群名称。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "clusterType",
          "required": false,
          "schema": {
            "description": "集群类型。",
            "example": "ManagedKubernetes",
            "required": false,
            "title": "集群类型。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters",
      "responses": {
        "200": {
          "schema": {
            "items": {
              "properties": {
                "cluster_id": {
                  "title": "集群ID。",
                  "type": "string"
                },
                "cluster_type": {
                  "title": "集群类型。",
                  "type": "string"
                },
                "created": {
                  "title": "集群创建时间。",
                  "type": "string"
                },
                "current_version": {
                  "title": "集群当前版本。",
                  "type": "string"
                },
                "data_disk_category": {
                  "title": "节点系统盘类型。",
                  "type": "string"
                },
                "data_disk_size": {
                  "format": "int64",
                  "title": "节点系统盘大小。",
                  "type": "integer"
                },
                "deletion_protection": {
                  "title": "集群是否开启删除保护。",
                  "type": "boolean"
                },
                "docker_version": {
                  "title": "容器运行时版本。",
                  "type": "string"
                },
                "external_loadbalancer_id": {
                  "title": "集群Ingerss SLB实例的ID。",
                  "type": "string"
                },
                "init_version": {
                  "title": "集群创建时版本。",
                  "type": "string"
                },
                "master_url": {
                  "title": "集群的endpoint地址。",
                  "type": "string"
                },
                "meta_data": {
                  "title": "集群元数据。",
                  "type": "string"
                },
                "name": {
                  "title": "集群名称。",
                  "type": "string"
                },
                "network_mode": {
                  "title": "集群使用的网络类型。",
                  "type": "string"
                },
                "private_zone": {
                  "title": "集群是否开启Private Zone，默认false。",
                  "type": "boolean"
                },
                "profile": {
                  "title": "集群标识，区分是否为边缘托管版。",
                  "type": "string"
                },
                "region_id": {
                  "title": "集群所在地域ID。",
                  "type": "string"
                },
                "resource_group_id": {
                  "title": "集群资源组ID。",
                  "type": "string"
                },
                "security_group_id": {
                  "title": "集群安全组ID。",
                  "type": "string"
                },
                "size": {
                  "format": "int64",
                  "title": "集群内实例数量。",
                  "type": "integer"
                },
                "state": {
                  "title": "集群运行状态。",
                  "type": "string"
                },
                "subnet_cidr": {
                  "title": "POD网络。",
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "properties": {
                      "key": {
                        "title": "标签名。",
                        "type": "string"
                      },
                      "value": {
                        "title": "标签值。",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "集群标签。",
                  "type": "array"
                },
                "updated": {
                  "title": "集群更新时间。",
                  "type": "string"
                },
                "vpc_id": {
                  "title": "集群使用的VPC ID。",
                  "type": "string"
                },
                "vswitch_cidr": {
                  "title": "虚拟交换机网络ID。",
                  "type": "string"
                },
                "vswitch_id": {
                  "title": "节点使用的Vswitch ID。",
                  "type": "string"
                },
                "worker_ram_role_name": {
                  "title": "集群Worker节点RAM角色名称。",
                  "type": "string"
                },
                "zone_id": {
                  "title": "集群所在Region内的区域ID。",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "properties": {
              "RequestId": {
                "description": "请求ID。",
                "example": "348D4C9C-9105-4A1B-A86E-B58F0F875575",
                "index": 200,
                "type": "string"
              },
              "clusters": {
                "description": "集群详情列表。",
                "index": 200,
                "itemName": "clusterDetail",
                "items": {
                  "properties": {
                    "cluster_id": {
                      "description": "集群ID。",
                      "example": "cb95aa626a47740afbf6aa099b650****",
                      "index": 200,
                      "type": "string"
                    },
                    "cluster_type": {
                      "description": "集群类型。",
                      "example": "Kubernetes",
                      "index": 200,
                      "type": "string"
                    },
                    "created": {
                      "description": "集群的创建时间。",
                      "example": "2019-11-25T15:50:20+08:00",
                      "index": 200,
                      "type": "string"
                    },
                    "current_version": {
                      "description": "集群当前版本。\n",
                      "example": "1.14.8-aliyun.1",
                      "index": 200,
                      "type": "string"
                    },
                    "data_disk_category": {
                      "description": "数据盘类型。",
                      "example": "cloud",
                      "index": 200,
                      "type": "string"
                    },
                    "data_disk_size": {
                      "description": "数据盘大小，单位GB。",
                      "example": "0",
                      "format": "int32",
                      "index": 200,
                      "type": "integer"
                    },
                    "deletion_protection": {
                      "description": "是否开启集群删除保护，防止通过控制台或api误删除集群。",
                      "example": "true",
                      "index": 200,
                      "type": "boolean"
                    },
                    "docker_version": {
                      "description": "集群使用的Docker版本。",
                      "example": "18.09.2",
                      "index": 200,
                      "type": "string"
                    },
                    "external_loadbalancer_id": {
                      "description": "集群负载均衡服务的ID。",
                      "example": "lb-2ze3buguz3gx9920z****",
                      "index": 200,
                      "type": "string"
                    },
                    "master_url": {
                      "description": "连接集群的endpoint地址，包括api_server_endpoint、dashboard_endpoint、mirana_endpoint、reverse_tunnel_endpoint和intranet_api_server_endpoint。更多详细信息，参见[SSH访问Kubernetes集群](~~86491~~)。                           ",
                      "example": "\"{\\\"api_server_endpoint\\\":\\\"https://47.93.xx.xxx:6443https://mirana.cs-cn-beijing.aliyuncs.com:4243https://192.xxx.x.xx:6443\\\"}\",   \"external_loadbalancer_id\": \"lb-2ze3buguz3gx9920z****\"",
                      "index": 200,
                      "type": "string"
                    },
                    "meta_data": {
                      "description": "集群元数据信息。",
                      "example": "***",
                      "index": 200,
                      "type": "string"
                    },
                    "name": {
                      "description": "集群名称。",
                      "example": "my-test-Kubernetes-cluster",
                      "index": 200,
                      "type": "string"
                    },
                    "network_mode": {
                      "description": "集群网络模式（VPC网络：vpc）。",
                      "example": "vpc",
                      "index": 200,
                      "type": "string"
                    },
                    "region_id": {
                      "description": "集群所在地域ID。",
                      "example": "cn-beijing",
                      "index": 200,
                      "type": "string"
                    },
                    "resource_group_id": {
                      "description": "集群资源组ID。",
                      "example": "rg-acfmyvw3wjm****",
                      "index": 200,
                      "type": "string"
                    },
                    "security_group_id": {
                      "description": "集群安全组ID。\n",
                      "example": "sg-2zedf74ifulatvx0****",
                      "index": 200,
                      "type": "string"
                    },
                    "size": {
                      "description": "节点数。",
                      "example": "4",
                      "format": "int32",
                      "index": 200,
                      "type": "integer"
                    },
                    "state": {
                      "description": "集群状态，running为运行状态，filed和stoped为异常状态。",
                      "example": "running",
                      "index": 200,
                      "type": "string"
                    },
                    "tags": {
                      "description": "集群标签。",
                      "index": 200,
                      "itemName": "tags",
                      "items": {
                        "properties": {
                          "key": {
                            "description": "集群标签名称。",
                            "example": "2",
                            "index": 200,
                            "type": "string"
                          },
                          "value": {
                            "description": "集群标签值。",
                            "example": "3",
                            "index": 200,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated": {
                      "description": "最后更新时间。",
                      "example": "2020-01-13T23:01:03+08:00",
                      "index": 200,
                      "type": "string"
                    },
                    "vpc_id": {
                      "description": "专有网络(VPC) ID。",
                      "example": "vpc-2zecuu62b9zw7a7qn****",
                      "index": 200,
                      "type": "string"
                    },
                    "vswitch_cidr": {
                      "description": "虚拟交换机(VSwitch)的网络前缀。",
                      "example": "\"26\"",
                      "index": 200,
                      "type": "string"
                    },
                    "vswitch_id": {
                      "description": "虚拟交换机(VSwitch) ID。",
                      "example": "vsw-2zete8s4qocqg0mf6****",
                      "index": 200,
                      "type": "string"
                    },
                    "zone_id": {
                      "description": "集群所在地域的Zone的ID。",
                      "example": "cn-beijing-a",
                      "index": 200,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "title": "返回数据体。",
            "type": "array"
          }
        },
        "5XX": {}
      },
      "summary": "查看容器服务中创建的所有集群（包括Swarm和Kubernetes集群）。",
      "title": "(旧)查询用户所有集群实例"
    },
    "DescribeClustersV1": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeClustersV1\n查询已创建的所有ACK集群的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"clusters\\\": [\\n    {\\n      \\\"cluster_id\\\": \\\"c3fb96524f9274b4495df0f12a6b5****\\\",\\n      \\\"cluster_type\\\": \\\"Kubernetes\\\",\\n      \\\"created\\\": \\\"2020-08-20T10:51:29+08:00\\\",\\n      \\\"init_version\\\": \\\"1.16.9-aliyun.1\\\",\\n      \\\"current_version\\\": \\\"1.16.9-aliyun.1\\\",\\n      \\\"next_version\\\": \\\"1.18.8-aliyun.1\\\",\\n      \\\"deletion_protection\\\": true,\\n      \\\"docker_version\\\": \\\"19.03.5\\\",\\n      \\\"external_loadbalancer_id\\\": \\\"lb-2vcrbmlevo6kjpgch****\\\",\\n      \\\"master_url\\\": \\\"{\\\\\\\\\\\\\\\"api_server_endpoint\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"intranet_api_server_endpoint\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://192.168.0.251:6443\\\\\\\\\\\\\\\"}\\\",\\n      \\\"meta_data\\\": \\\"{\\\\\\\\\\\\\\\"Addons\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"config\\\\\\\\\\\\\\\":***}\\\",\\n      \\\"name\\\": \\\"cluster-demo\\\",\\n      \\\"network_mode\\\": \\\"vpc\\\",\\n      \\\"private_zone\\\": false,\\n      \\\"profile\\\": \\\"Default\\\",\\n      \\\"region_id\\\": \\\"cn-beijing\\\",\\n      \\\"resource_group_id\\\": \\\"rg-acfmyvw3wjm****\\\",\\n      \\\"security_group_id\\\": \\\"sg-2vcgwsrwgt5mp0yi****\\\",\\n      \\\"size\\\": 5,\\n      \\\"state\\\": \\\"running\\\",\\n      \\\"subnet_cidr\\\": \\\"172.21.0.0/16\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"key\\\": \\\"env\\\",\\n          \\\"value\\\": \\\"prod\\\"\\n        }\\n      ],\\n      \\\"updated\\\": \\\"2020-09-16T11:09:55+08:00\\\",\\n      \\\"vpc_id\\\": \\\"vpc-2vcg932hsxsxuqbgl****\\\",\\n      \\\"vswitch_id\\\": \\\"vsw-2vc41xuumx5z2rdma****,vsw-2vc41xuumx5z2rdma****\\\",\\n      \\\"worker_ram_role_name\\\": \\\"KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****\\\",\\n      \\\"zone_id\\\": \\\"cn-beijing-b\\\",\\n      \\\"cluster_spec\\\": \\\"ack.standard\\\",\\n      \\\"maintenance_window\\\": {\\n        \\\"enable\\\": false,\\n        \\\"maintenance_time\\\": \\\"03:00:00Z\\\",\\n        \\\"duration\\\": \\\"3h\\\",\\n        \\\"weekly_period\\\": \\\"Monday,Thursday\\\"\\n      }\\n    }\\n  ],\\n  \\\"page_info\\\": {\\n    \\\"page_number\\\": 3,\\n    \\\"page_size\\\": 20,\\n    \\\"total_count\\\": 50\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeClustersV1Response>\\n    <clusters>\\n        <cluster_id>c3fb96524f9274b4495df0f12a6b5****</cluster_id>\\n        <cluster_type>Kubernetes</cluster_type>\\n        <created>2020-08-20T10:51:29+08:00</created>\\n        <init_version>1.16.9-aliyun.1</init_version>\\n        <current_version>1.16.9-aliyun.1</current_version>\\n        <next_version>1.18.8-aliyun.1</next_version>\\n        <deletion_protection>true</deletion_protection>\\n        <docker_version>19.03.5</docker_version>\\n        <external_loadbalancer_id>lb-2vcrbmlevo6kjpgch****</external_loadbalancer_id>\\n        <master_url>{\\\\\\\"api_server_endpoint\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"intranet_api_server_endpoint\\\\\\\":\\\\\\\"https://192.168.0.251:6443\\\\\\\"}</master_url>\\n        <meta_data>{\\\\\\\"Addons\\\\\\\":[{\\\\\\\"config\\\\\\\":***}</meta_data>\\n        <name>cluster-demo</name>\\n        <network_mode>vpc</network_mode>\\n        <private_zone>false</private_zone>\\n        <profile>Default</profile>\\n        <region_id>cn-beijing</region_id>\\n        <resource_group_id>rg-acfmyvw3wjm****</resource_group_id>\\n        <security_group_id>sg-2vcgwsrwgt5mp0yi****</security_group_id>\\n        <size>5</size>\\n        <state>running</state>\\n        <subnet_cidr>172.21.0.0/16</subnet_cidr>\\n        <tags>\\n            <key>env</key>\\n            <value>prod</value>\\n        </tags>\\n        <updated>2020-09-16T11:09:55+08:00</updated>\\n        <vpc_id>vpc-2vcg932hsxsxuqbgl****</vpc_id>\\n        <vswitch_id>vsw-2vc41xuumx5z2rdma****,vsw-2vc41xuumx5z2rdma****</vswitch_id>\\n        <worker_ram_role_name>KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****</worker_ram_role_name>\\n        <zone_id>cn-beijing-b</zone_id>\\n        <cluster_spec>ack.standard</cluster_spec>\\n        <maintenance_window>\\n            <enable>false</enable>\\n            <maintenance_time>03:00:00Z</maintenance_time>\\n            <duration>3h</duration>\\n            <weekly_period>Monday,Thursday</weekly_period>\\n        </maintenance_window>\\n    </clusters>\\n    <page_info>\\n        <page_number>3</page_number>\\n        <page_size>20</page_size>\\n        <total_count>50</total_count>\\n    </page_info>\\n</DescribeClustersV1Response>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询已创建的所有ACK集群的详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询所有集群列表"
      },
      "method": "get",
      "name": "DescribeClustersV1",
      "parameters": [
        {
          "in": "query",
          "name": "name",
          "required": false,
          "schema": {
            "description": "集群名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
            "example": "cluster-demo",
            "required": false,
            "title": "通过集群名称进行模糊查询。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_type",
          "required": false,
          "schema": {
            "description": "集群类型，取值：\n- `Kubernetes`: ACK专有版集群。\n- `ManagedKubernetes`：ACK托管版集群，包括ACK Pro版集群、ACK基础版集群、ACK Serverless Pro版集群、ACK Serverless基础版集群、ACK Edge Pro版集群、ACK Edge基础版。\n- `ExternalKubernetes`：ACK注册集群。\n\n\n\n",
            "example": "Kubernetes",
            "required": false,
            "title": "集群类型。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "description": "每页显示的记录数。",
            "example": "10",
            "format": "int64",
            "required": false,
            "title": "单页大小。",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "page_number",
          "required": false,
          "schema": {
            "description": "当前页码。",
            "example": "3",
            "format": "int64",
            "required": false,
            "title": "分页数。",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "profile",
          "required": false,
          "schema": {
            "description": "集群标识。\n当集群类型选择`ManagedKubernetes`时，通过集群标识区分集群类型，取值：\n- `Default`：托管版集群。\n- `Serverless`：ACK Serverless集群。\n- `Edge`：边缘集群。\n\n当集群类型选择`Ask`时，取值：\n\n`ask.v2`：ACK Serverless集群。\n\n默认值为空，取值可以为空，为空时不通过该字段进行过滤。",
            "example": "Default",
            "required": false,
            "title": "集群标识。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "cluster_spec",
          "required": false,
          "schema": {
            "description": "集群规格，当集群类型选择`ManagedKubernetes`时，通过集群规格区分集群的类型，取值：\n- `ack.pro.small`：专业托管集群，即ACK Pro版集群。\n- `ack.standard`：标准托管集群。\n\n默认值为空值，取值可以为空，为空时不通过该字段进行过滤。",
            "example": "ack.pro.small",
            "required": false,
            "title": "集群规格。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "region_id",
          "required": false,
          "schema": {
            "description": "集群地域。通过指定该字段，可以过滤出该地域下的集群列表。",
            "example": "cn-hangzhou",
            "required": false,
            "title": "地域。",
            "type": "string"
          }
        }
      ],
      "path": "/api/v1/clusters",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体数据。",
            "properties": {
              "clusters": {
                "description": "集群信息列表。",
                "items": {
                  "description": "集群实例。\n\n",
                  "properties": {
                    "cluster_id": {
                      "description": "集群ID。",
                      "example": "c3fb96524f9274b4495df0f12a6b5****",
                      "title": "集群ID。",
                      "type": "string"
                    },
                    "cluster_spec": {
                      "description": "托管版集群类型，面向托管集群：\n- `ack.pro.small`：专业托管集群。\n- `ack.standard`：标准托管集群。\n\n",
                      "example": "ack.standard",
                      "title": "托管版集群类型，面向托管集群。 • ack.pro.small：专业托管集群。 • ack.standard ：标准托管集群。",
                      "type": "string"
                    },
                    "cluster_type": {
                      "description": "集群类型，取值：\n\n- `Kubernetes`: 专有版集群。\n- `ManagedKubernetes`：托管版集群。\n- `Ask`：ACK Serverless集群。\n- `ExternalKubernetes`：注册集群。\n",
                      "example": "Kubernetes",
                      "title": "集群类型。",
                      "type": "string"
                    },
                    "created": {
                      "description": "集群创建时间。",
                      "example": "2020-08-20T10:51:29+08:00",
                      "title": "集群初始化时间。",
                      "type": "string"
                    },
                    "current_version": {
                      "description": "集群当前版本。",
                      "example": "1.16.9-aliyun.1",
                      "title": "集群当前版本。",
                      "type": "string"
                    },
                    "deletion_protection": {
                      "description": "集群删除保护，防止通过控制台或API误删除集群。取值：\n\n- `true`：启用集群删除保护，将不能通过控制台或API删除集群。\n- `false`：不启用集群删除保护，则能通过控制台或API删除集群。\n",
                      "example": "true",
                      "title": "集群是否开启删除保护。",
                      "type": "boolean"
                    },
                    "docker_version": {
                      "description": "集群Docker版本。",
                      "example": "19.03.5",
                      "title": "集群使用的Docker版本。",
                      "type": "string"
                    },
                    "external_loadbalancer_id": {
                      "description": "集群中Ingress SLB实例。\n\n默认实例规格：性能保障型（slb.s1.small）。",
                      "example": "lb-2vcrbmlevo6kjpgch****",
                      "title": "集群负载均衡服务的ID。",
                      "type": "string"
                    },
                    "init_version": {
                      "description": "集群版本，与Kubernetes社区基线版本保持一致。建议选择最新版本，若不指定，默认使用最新版本。\n\n目前ACK控制台提供两种最新Kubernetes版本的集群。您可以通过API创建其他Kubernetes版本集群。ACK支持的Kubernetes版本，请参见[Kubernetes版本发布概览](https://help.aliyun.com/document_detail/185269.html)。",
                      "example": "1.16.9-aliyun.1",
                      "title": "集群初始化版本。",
                      "type": "string"
                    },
                    "maintenance_window": {
                      "$ref": "#/definitions/maintenance_window",
                      "description": "集群维护窗口，该功能只在专业托管版中生效。",
                      "isDefsType": true,
                      "typeName": "maintenance_window"
                    },
                    "master_url": {
                      "description": "集群API Server访问地址，包含内网访问地址以及公网访问地址。",
                      "example": "{\\\"api_server_endpoint\\\":\\\"\\\",\\\"intranet_api_server_endpoint\\\":\\\"https://192.168.0.251:6443\\\"}",
                      "title": "集群访问地址列表。",
                      "type": "string"
                    },
                    "meta_data": {
                      "description": "集群元数据信息。",
                      "example": "{\\\"Addons\\\":[{\\\"config\\\":***}",
                      "title": "集群元数据信息。",
                      "type": "string"
                    },
                    "name": {
                      "description": "集群名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                      "example": "cluster-demo",
                      "title": "集群名称。",
                      "type": "string"
                    },
                    "network_mode": {
                      "description": "集群网络模式。取值：\n\n- `classic`：经典网络。\n- `vpc`：专有网络。\n- `overlay`：叠加网络。\n- `calico`：Calico网络。\n",
                      "example": "vpc",
                      "title": "集群使用的网络类型，例如：VPC网络。",
                      "type": "string"
                    },
                    "next_version": {
                      "description": "集群可升级版本。",
                      "example": "1.18.8-aliyun.1",
                      "title": "集群可升级版本。",
                      "type": "string"
                    },
                    "private_zone": {
                      "description": "集群Private Zone配置。取值：\n\n- `true`：启用Private Zone。\n- `false`：不启用Private Zone。\n",
                      "example": "false",
                      "title": "集群是否开启Private Zone。",
                      "type": "boolean"
                    },
                    "profile": {
                      "description": "集群标识，取值：\n\n- `Edge`：边缘托管版集群。\n- `Default`：非边缘托管版集群。\n\n",
                      "example": "Default",
                      "title": "边缘集群表示，用于区分边缘托管版集群。",
                      "type": "string"
                    },
                    "region_id": {
                      "description": "集群所在地域ID。",
                      "example": "cn-beijing",
                      "title": "地域ID。",
                      "type": "string"
                    },
                    "resource_group_id": {
                      "description": "集群资源组ID。",
                      "example": "rg-acfmyvw3wjm****",
                      "title": "集群资源组ID。",
                      "type": "string"
                    },
                    "security_group_id": {
                      "description": "集群安全组ID。",
                      "example": "sg-2vcgwsrwgt5mp0yi****",
                      "title": "集群安全组ID。",
                      "type": "string"
                    },
                    "size": {
                      "description": "集群当前节点数量，包含Master节点以及Worker节点。",
                      "example": "5",
                      "format": "int64",
                      "title": "集群节点数。",
                      "type": "integer"
                    },
                    "state": {
                      "description": "集群运行状态，取值：\n\n- `initial`：集群创建中。\n- `failed`：集群创建失败。\n- `running`：集群运行中。\n- `updating`：集群升级中。\n- ` updating_failed`：集群升级失败。\n- `scaling`：集群伸缩中。\n- `stopped`：集群已经停止运行。\n- `deleting`：集群删除中。\n- `deleted`：集群已经被删除。\n- `delete_failed`：集群删除失败。   ",
                      "example": "running",
                      "title": "集群运行状态。",
                      "type": "string"
                    },
                    "subnet_cidr": {
                      "description": "Pod网络地址段，必须是有效的私有网段，即以下网段及其子网：\n- 10.0.0.0/8\n- 172.16-31.0.0/12-16\n- 192.168.0.0/16\n\n不能与VPC及VPC内已有Kubernetes集群使用的网段重复，创建成功后不能修改。\n\n关于集群网络规划，请参见[VPC下Kubernetes的网络地址段规划](https://help.aliyun.com/document_detail/86500.html)。",
                      "example": "172.21.0.0/16",
                      "title": "POD网段地址。",
                      "type": "string"
                    },
                    "tags": {
                      "description": "集群资源标签。",
                      "items": {
                        "$ref": "#/definitions/tag",
                        "description": "集群资源标签。",
                        "isDefsType": true,
                        "typeName": "tag"
                      },
                      "title": "集群标签。",
                      "type": "array"
                    },
                    "updated": {
                      "description": "集群更新时间。",
                      "example": "2020-09-16T11:09:55+08:00",
                      "title": "集群更新时间。",
                      "type": "string"
                    },
                    "vpc_id": {
                      "description": "集群专有网络ID，创建集群时必传。",
                      "example": "vpc-2vcg932hsxsxuqbgl****",
                      "title": "集群所在的VPC ID。",
                      "type": "string"
                    },
                    "vswitch_id": {
                      "description": "虚拟交换机ID，创建集群时可选择1~3个虚拟交换机。为保证集群高可用，建议选择不同可用区的虚拟交换机。",
                      "example": "vsw-2vc41xuumx5z2rdma****,vsw-2vc41xuumx5z2rdma****",
                      "title": "集群使用的虚拟交换ID。",
                      "type": "string"
                    },
                    "worker_ram_role_name": {
                      "description": "Worker RAM角色名称，授权ECS实例为集群Woker节点。",
                      "example": "KubernetesWorkerRole-ec87d15b-edca-4302-933f-c8a16bf0****",
                      "title": "集群Worker RAM角色。",
                      "type": "string"
                    },
                    "zone_id": {
                      "description": "集群所属可用区ID。",
                      "example": "cn-beijing-b",
                      "title": "可用区ID。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "集群详情列表。",
                "type": "array"
              },
              "page_info": {
                "description": "分页信息。\n",
                "properties": {
                  "page_number": {
                    "description": "分页数。",
                    "example": "3",
                    "format": "int32",
                    "title": "分页数。",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "单页大小。",
                    "example": "20",
                    "format": "int32",
                    "title": "单页大小。",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "50",
                    "format": "int32",
                    "title": "结果总数。",
                    "type": "integer"
                  }
                },
                "title": "分页信息。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "查询已创建的所有ACK集群的详情。",
      "title": "查询所有集群列表"
    },
    "DescribeEvents": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeEvents\n查询用户操作事件。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"events\\\": [\\n    {\\n      \\\"event_id\\\": \\\"A234-1234-1234\\\",\\n      \\\"type\\\": \\\"nodepool_upgrade\\\",\\n      \\\"source\\\": \\\"/clusters/cf62854ac2130470897be7a27ed1f****/nodepools\\\",\\n      \\\"subject\\\": \\\"nodePool-id\\\",\\n      \\\"time\\\": \\\"2022-11-23T20:48:01+08:00\\\",\\n      \\\"cluster_id\\\": \\\"cluster-id\\\",\\n      \\\"data\\\": {\\n        \\\"level\\\": \\\"info\\\",\\n        \\\"reason\\\": \\\"Started\\\",\\n        \\\"message\\\": \\\"Start to upgrade NodePool nodePool/nodePool-A\\\"\\n      }\\n    }\\n  ],\\n  \\\"page_info\\\": {\\n    \\\"page_size\\\": 50,\\n    \\\"page_number\\\": 1,\\n    \\\"total_count\\\": 3\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeEventsResponse>\\n    <events>\\n        <event_id>A234-1234-1234</event_id>\\n        <type>nodepool_upgrade</type>\\n        <source>/clusters/cf62854ac2130470897be7a27ed1f****/nodepools</source>\\n        <subject>nodePool-id</subject>\\n        <time>2022-11-23T20:48:01+08:00</time>\\n        <cluster_id>cluster-id</cluster_id>\\n        <data>\\n            <level>info</level>\\n            <reason>Started</reason>\\n            <message>Start to upgrade NodePool nodePool/nodePool-A</message>\\n        </data>\\n    </events>\\n    <page_info>\\n        <page_size>50</page_size>\\n        <page_number>1</page_number>\\n        <total_count>3</total_count>\\n    </page_info>\\n</DescribeEventsResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询用户操作事件。",
        "title": "查询用户事件"
      },
      "method": "get",
      "name": "DescribeEvents",
      "parameters": [
        {
          "in": "query",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "cf62854ac2130470897be7a27ed1f****",
            "required": false,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "type",
          "required": false,
          "schema": {
            "description": "事件类型。取值：\n- `cluster_create`：创建集群。\n- `cluster_scaleout`：扩容集群。\n- `cluster_attach`：添加已有节点。\n- `cluster_delete`：删除集群。\n- `cluster_upgrade`：升级集群。\n- `cluster_migrate`：迁移集群。\n- `cluster_node_delete`：移除节点。\n- `cluster_node_drain`：清空节点。\n- `cluster_modify`：修改集群。\n- `cluster_configuration_modify`：修改集群管控配置。\n- `cluster_addon_install`：安装组件。\n- `cluster_addon_upgrade`：升级组件。\n- `cluster_addon_uninstall`：卸载组件。\n- `runtime_upgrade`：升级运行时。\n- `nodepool_upgrade`：升级节点池。\n- `nodepool_update`：更新节点池。",
            "example": "nodepool_upgrade",
            "required": false,
            "title": "事件类型",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "description": "每页显示数量。",
            "example": "50",
            "format": "int64",
            "required": false,
            "title": "页数",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "page_number",
          "required": false,
          "schema": {
            "description": "分页查询页数。",
            "example": "1",
            "format": "int64",
            "required": false,
            "title": "没页记录数量",
            "type": "integer"
          }
        }
      ],
      "path": "/events",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数",
            "properties": {
              "events": {
                "description": "事件详情。",
                "items": {
                  "description": "事件详情。",
                  "properties": {
                    "cluster_id": {
                      "description": "集群ID。",
                      "example": "cluster-id",
                      "title": "集群ID",
                      "type": "string"
                    },
                    "data": {
                      "description": "事件描述。",
                      "properties": {
                        "level": {
                          "description": "事件等级。",
                          "example": "info",
                          "title": "事件级别",
                          "type": "string"
                        },
                        "message": {
                          "description": "事件详情。",
                          "example": "Start to upgrade NodePool nodePool/nodePool-A",
                          "title": "事件详情",
                          "type": "string"
                        },
                        "reason": {
                          "description": "事件状态。",
                          "example": "Started",
                          "title": "事件状态",
                          "type": "string"
                        }
                      },
                      "title": "事件描述",
                      "type": "object"
                    },
                    "event_id": {
                      "description": "事件ID。",
                      "example": "A234-1234-1234",
                      "title": "事件ID",
                      "type": "string"
                    },
                    "source": {
                      "description": "事件来源。",
                      "example": "/clusters/cf62854ac2130470897be7a27ed1f****/nodepools",
                      "title": "事件源",
                      "type": "string"
                    },
                    "subject": {
                      "description": "事件主体。",
                      "example": "nodePool-id",
                      "title": "事件",
                      "type": "string"
                    },
                    "time": {
                      "description": "事件开始时间。",
                      "example": "2022-11-23T20:48:01+08:00",
                      "title": "事件开始事件",
                      "type": "string"
                    },
                    "type": {
                      "description": "事件类型。取值：\n- `cluster_create`：创建集群。\n- `cluster_scaleout`：扩容集群。\n- `cluster_attach`：添加已有节点。\n- `cluster_delete`：删除集群。\n- `cluster_upgrade`：升级集群。\n- `cluster_migrate`：迁移集群。\n- `cluster_node_delete`：移除节点。\n- `cluster_node_drain`：清空节点。\n- `cluster_modify`：修改集群。\n- `cluster_configuration_modify`：修改集群管控配置。\n- `cluster_addon_install`：安装组件。\n- `cluster_addon_upgrade`：升级组件。\n- `cluster_addon_uninstall`：卸载组件。\n- `runtime_upgrade`：升级运行时。\n- `nodepool_upgrade`：升级节点池。\n- `nodepool_update`：更新节点池。",
                      "example": "nodepool_upgrade",
                      "title": "事件类型",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "page_info": {
                "description": "分页信息。",
                "properties": {
                  "page_number": {
                    "description": "分页查询页数。",
                    "example": "1",
                    "format": "int64",
                    "title": "每页记录数量",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "每页显示数量。",
                    "example": "50",
                    "format": "int64",
                    "title": "页数",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "3",
                    "format": "int64",
                    "title": "结果总数",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "title": "返回体参数",
            "type": "object"
          }
        }
      },
      "summary": "查询用户操作事件。",
      "title": "查询用户事件"
    },
    "DescribeExternalAgent": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeExternalAgent\n关于集群接入的更多信息，请参见[注册外部Kubernetes集群](https://help.aliyun.com/document_detail/121053.html)。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"config\\\": \\\"apiVersion: v1****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<config>apiVersion: v1****</config>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID查询集群中部署注册集群的代理配置。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询集群代理"
      },
      "method": "get",
      "name": "DescribeExternalAgent",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "PrivateIpAddress",
          "required": false,
          "schema": {
            "description": "是否获取内网访问凭据。\n\n- `true`：仅获取内网连接凭据。\n- `false`：仅获取公网连接凭据。\n\n默认值：`false`。",
            "example": "true",
            "required": false,
            "title": "是否获取内网访问凭据。  true：获取内网连接凭据 false：获取公网连接凭据 默认值：false。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "AgentMode",
          "required": false,
          "schema": {
            "description": "Agent权限模式。\n\nadmin：管理员模式，拥有所有权限。\nrestricted：受限模式，仅拥有部分权限。\n默认值：admin。",
            "example": "admin",
            "required": false,
            "title": "agent模式",
            "type": "string"
          }
        }
      ],
      "path": "/k8s/{ClusterId}/external/agent/deployment",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "config": {
                "description": "YAML格式的代理配置。",
                "example": "apiVersion: v1****",
                "title": "代理配置。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID查询集群中部署注册集群的代理配置。",
      "title": "查询集群代理"
    },
    "DescribeKubernetesVersionMetadata": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeKubernetesVersionMetadata\n查询ACK支持的Kubernetes版本详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"capabilities\\\": {\\n      \\\"test\\\": \\\"test\\\",\\n      \\\"test2\\\": 1\\n    },\\n    \\\"images\\\": [\\n      {\\n        \\\"image_id\\\": \\\"centos_7_9_x64_20G_alibase_20221129.vhd\\\",\\n        \\\"image_name\\\": \\\"CentOS 7.9\\\",\\n        \\\"platform\\\": \\\"CentOS\\\",\\n        \\\"os_version\\\": \\\"7.9\\\",\\n        \\\"image_type\\\": \\\"CentOS\\\",\\n        \\\"os_type\\\": \\\"Linux\\\",\\n        \\\"image_category\\\": \\\"system\\\",\\n        \\\"architecture\\\": \\\"x86_64\\\"\\n      }\\n    ],\\n    \\\"meta_data\\\": {\\n      \\\"test\\\": \\\"test\\\",\\n      \\\"test2\\\": 1\\n    },\\n    \\\"runtimes\\\": [\\n      {\\n        \\\"name\\\": \\\"docker\\\",\\n        \\\"version\\\": \\\"19.03.5\\\"\\n      }\\n    ],\\n    \\\"version\\\": \\\"1.26.3-aliyun.1\\\",\\n    \\\"release_date\\\": \\\"2023-04-30T00:00:00Z\\\",\\n    \\\"expiration_date\\\": \\\"2025-04-30T00:00:00Z\\\",\\n    \\\"creatable\\\": true\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeKubernetesVersionMetadataResponse>\\n    <images>\\n        <image_id>centos_7_9_x64_20G_alibase_20221129.vhd</image_id>\\n        <image_name>CentOS 7.9</image_name>\\n        <platform>CentOS</platform>\\n        <os_version>7.9</os_version>\\n        <image_type>CentOS</image_type>\\n        <os_type>Linux</os_type>\\n        <image_category/>\\n        <architecture>x86_64</architecture>\\n    </images>\\n    <runtimes>\\n        <name>containerd</name>\\n        <version>1.6.20</version>\\n    </runtimes>\\n    <version>1.26.3-aliyun.1</version>\\n    <release_date>2023-04-30T00:00:00Z</release_date>\\n    <expiration_date>2025-04-30T00:00:00Z</expiration_date>\\n    <creatable>true</creatable>\\n</DescribeKubernetesVersionMetadataResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询ACK支持的Kubernetes版本详情。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询Kubernetes版本详情"
      },
      "method": "get",
      "name": "DescribeKubernetesVersionMetadata",
      "parameters": [
        {
          "in": "query",
          "name": "Region",
          "required": true,
          "schema": {
            "description": "集群所在地域ID。",
            "example": "cn-beijing",
            "required": true,
            "title": "地域ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "ClusterType",
          "required": true,
          "schema": {
            "description": "集群类型，取值：\n\n- `Kubernetes`: ACK专有版集群。\n- `ManagedKubernetes`：ACK托管版集群，包括ACK Pro版集群、ACK基础版集群、ACK Serverless Pro版集群、ACK Serverless基础版集群、ACK Edge Pro版集群、ACK Edge基础版。\n- `ExternalKubernetes`：ACK注册集群。\n",
            "example": "Kubernetes",
            "required": true,
            "title": "集群类型。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "KubernetesVersion",
          "required": false,
          "schema": {
            "description": "集群版本，与Kubernetes社区基线版本保持一致。建议选择最新版本，若不指定，默认使用最新版本。\n\n目前在ACK控制台您可以创建两种最新版本的集群。您可以通过API创建其他Kubernetes版本集群。ACK支持的Kubernetes版本，请参见[Kubernetes版本发布概览](https://help.aliyun.com/document_detail/185269.html)。",
            "example": "1.26.3-aliyun.1",
            "required": false,
            "title": "要查询的版本，如果为空则查所有版本。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Profile",
          "required": false,
          "schema": {
            "description": "面向场景时的集群类型，取值：\n\n- `Default`：非边缘场景集群。\n- `Edge`：边缘场景集群。\n- `Serverless`：ASK集群。\n\n默认值：`Default`。",
            "example": "Default",
            "required": false,
            "title": "边缘集群标识，用于区分边缘集群，取值：Default或Edge。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "runtime",
          "required": false,
          "schema": {
            "description": "运行时类型，可以通过指定运行时类型，过滤出运行时所支持的系统镜像，取值：\n\n- `docker`：docker运行时。\n- `containerd`：containerd运行时。\n- `Sandboxed-Container.runv`：安全沙箱。\n\n若指定运行时类型，将返回指定运行时支持的镜像版本。\n\n若不指定运行时类型，默认返回全部镜像。",
            "example": "containerd",
            "required": false,
            "title": "运行时。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Mode",
          "required": false,
          "schema": {
            "default": "creatable",
            "description": "查询模式，取值：\n- `supported`：查询受支持版本\n- `creatable`：查询可创建版本\n\n若指定`KubernetesVersion`，将忽略查询模式。\n\n若不指定查询模式，默认返回可创建版本。",
            "enum": [],
            "enumValueTitles": {},
            "example": "supported",
            "required": false,
            "title": "查询模式，取值：supported、creatable",
            "type": "string"
          }
        }
      ],
      "path": "/api/v1/metadata/versions",
      "responses": {
        "200": {
          "schema": {
            "description": "集群版本详情列表。",
            "items": {
              "description": "版本详情。",
              "properties": {
                "capabilities": {
                  "description": "Kubernetes版本功能特性。",
                  "title": "Kubernetes版本特性。\t",
                  "type": "object"
                },
                "creatable": {
                  "description": "Kubernetes版本是否可创建。",
                  "example": "true",
                  "title": "该版本是否可创建。",
                  "type": "boolean"
                },
                "expiration_date": {
                  "description": "Kubernetes版本过期时间。\t",
                  "example": "2025-04-30T00:00:00Z",
                  "title": "Kubernetes版本过期时间。\t",
                  "type": "string"
                },
                "images": {
                  "description": "系统镜像列表。\t",
                  "items": {
                    "description": "镜像详情。",
                    "properties": {
                      "architecture": {
                        "description": "镜像架构。",
                        "example": "x86_64",
                        "title": "镜像架构",
                        "type": "string"
                      },
                      "image_category": {
                        "description": "镜像分类，部分取值：\n\n- `system`：公共镜像。\n- `self`：您的自定义镜像。\n- `others`：其他用户的公开镜像。\n- `marketplace`：镜像市场镜像。\n",
                        "example": "system",
                        "title": "镜像分类",
                        "type": "string"
                      },
                      "image_id": {
                        "description": "镜像ID。",
                        "example": "centos_7_9_x64_20G_alibase_20221129.vhd",
                        "title": "镜像ID。\t",
                        "type": "string"
                      },
                      "image_name": {
                        "description": "镜像名称。",
                        "example": "CentOS 7.9",
                        "title": "镜像名称。\t",
                        "type": "string"
                      },
                      "image_type": {
                        "description": "操作系统发行版类型，推荐使用该字段指定节点操作系统。取值：\n\n-  `CentOS`\n- `AliyunLinux`\n-  `AliyunLinux Qboot`\n- `AliyunLinuxUEFI`\n- `AliyunLinux3`\n- `Windows`\n- `WindowsCore`\n- `AliyunLinux3Arm64`\n- `ContainerOS`",
                        "example": "CentOS",
                        "title": "镜像类型。\t",
                        "type": "string"
                      },
                      "os_type": {
                        "description": "操作系统类型，例如：\n\n- `Windows`\n- `Linux`",
                        "example": "Linux",
                        "title": "操作系统发行版本号。",
                        "type": "string"
                      },
                      "os_version": {
                        "description": "镜像版本。",
                        "example": "7.9",
                        "title": "镜像版本。",
                        "type": "string"
                      },
                      "platform": {
                        "description": "操作系统平台。取值：\n- `AliyunLinux`\n- `CentOS`\n- `Windows`\n- `WindowsCore`",
                        "example": "CentOS",
                        "title": "操作系统发行版。取值范围： CentOS,AliyunLinux,Windows,WindowsCore。",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ECS系统镜像列表。\t",
                  "type": "array"
                },
                "meta_data": {
                  "description": "Kubernetes版本元数据信息。\t",
                  "title": "Kubernetes版本元数据信息。\t",
                  "type": "object"
                },
                "release_date": {
                  "description": "Kubernetes版本发布时间。",
                  "example": "2023-04-30T00:00:00Z",
                  "title": "Kubernetes版本发布时间。",
                  "type": "string"
                },
                "runtimes": {
                  "description": "容器运行时配置。\t",
                  "items": {
                    "$ref": "#/definitions/runtime",
                    "description": "容器运行时配置。\t",
                    "isDefsType": true,
                    "typeName": "runtime"
                  },
                  "title": "容器运行时详情。\t",
                  "type": "array"
                },
                "version": {
                  "description": "ACK发布的Kubernetes版本。更多版本信息，请参见[Kubernetes版本发布概览](https://help.aliyun.com/document_detail/185269.html)。",
                  "example": "1.26.3-aliyun.1",
                  "title": "Kubernetes版本。\t",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回数据体。\t",
            "type": "array"
          }
        }
      },
      "summary": "查询ACK支持的Kubernetes版本详情。",
      "title": "查询Kubernetes版本详情"
    },
    "DescribeNodePoolVuls": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeNodePoolVuls\n查询指定集群节点池的漏洞列表。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"vul_records\\\": [\\n    {\\n      \\\"instance_id\\\": \\\"i-t4n2qolb0wtzt0pz****\\\",\\n      \\\"vul_list\\\": [\\n        {\\n          \\\"name\\\": \\\"oval:com.redhat.rhsa:def:20193197\\\",\\n          \\\"alias_name\\\": \\\"RHSA-2019:3197-Important: sudo security update\\\",\\n          \\\"necessity\\\": \\\"asap\\\",\\n          \\\"cve_list\\\": [\\n            \\\"CVE-2017-10268\\\"\\n          ]\\n        }\\n      ],\\n      \\\"node_name\\\": \\\"cn-hangzhou.192.168.x.x\\\"\\n    }\\n  ],\\n  \\\"vuls_fix_service_purchased\\\": false\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询指定集群节点池的漏洞列表。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "查询节点池漏洞"
      },
      "method": "get",
      "name": "DescribeNodePoolVuls",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c17e742cee942410486f237293d66****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "nodepool_id",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np38f32fdbc60e4a1e957ffde77846****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "necessity",
          "required": false,
          "schema": {
            "description": "要查询的漏洞修复必要性等级。多个等级之间使用半角逗号（,）分隔。取值：\n\n- `asap`：高\n- `later`：中\n- `nntf`：低",
            "example": "asap",
            "required": false,
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/nodepools/{nodepool_id}/vuls",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "properties": {
              "vul_records": {
                "description": "节点池漏洞列表。",
                "items": {
                  "description": "单个节点漏洞列表。",
                  "properties": {
                    "instance_id": {
                      "description": "节点实例ID。",
                      "example": "i-t4n2qolb0wtzt0pz****",
                      "type": "string"
                    },
                    "node_name": {
                      "description": "节点名称，集群内节点标识。",
                      "example": "cn-hangzhou.192.168.x.x",
                      "type": "string"
                    },
                    "vul_list": {
                      "description": "漏洞列表。",
                      "items": {
                        "description": "漏洞信息",
                        "properties": {
                          "alias_name": {
                            "description": "漏洞别名。",
                            "example": "RHSA-2019:3197-Important: sudo security update",
                            "type": "string"
                          },
                          "cve_list": {
                            "description": "漏洞对应的CVE列表。",
                            "items": {
                              "description": "CVE名称。",
                              "example": "CVE-2017-10268",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "漏洞名称。",
                            "example": "oval:com.redhat.rhsa:def:20193197",
                            "type": "string"
                          },
                          "necessity": {
                            "description": "漏洞等级。",
                            "enumValueTitles": {
                              "asap": "需尽快修复",
                              "later": "可延后修复",
                              "nntf": "暂可不修复"
                            },
                            "example": "asap",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "vuls_fix_service_purchased": {
                "description": "是否已购买云安全CVE修复服务",
                "example": "false",
                "title": "是否已购买云安全CVE修复服务",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "查询指定集群节点池的漏洞列表。",
      "title": "查询节点池漏洞"
    },
    "DescribePolicies": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribePolicies\n调用DescribePolicies列举策略治理规则库列表。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"key\\\": [\\n    \\\"ACKNoEnvVarSecrets\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribePoliciesResponse>\\n    <cis-k8s>ACKNoEnvVarSecrets</cis-k8s>\\n    <cis-k8s>ACKPodsRequireSecurityContext</cis-k8s>\\n    <cis-k8s>ACKRestrictNamespaces</cis-k8s>\\n    <cis-k8s>ACKRestrictRoleBindings</cis-k8s>\\n    <infra>ACKBlockProcessNamespaceSharing</infra>\\n    <infra>ACKEmptyDirHasSizeLimit</infra>\\n    <infra>ACKLocalStorageRequireSafeToEvict</infra>\\n    <infra>ACKOSSStorageLocationConstraint</infra>\\n    <k8s-general>ACKBlockAutoinjectServiceEnv</k8s-general>\\n    <k8s-general>ACKBlockAutomountToken</k8s-general>\\n    <k8s-general>ACKBlockLoadBalancer</k8s-general>\\n    <k8s-general>ACKBlockNodePort</k8s-general>\\n    <k8s-general>ACKContainerLimits</k8s-general>\\n    <k8s-general>ACKExternalIPs</k8s-general>\\n    <k8s-general>ACKImageDigests</k8s-general>\\n    <k8s-general>ACKRequiredLabels</k8s-general>\\n    <k8s-general>ACKRequiredProbes</k8s-general>\\n    <k8s-general>ACKAllowedRepos</k8s-general>\\n    <psp>ACKPSPAllowPrivilegeEscalationContainer</psp>\\n    <psp>ACKPSPAllowedUsers</psp>\\n    <psp>ACKPSPAppArmor</psp>\\n    <psp>ACKPSPCapabilities</psp>\\n    <psp>ACKPSPFSGroup</psp>\\n    <psp>ACKPSPFlexVolumes</psp>\\n    <psp>ACKPSPForbiddenSysctls</psp>\\n    <psp>ACKPSPHostFilesystem</psp>\\n    <psp>ACKPSPHostNamespace</psp>\\n    <psp>ACKPSPHostNetworkingPorts</psp>\\n    <psp>ACKPSPPrivilegedContainer</psp>\\n    <psp>ACKPSPProcMount</psp>\\n    <psp>ACKPSPReadOnlyRootFilesystem</psp>\\n    <psp>ACKPSPSELinuxV2</psp>\\n    <psp>ACKPSPSeccomp</psp>\\n    <psp>ACKPSPVolumeTypes</psp>\\n</DescribePoliciesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribePolicies列举策略治理规则库列表。",
        "title": "列举策略治理规则库列表"
      },
      "method": "get",
      "name": "DescribePolicies",
      "parameters": [],
      "path": "/policies",
      "responses": {
        "200": {
          "schema": {
            "additionalProperties": {
              "description": "某个策略类型下的所有策略模板名称列表",
              "items": {
                "description": "更多策略规则，请参见[容器安全策略规则库说明](https://help.aliyun.com/document_detail/359819.html)。\n",
                "example": "ACKNoEnvVarSecrets",
                "title": "策略模板名称",
                "type": "string"
              },
              "title": "某个策略类型下的所有策略模板名称列表",
              "type": "array"
            },
            "description": "规则库列表，key为策略类型，value为该策略类型下的所有策略名称。\n",
            "title": "系统支持的所有策略模板。key为策略类型，value为该策略类型下的所有策略模板名称列表",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribePolicies列举策略治理规则库列表。",
      "title": "列举策略治理规则库列表"
    },
    "DescribePolicyDetails": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribePolicyDetails\n获取策略规则模板详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"name\\\": \\\"ACKAllowedRepos\\\",\\n  \\\"category\\\": \\\"k8s-general\\\",\\n  \\\"description\\\": \\\"Requires container images to begin with a repo string from a specified list\\\",\\n  \\\"action\\\": \\\"enforce\\\",\\n  \\\"severity\\\": \\\"high\\\",\\n  \\\"template\\\": \\\"详情请参见请求示例\\\",\\n  \\\"no_config\\\": 0,\\n  \\\"is_deleted\\\": 0\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribePolicyDetailsResponse>\\n    <name>ACKAllowedRepos</name>\\n    <category>k8s-general</category>\\n    <description>Requires container images to begin with a repo string from a specified list</description>\\n    <action>enforce</action>\\n    <severity>high</severity>\\n    <template>详情请参见请求示例</template>\\n    <no_config>0</no_config>\\n    <is_deleted>0</is_deleted>\\n</DescribePolicyDetailsResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "获取策略规则模板详情。",
        "title": "获取策略治理规则模板详情"
      },
      "method": "get",
      "name": "DescribePolicyDetails",
      "parameters": [
        {
          "in": "path",
          "name": "policy_name",
          "required": true,
          "schema": {
            "description": "策略治理规则名称",
            "example": "ACKAllowedRepos",
            "required": true,
            "title": "策略治理规则名称",
            "type": "string"
          }
        }
      ],
      "path": "/policies/{policy_name}",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "action": {
                "description": "规则治理动作，取值：\n- `enforce`：拦截违规部署\n- `inform`：告警",
                "example": "enforce",
                "title": "规则治理动作 ● enforce: 拦截违规部署 ● inform：告警",
                "type": "string"
              },
              "category": {
                "description": "规则模板类型",
                "example": "k8s-general",
                "title": "规则模板类型",
                "type": "string"
              },
              "description": {
                "description": "规则模板描述",
                "example": "Requires container images to begin with a repo string from a specified list",
                "title": "规则模板描述",
                "type": "string"
              },
              "is_deleted": {
                "description": "是否删除标志，取值：\n- 0：表示未删除。\n- 1：表示删除。",
                "example": "0",
                "format": "int32",
                "title": "软删除标志：0表示未删除 1表示删除",
                "type": "integer"
              },
              "name": {
                "description": "策略治理规则名称",
                "example": "ACKAllowedRepos",
                "title": "策略治理规则名称",
                "type": "string"
              },
              "no_config": {
                "description": "是否需要配置策略，取值： \n- 0：表示需要参数配置\n- 1：表示无需参数配置",
                "example": "0",
                "format": "int32",
                "title": "是否需要配置策略： 0表示需要参数配置 1表示无需参数配置",
                "type": "integer"
              },
              "severity": {
                "description": "规则治理等级",
                "example": "high",
                "title": "规则治理等级",
                "type": "string"
              },
              "template": {
                "description": "规则模板详情",
                "example": "详情请参见请求示例",
                "title": "规则模板详情",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "获取策略规则模板详情。",
      "title": "获取策略治理规则模板详情"
    },
    "DescribePolicyGovernanceInCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribePolicyGovernanceInCluster\n调用DescribePolicyGovernanceInCluster获取集群策略治理详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"on_state\\\": [\\n    {\\n      \\\"enabled_count\\\": 3,\\n      \\\"total\\\": 8,\\n      \\\"severity\\\": \\\"high\\\"\\n    }\\n  ],\\n  \\\"admit_log\\\": {\\n    \\\"progress\\\": \\\"Complete\\\",\\n    \\\"count\\\": 100,\\n    \\\"log\\\": {\\n      \\\"msg\\\": \\\"d4hdhs*****\\\",\\n      \\\"cluster_id\\\": \\\"c8155823d057948c69a****\\\",\\n      \\\"constraint_kind\\\": \\\"ACKAllowedRepos\\\",\\n      \\\"resource_name\\\": \\\"nginx-deployment-basic2-84ccb74bfc-df22p\\\",\\n      \\\"resource_kind\\\": \\\"Pod\\\",\\n      \\\"resource_namespace\\\": \\\"default\\\"\\n    }\\n  },\\n  \\\"totalViolations\\\": {\\n    \\\"deny\\\": {\\n      \\\"severity\\\": \\\"high\\\",\\n      \\\"violations\\\": 0\\n    },\\n    \\\"warn\\\": {\\n      \\\"severity\\\": \\\"low\\\",\\n      \\\"violations\\\": 5\\n    }\\n  },\\n  \\\"violations\\\": {\\n    \\\"deny\\\": {\\n      \\\"policyName\\\": \\\"policy-gatekeeper-ackallowedrepos\\\",\\n      \\\"policyDescription\\\": \\\"Requires container images to begin with a repo string from a specified list.\\\",\\n      \\\"violations\\\": 11,\\n      \\\"severity\\\": \\\"high\\\"\\n    },\\n    \\\"warn\\\": {\\n      \\\"policyName\\\": \\\"policy-gatekeeper-ackpspcapabilities\\\",\\n      \\\"policyDescription\\\": \\\"Controls Linux capabilities.\\\",\\n      \\\"violations\\\": 81,\\n      \\\"severity\\\": \\\"high\\\"\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribePolicyGovernanceInClusterResponse>\\n    <on_state>\\n        <enabled_count>0</enabled_count>\\n        <total>14</total>\\n        <severity>low</severity>\\n    </on_state>\\n    <on_state>\\n        <enabled_count>2</enabled_count>\\n        <total>13</total>\\n        <severity>high</severity>\\n    </on_state>\\n    <on_state>\\n        <enabled_count>1</enabled_count>\\n        <total>8</total>\\n        <severity>medium</severity>\\n    </on_state>\\n    <admit_log>\\n        <progress>Complete</progress>\\n        <count>75</count>\\n        <log>\\n            <__source__>192.168.0.188</__source__>\\n            <__tag__:__hostname__>iZwz98e621h0kvki3ja****</__tag__:__hostname__>\\n            <__tag__:__pack_id__>63DE8FD17599E86****</__tag__:__pack_id__>\\n            <__tag__:__path__>/policy_admit_logs/gatekeeper_admit.log</__tag__:__path__>\\n            <__tag__:__receive_time__>1631168040</__tag__:__receive_time__>\\n            <__tag__:__user_defined_id__>k8s-group-cb36d98a701ef4742b50603866809****</__tag__:__user_defined_id__>\\n            <__tag__:_container_ip_>10.102.0.89</__tag__:_container_ip_>\\n            <__tag__:_container_name_>manager</__tag__:_container_name_>\\n            <__tag__:_image_name_>registry-vpc.cn-shenzhen.aliyuncs.com/acs/gatekeeper:v3.6.0.60-g72c4896-aliyun</__tag__:_image_name_>\\n            <__tag__:_namespace_>kube-system</__tag__:_namespace_>\\n            <__tag__:_node_ip_>192.168.0.188</__tag__:_node_ip_>\\n            <__tag__:_node_name_>cn-shenzhen.192.168.XX.XX</__tag__:_node_name_>\\n            <__tag__:_pod_name_>gatekeeper-7648f64cc8-27nd4</__tag__:_pod_name_>\\n            <__tag__:_pod_uid_>11083b05-eecd-454c-8d22-81c83ce1****</__tag__:_pod_uid_>\\n            <__time__>1631168037</__time__>\\n            <__topic__/>\\n            <cluster_id>cb36d98a701ef4742b50603866809****</cluster_id>\\n            <constraint_action>deny</constraint_action>\\n            <constraint_api_version>v1beta1</constraint_api_version>\\n            <constraint_group>constraints.gatekeeper.sh</constraint_group>\\n            <constraint_kind>ACKAllowedRepos</constraint_kind>\\n            <constraint_name>allowed-repos-80970511-c93d-4c40-b692-be18c077****</constraint_name>\\n            <event_msg>Admission webhook \\\"validation.gatekeeper.sh\\\" denied request, Resource Namespace: default, Constraint: allowed-repos-80970511-c93d-4c40-b692-be18c0770382, Message: container &lt;nginx&gt; has an invalid image repo &lt;nginx:1.7.9&gt;, allowed repos are [\\\"registry.cn-shanghai.aliyuncs.com/acs/\\\", \\\"registry.cn-hangzhou.aliyuncs.com/acs/\\\"]</event_msg>\\n            <event_reason>GatekeeperFailedAdmission</event_reason>\\n            <event_type>violation</event_type>\\n            <level>info</level>\\n            <logger>ack_policy_admit_log_for_sls</logger>\\n            <msg>container &lt;nginx&gt; has an invalid image repo &lt;nginx:1.7.9&gt;, allowed repos are [\\\"registry.cn-shanghai.aliyuncs.com/acs/\\\", \\\"registry.cn-hangzhou.aliyuncs.com/acs/\\\"]</msg>\\n            <process>admission</process>\\n            <request_uid>9db8f008-c2e8-4723-a380-18ef358c2827</request_uid>\\n            <request_username>system:serviceaccount:kube-system:replicaset-controller</request_username>\\n            <resource_api_version>v1</resource_api_version>\\n            <resource_group/>\\n            <resource_kind>Pod</resource_kind>\\n            <resource_name>nginx-deployment-basic2-84ccb74bfc-df22p</resource_name>\\n            <resource_namespace>default</resource_namespace>\\n            <time>2021-09-09T06:13:57Z</time>\\n            <ts>1631168037.444757</ts>\\n        </log>\\n        <log>\\n            <__source__>192.168.XX.XX</__source__>\\n        </log>\\n    </admit_log>\\n    <Violation>\\n        <totalViolations>\\n            <deny>\\n                <severity>high</severity>\\n                <violations>75</violations>\\n            </deny>\\n            <deny>\\n                <severity>medium</severity>\\n                <violations>0</violations>\\n            </deny>\\n            <warn>\\n                <severity>high</severity>\\n                <violations>0</violations>\\n            </warn>\\n            <warn>\\n                <severity>medium</severity>\\n                <violations>0</violations>\\n            </warn>\\n        </totalViolations>\\n        <violations>\\n            <deny>\\n                <policyName>policy-gatekeeper-ackallowedrepos</policyName>\\n                <policyDescription>Requires container images to begin with a repo string from a specified list.</policyDescription>\\n                <severity>high</severity>\\n                <violations>11</violations>\\n            </deny>\\n            <deny>\\n                <policyName>policy-gatekeeper-ackpspcapabilities</policyName>\\n                <policyDescription>Controls Linux capabilities.</policyDescription>\\n                <severity>high</severity>\\n                <violations>81</violations>\\n            </deny>\\n        </violations>\\n    </Violation>\\n</DescribePolicyGovernanceInClusterResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribePolicyGovernanceInCluster获取集群策略治理详情。",
        "title": "获取集群策略治理详情"
      },
      "method": "get",
      "name": "DescribePolicyGovernanceInCluster",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群ID",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policygovernance",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "admit_log": {
                "description": "集群当前策略治理审计日志",
                "properties": {
                  "count": {
                    "description": "当前查询到的日志总数",
                    "example": "100",
                    "format": "int64",
                    "title": "当前查询到的日志总数",
                    "type": "integer"
                  },
                  "log": {
                    "description": "策略治理审计日志内容",
                    "properties": {
                      "cluster_id": {
                        "description": "目标集群ID",
                        "example": "c8155823d057948c69a****",
                        "title": "目标集群ID",
                        "type": "string"
                      },
                      "constraint_kind": {
                        "description": "策略类型名称",
                        "example": "ACKAllowedRepos",
                        "title": "策略类型名称",
                        "type": "string"
                      },
                      "msg": {
                        "description": "策略治理审计日志信息",
                        "example": "d4hdhs*****",
                        "title": "策略治理审计日志信息",
                        "type": "string"
                      },
                      "resource_kind": {
                        "description": "目标资源类型",
                        "example": "Pod",
                        "title": "目标资源类型",
                        "type": "string"
                      },
                      "resource_name": {
                        "description": "目标资源名称",
                        "example": "nginx-deployment-basic2-84ccb74bfc-df22p",
                        "title": "目标资源名称",
                        "type": "string"
                      },
                      "resource_namespace": {
                        "description": "目标资源命名空间",
                        "example": "default",
                        "title": "目标资源命名空间",
                        "type": "string"
                      }
                    },
                    "title": "策略治理审计日志内容",
                    "type": "object"
                  },
                  "progress": {
                    "description": "查询结果的状态，取值：\n* `Complete`：查询已经完成，返回结果为完整结果。\n* `Incomplete`：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。",
                    "example": "Complete",
                    "title": "查询结果的状态",
                    "type": "string"
                  }
                },
                "title": "集群当前策略治理审计日志",
                "type": "object"
              },
              "on_state": {
                "description": "当前集群中开启的不同等级策略计数统计",
                "items": {
                  "properties": {
                    "enabled_count": {
                      "description": "当前开启的策略种类计数",
                      "example": "3",
                      "format": "int32",
                      "title": "当前开启的策略种类计数",
                      "type": "integer"
                    },
                    "severity": {
                      "description": "策略治理等级",
                      "example": "high",
                      "title": "策略治理等级",
                      "type": "string"
                    },
                    "total": {
                      "description": "该等级下策略种类总数",
                      "example": "8",
                      "format": "int32",
                      "title": "该等级下策略种类总数",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "title": "当前集群中开启的不同等级策略计数统计",
                "type": "array"
              },
              "totalViolations": {
                "description": "集群中当前被拦截和告警两种处理类型下不同治理等级的违规计数。",
                "properties": {
                  "deny": {
                    "description": "被拦截的不同治理等级的违规计数统计",
                    "properties": {
                      "severity": {
                        "description": "策略治理等级",
                        "example": "high",
                        "title": "策略治理等级",
                        "type": "string"
                      },
                      "violations": {
                        "description": "被拦截的事件计数",
                        "example": "0",
                        "format": "int64",
                        "title": "被拦截的事件计数",
                        "type": "integer"
                      }
                    },
                    "title": "被拦截的不同治理等级的违规计数统计",
                    "type": "object"
                  },
                  "warn": {
                    "description": "告警模式下不同治理等级的违规计数统计",
                    "properties": {
                      "severity": {
                        "description": "策略治理等级",
                        "example": "low",
                        "title": "策略治理等级",
                        "type": "string"
                      },
                      "violations": {
                        "description": "告警的事件计数",
                        "example": "5",
                        "format": "int64",
                        "title": "告警的事件计数",
                        "type": "integer"
                      }
                    },
                    "title": "告警模式下不同治理等级的违规计数统计",
                    "type": "object"
                  }
                },
                "title": "集群中当前被拦截和告警两种处理类型下不同治理等级的违规计数。",
                "type": "object"
              },
              "violations": {
                "description": "集群中针对不同策略类型的拦截和告警的审计计数统计列表",
                "properties": {
                  "deny": {
                    "description": "被拦截的不同策略类型的审计计数",
                    "properties": {
                      "policyDescription": {
                        "description": "策略描述",
                        "example": "Requires container images to begin with a repo string from a specified list.",
                        "title": "策略描述",
                        "type": "string"
                      },
                      "policyName": {
                        "description": "策略名称",
                        "example": "policy-gatekeeper-ackallowedrepos",
                        "title": "策略名称",
                        "type": "string"
                      },
                      "severity": {
                        "description": "策略治理等级",
                        "example": "high",
                        "title": "策略治理等级",
                        "type": "string"
                      },
                      "violations": {
                        "description": "集群中对应规则类型下被拦截的违规计数统计",
                        "example": "11",
                        "format": "int64",
                        "title": "对应规则的事件计数",
                        "type": "integer"
                      }
                    },
                    "title": "被拦截的不同策略类型的审计计数",
                    "type": "object"
                  },
                  "warn": {
                    "description": "告警模式下不同治理等级的违规计数统计",
                    "properties": {
                      "policyDescription": {
                        "description": "策略描述",
                        "example": "Controls Linux capabilities.",
                        "title": "策略描述",
                        "type": "string"
                      },
                      "policyName": {
                        "description": "策略名称",
                        "example": "policy-gatekeeper-ackpspcapabilities",
                        "title": "策略名称",
                        "type": "string"
                      },
                      "severity": {
                        "description": "策略治理等级",
                        "example": "high",
                        "title": "策略治理等级",
                        "type": "string"
                      },
                      "violations": {
                        "description": "集群中对应规则类型下被告警的违规计数统计",
                        "example": "81",
                        "format": "int64",
                        "title": "对应规则的事件计数",
                        "type": "integer"
                      }
                    },
                    "title": "告警的不同策略类型审计计数",
                    "type": "object"
                  }
                },
                "title": "集群中针对不同策略类型的拦截和告警的审计计数统计列表",
                "type": "object"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribePolicyGovernanceInCluster获取集群策略治理详情。",
      "title": "获取集群策略治理详情"
    },
    "DescribePolicyInstances": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribePolicyInstances\n调用DescribePolicyInstances获取集群中当前部署的策略实例。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"ali_uid\\\": \\\"16298168****\\\",\\n    \\\"cluster_id\\\": \\\"c8155823d057948c69a****\\\",\\n    \\\"instance_name\\\": \\\"no-env-var-secrets-****\\\",\\n    \\\"policy_name\\\": \\\"ACKPSPCapabilities\\\",\\n    \\\"policy_category\\\": \\\"k8s-general\\\",\\n    \\\"policy_description\\\": \\\"Restricts secrets used in pod envs\\\",\\n    \\\"policy_parameters\\\": \\\"\\\\\\\"restrictedNamespaces\\\\\\\": [ \\\\\\\"test\\\\\\\" ]\\\",\\n    \\\"policy_severity\\\": \\\"low\\\",\\n    \\\"policy_scope\\\": \\\"*\\\",\\n    \\\"policy_action\\\": \\\"deny\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribePolicyInstancesResponse>\\n    <ali_uid>16298168****</ali_uid>\\n    <cluster_id>c8155823d057948c69a****</cluster_id>\\n    <instance_name>no-env-var-secrets-****</instance_name>\\n    <policy_name>ACKPSPCapabilities</policy_name>\\n    <policy_category>k8s-general</policy_category>\\n    <policy_description>Restricts secrets used in pod envs</policy_description>\\n    <policy_parameters>\\\"restrictedNamespaces\\\": [ \\\"test\\\" ]</policy_parameters>\\n    <policy_severity>low</policy_severity>\\n    <policy_scope>*</policy_scope>\\n    <policy_action>deny</policy_action>\\n</DescribePolicyInstancesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribePolicyInstances获取集群中当前部署的策略实例。",
        "title": "查询策略实例"
      },
      "method": "get",
      "name": "DescribePolicyInstances",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "policy_name",
          "required": false,
          "schema": {
            "description": "策略治理规则名称",
            "example": "ACKPSPCapabilities",
            "required": false,
            "title": "策略类型",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "instance_name",
          "required": false,
          "schema": {
            "description": "策略实例名称",
            "example": "allowed-repos-cz4s2",
            "required": false,
            "title": "策略实例名称",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policies",
      "responses": {
        "200": {
          "schema": {
            "description": "策略实例列表",
            "items": {
              "properties": {
                "ali_uid": {
                  "description": "策略实例实施者UID",
                  "example": "16298168****",
                  "title": "策略实例实施者UID",
                  "type": "string"
                },
                "cluster_id": {
                  "description": "目标集群ID",
                  "example": "c8155823d057948c69a****",
                  "title": "目标集群ID",
                  "type": "string"
                },
                "instance_name": {
                  "description": "规则实例名称",
                  "example": "no-env-var-secrets-****",
                  "title": "规则实例名称",
                  "type": "string"
                },
                "policy_action": {
                  "description": "规则治理动作，取值：\n\n- `deny`：拦截违规部署\n\n- `warn`：告警",
                  "example": "deny",
                  "title": "规则治理动作  deny: 拦截违规部署  warn：告警",
                  "type": "string"
                },
                "policy_category": {
                  "description": "策略类型名称",
                  "example": "k8s-general",
                  "title": "策略类型名称",
                  "type": "string"
                },
                "policy_description": {
                  "description": "规则模板描述",
                  "example": "Restricts secrets used in pod envs",
                  "title": "规则模板描述",
                  "type": "string"
                },
                "policy_name": {
                  "description": "策略治理规则名称",
                  "example": "ACKPSPCapabilities",
                  "title": "策略治理规则名称",
                  "type": "string"
                },
                "policy_parameters": {
                  "description": "当前规则实例的配置参数",
                  "example": "\"restrictedNamespaces\": [ \"test\" ]",
                  "title": "当前规则实例的配置参数",
                  "type": "string"
                },
                "policy_scope": {
                  "description": "策略实例实施范围：\n\n默认\"*\"代表集群所有命名空间。\n\n否则返回作用Namespaces名称，多个Namespaces以逗号（,）分隔。",
                  "example": "*",
                  "title": "策略实例实施范围： 默认\"*\"代表集群所有ns 否则返回作用namespaces名称，多个namespaces以逗号分隔",
                  "type": "string"
                },
                "policy_severity": {
                  "description": "规则实例治理等级",
                  "example": "low",
                  "title": "规则实例治理等级",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "策略实例列表",
            "type": "array"
          }
        }
      },
      "summary": "调用DescribePolicyInstances获取集群中当前部署的策略实例。",
      "title": "查询策略实例"
    },
    "DescribePolicyInstancesStatus": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribePolicyInstancesStatus\n获取集群当前不同策略类型对应的实例部署状态，包括每种策略规则对应开启的实例计数，以及不同治理等级下开启的策略种类计数。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"policy_instances\\\": [\\n    {\\n      \\\"policy_category\\\": \\\"cis-k8s\\\",\\n      \\\"policy_name\\\": \\\"ACKRestrictRoleBindings\\\",\\n      \\\"policy_description\\\": \\\"Restricts use of the cluster-admin role.\\\",\\n      \\\"policy_severity\\\": \\\"medium\\\",\\n      \\\"policy_instances_count\\\": 1\\n    }\\n  ],\\n  \\\"instances_severity_count\\\": {\\n    \\\"high\\\": 11,\\n    \\\"medium\\\": 1\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribePolicyInstancesStatusResponse>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKBlockNodePort</policy_name>\\n        <policy_description>Disallows all Services with type NodePort.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKExternalIPs</policy_name>\\n        <policy_description>Restricts Services from containing externalIPs except those in a provided allowlist.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPHostNamespace</policy_name>\\n        <policy_description>Controls usage of host namespaces.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPReadOnlyRootFilesystem</policy_name>\\n        <policy_description>Requires the use of a read only root file system.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPVolumeTypes</policy_name>\\n        <policy_description>Controls usage of volume types.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>infra</policy_category>\\n        <policy_name>ACKOSSStorageLocationConstraint</policy_name>\\n        <policy_description>Restricts location of oss storage in cluster.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKBlockAutoinjectServiceEnv</policy_name>\\n        <policy_description>Disable autoinjecting information about services into pod's environment variables.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKImageDigests</policy_name>\\n        <policy_description>Requires container images to contain a digest.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPAllowedUsers</policy_name>\\n        <policy_description>Controls the user and group IDs of the container.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPHostFilesystem</policy_name>\\n        <policy_description>Controls usage of the host filesystem.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>infra</policy_category>\\n        <policy_name>ACKBlockProcessNamespaceSharing</policy_name>\\n        <policy_description>Restricts shareProcessNamespace used in pod.</policy_description>\\n        <policy_severity>high</policy_severity>\\n        <policy_instances_count>2</policy_instances_count>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPCapabilities</policy_name>\\n        <policy_description>Controls Linux capabilities.</policy_description>\\n        <policy_severity>high</policy_severity>\\n        <policy_instances_count>5</policy_instances_count>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPForbiddenSysctls</policy_name>\\n        <policy_description>Controls the `sysctl` profile used by containers.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPSeccomp</policy_name>\\n        <policy_description>Controls the seccomp profile used by containers.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKBlockLoadBalancer</policy_name>\\n        <policy_description>Disallows all Services with type LoadBalancer.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPAppArmor</policy_name>\\n        <policy_description>Controls the AppArmor profile used by containers.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPPrivilegedContainer</policy_name>\\n        <policy_description>Controls running of privileged containers.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPProcMount</policy_name>\\n        <policy_description>Controls the allowed `procMount` types for the container.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPSELinuxV2</policy_name>\\n        <policy_description>Controls the SELinux context of the container.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>infra</policy_category>\\n        <policy_name>ACKEmptyDirHasSizeLimit</policy_name>\\n        <policy_description>Requires that emptydir volume must have a `sizelimit` defined.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPAllowPrivilegeEscalationContainer</policy_name>\\n        <policy_description>Controls restricting escalation to root privileges.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPFSGroup</policy_name>\\n        <policy_description>Controls allocating an FSGroup that owns the Pod's volumes.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>cis-k8s</policy_category>\\n        <policy_name>ACKPodsRequireSecurityContext</policy_name>\\n        <policy_description>Requires that Pods must have a `securityContext` defined.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>cis-k8s</policy_category>\\n        <policy_name>ACKRestrictNamespaces</policy_name>\\n        <policy_description>Restricts resources from using the `default` namespace.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKContainerLimits</policy_name>\\n        <policy_description>Requires containers to have memory and CPU limits set and within a specified maximum amount.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPHostNetworkingPorts</policy_name>\\n        <policy_description>Controls usage of host networking and ports.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKBlockAutomountToken</policy_name>\\n        <policy_description>Disable automounting API credentials.</policy_description>\\n        <policy_severity>high</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKRequiredLabels</policy_name>\\n        <policy_description>Requires all resources to contain a specified label with a value matching a provided regular expression.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>psp</policy_category>\\n        <policy_name>ACKPSPFlexVolumes</policy_name>\\n        <policy_description>Controls the allowlist of Flexvolume drivers.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKAllowedRepos</policy_name>\\n        <policy_description>Requires container images to begin with a repo string from a specified list.</policy_description>\\n        <policy_severity>high</policy_severity>\\n        <policy_instances_count>4</policy_instances_count>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>cis-k8s</policy_category>\\n        <policy_name>ACKNoEnvVarSecrets</policy_name>\\n        <policy_description>Restricts secrets used in pod envs.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n        <policy_instances_count>1</policy_instances_count>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>cis-k8s</policy_category>\\n        <policy_name>ACKRestrictRoleBindings</policy_name>\\n        <policy_description>Restricts use of the cluster-admin role.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>infra</policy_category>\\n        <policy_name>ACKLocalStorageRequireSafeToEvict</policy_name>\\n        <policy_description>Restricts safe to evict annotation existing in pod with local storage.</policy_description>\\n        <policy_severity>low</policy_severity>\\n    </policy_instances>\\n    <policy_instances>\\n        <policy_category>k8s-general</policy_category>\\n        <policy_name>ACKRequiredProbes</policy_name>\\n        <policy_description>Requires Pods to have readiness and/or liveness probes.</policy_description>\\n        <policy_severity>medium</policy_severity>\\n    </policy_instances>\\n    <instances_severity_count>\\n        <high>11</high>\\n        <medium>1</medium>\\n    </instances_severity_count>\\n</DescribePolicyInstancesStatusResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "获取集群当前不同策略类型对应的实例部署状态，包括每种策略规则对应开启的实例计数，以及不同治理等级下开启的策略种类计数。",
        "title": "获取集群中指定策略规则实例详情"
      },
      "method": "get",
      "name": "DescribePolicyInstancesStatus",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群ID",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policies/status",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "instances_severity_count": {
                "description": "集群中当前部署的不同治理等级的策略实例计数",
                "example": "{ \"high\": 11,     \"medium\": 1  }",
                "type": "object"
              },
              "policy_instances": {
                "description": "不同策略类型下的策略实例计数列表",
                "items": {
                  "properties": {
                    "policy_category": {
                      "description": "策略类型",
                      "example": "cis-k8s",
                      "type": "string"
                    },
                    "policy_description": {
                      "description": "策略描述",
                      "example": "Restricts use of the cluster-admin role.",
                      "type": "string"
                    },
                    "policy_instances_count": {
                      "description": "已部署的策略实例计数，如果字段为空说明未部署该类型策略实例。",
                      "example": "1",
                      "format": "int64",
                      "type": "integer"
                    },
                    "policy_name": {
                      "description": "策略名称",
                      "example": "ACKRestrictRoleBindings",
                      "type": "string"
                    },
                    "policy_severity": {
                      "description": "策略治理等级",
                      "example": "medium",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "不同策略类型下的策略实例计数列表",
                "type": "array"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "获取集群当前不同策略类型对应的实例部署状态，包括每种策略规则对应开启的实例计数，以及不同治理等级下开启的策略种类计数。",
      "title": "获取集群中指定策略规则实例详情"
    },
    "DescribeSubaccountK8sClusterUserConfig": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeSubaccountK8sClusterUserConfig\n> 该接口只允许被阿里云账号调用。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"config\\\": \\\"apiVersion: v1****\\\",\\n  \\\"expiration\\\": \\\"2024-03-10T09:56:17Z\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeSubaccountK8sClusterUserConfigResponse>\\n    <config>apiVersion: v1****</config>\\n    <expiration>2024-03-10T09:56:17Z</expiration>\\n</DescribeSubaccountK8sClusterUserConfigResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "使用主账号调用DescribeSubaccountK8sClusterUserConfig，获取包含账号内指定RAM用户或角色身份信息的Kubernetes集群的KubeConfig凭证。",
        "systemTags": {
          "operationType": "get"
        },
        "title": "使用主账号获取指定RAM用户或角色的集群KubeConfig"
      },
      "method": "get",
      "name": "DescribeSubaccountK8sClusterUserConfig",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5b5e80b0b64a4bf6939d2d8f****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "Uid",
          "required": true,
          "schema": {
            "description": "阿里云账号内指定的RAM用户或RAM角色ID。",
            "example": "26562443851650****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "PrivateIpAddress",
          "required": false,
          "schema": {
            "description": "是否获取内网连接配置。取值：\n- `true`：仅获取内网连接的KubeConfig凭证。\n- `false`：仅获取公网连接的KubeConfig凭证。\n\n默认值：`false`。",
            "example": "true",
            "required": false,
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "TemporaryDurationMinutes",
          "required": false,
          "schema": {
            "description": "临时KubeConfig有效期，单位：分钟。\n\n取值范围：15分钟～4320分钟（3天）。\n> 当不设置该参数时，将由系统自动确定一个更长的有效期，具体过期时间通过返回的expiration字段的值确定。",
            "example": "15",
            "format": "int64",
            "required": false,
            "type": "integer"
          }
        }
      ],
      "path": "/k8s/{ClusterId}/users/{Uid}/user_config",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "config": {
                "description": "集群访问配置。关于如何查看访问集群配置信息，请参见[配置集群凭据](https://help.aliyun.com/document_detail/86494.html)。",
                "example": "apiVersion: v1****",
                "required": true,
                "type": "string"
              },
              "expiration": {
                "description": "KubeConfig的过期时间。格式：RFC3339格式的UTC时间。",
                "example": "2024-03-10T09:56:17Z",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "使用主账号调用DescribeSubaccountK8sClusterUserConfig，获取包含账号内指定RAM用户或角色身份信息的Kubernetes集群的KubeConfig凭证。",
      "title": "使用主账号获取指定RAM用户或角色的集群KubeConfig"
    },
    "DescribeTaskInfo": {
      "consumes": [
        "application/json"
      ],
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeTaskInfo\n根据任务ID，查询该任务执行详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"task_id\\\": \\\"T-5faa48fb31b6b8078d000006\\\",\\n  \\\"cluster_id\\\": \\\"c78592bfe92244365b3c3ad47f1de****\\\",\\n  \\\"task_type\\\": \\\"cluster_scaleout\\\",\\n  \\\"state\\\": \\\"running\\\",\\n  \\\"created\\\": \\\"2020-11-10T16:02:04+08:00\\\",\\n  \\\"updated\\\": \\\"2020-11-10T16:03:06+08:00\\\",\\n  \\\"target\\\": {\\n    \\\"id\\\": \\\"c78592bfe92244365b3c3ad47f1de****\\\\n\\\",\\n    \\\"type\\\": \\\"cluster\\\"\\n  },\\n  \\\"parameters\\\": {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  },\\n  \\\"stages\\\": [\\n    {\\n      \\\"state\\\": \\\"running\\\",\\n      \\\"start_time\\\": \\\"2022-12-15 23:00:00\\\",\\n      \\\"end_time\\\": \\\"2022-12-15 23:00:00\\\",\\n      \\\"message\\\": \\\"success to xxxxx\\\",\\n      \\\"outputs\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    }\\n  ],\\n  \\\"current_stage\\\": \\\"DrainNodes\\\",\\n  \\\"events\\\": [\\n    {\\n      \\\"action\\\": \\\"start\\\",\\n      \\\"level\\\": \\\"Normal\\\",\\n      \\\"message\\\": \\\"start to xxx\\\",\\n      \\\"reason\\\": \\\"NodePoolUpgradeStart\\\",\\n      \\\"source\\\": \\\"ACK\\\",\\n      \\\"timestamp\\\": \\\"1669706229286\\\"\\n    }\\n  ],\\n  \\\"task_result\\\": [\\n    {\\n      \\\"data\\\": \\\"i-xxx\\\",\\n      \\\"status\\\": \\\"success\\\"\\n    }\\n  ],\\n  \\\"error\\\": {\\n    \\\"code\\\": \\\"400\\\",\\n    \\\"message\\\": \\\"failed to xxx\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<cluster_id>c78592bfe92244365b3c3ad47f1de****</cluster_id>\\n<task_id>T-5faa48fb31b6b8078d000006</task_id>\\n<created>2020-11-10T16:02:04+08:00</created>\\n<updated>2020-11-10T16:03:06+08:00</updated>\\n<state>running</state>\\n<task_type>cluster_scaleout</task_type>\\n<task_result>\\n    <data>i-xxx</data>\\n    <status>success</status>\\n</task_result>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据任务ID，查询该任务执行详情。",
        "systemTags": {},
        "title": "查询任务详情"
      },
      "method": "get",
      "name": "DescribeTaskInfo",
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "description": "任务ID。",
            "example": "T-5faa48fb31b6b8078d00****",
            "required": true,
            "title": "任务ID。",
            "type": "string"
          }
        }
      ],
      "path": "/tasks/{task_id}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体数据。",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "c78592bfe92244365b3c3ad47f1de****",
                "title": "集群ID。",
                "type": "string"
              },
              "created": {
                "description": "任务创建时间。",
                "example": "2020-11-10T16:02:04+08:00",
                "title": "任务创建时间。",
                "type": "string"
              },
              "current_stage": {
                "description": "任务当前运行阶段。",
                "example": "DrainNodes",
                "title": "任务当前运行阶段。",
                "type": "string"
              },
              "error": {
                "description": "任务错误信息。",
                "properties": {
                  "code": {
                    "description": "错误码。",
                    "example": "400",
                    "title": "错误码。",
                    "type": "string"
                  },
                  "message": {
                    "description": "错误消息。",
                    "example": "failed to xxx",
                    "title": "错误消息。",
                    "type": "string"
                  }
                },
                "title": "任务错误信息。",
                "type": "object"
              },
              "events": {
                "description": "任务产生的事件。",
                "items": {
                  "description": "事件详情。",
                  "properties": {
                    "action": {
                      "description": "事件动作。",
                      "example": "start",
                      "title": "事件动作。",
                      "type": "string"
                    },
                    "level": {
                      "description": "事件等级。",
                      "example": "Normal",
                      "title": "事件等级。",
                      "type": "string"
                    },
                    "message": {
                      "description": "事件消息。",
                      "example": "start to xxx",
                      "title": "事件消息。",
                      "type": "string"
                    },
                    "reason": {
                      "description": "事件原因。",
                      "example": "NodePoolUpgradeStart",
                      "title": "事件原因。",
                      "type": "string"
                    },
                    "source": {
                      "description": "事件来源。",
                      "example": "ACK",
                      "title": "事件来源。",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "事件生成时间。",
                      "example": "1669706229286",
                      "title": "事件生成时间。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "任务产生的事件。",
                "type": "array"
              },
              "parameters": {
                "description": "任务参数。",
                "title": "任务参数。",
                "type": "object"
              },
              "stages": {
                "description": "任务阶段。",
                "items": {
                  "description": "任务阶段。",
                  "properties": {
                    "end_time": {
                      "description": "任务阶段结束时间。",
                      "example": "2022-12-15 23:00:00",
                      "title": "任务阶段结束时间。",
                      "type": "string"
                    },
                    "message": {
                      "description": "任务阶段信息。",
                      "example": "success to xxxxx",
                      "title": "任务阶段信息。",
                      "type": "string"
                    },
                    "outputs": {
                      "description": "任务阶段输出。",
                      "title": "任务阶段输出。",
                      "type": "object"
                    },
                    "start_time": {
                      "description": "任务阶段开始时间。",
                      "example": "2022-12-15 23:00:00",
                      "title": "任务阶段开始时间。",
                      "type": "string"
                    },
                    "state": {
                      "description": "任务阶段状态。",
                      "example": "running",
                      "title": "任务阶段状态。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "任务阶段。",
                "type": "array"
              },
              "state": {
                "description": "代表任务的运行状态。取值：\n- `running`：任务正在运行中。\n- `fail`：任务运行失败。\n- `success`：任务运行完成。\n",
                "example": "running",
                "title": "任务当前状态。",
                "type": "string"
              },
              "target": {
                "description": "任务执行对象。",
                "properties": {
                  "id": {
                    "description": "任务执行对象ID。",
                    "example": "c78592bfe92244365b3c3ad47f1de****\n",
                    "title": "任务执行对象ID。",
                    "type": "string"
                  },
                  "type": {
                    "description": "任务执行对象类型。",
                    "example": "cluster",
                    "title": "任务执行对象类型。",
                    "type": "string"
                  }
                },
                "title": "任务执行对象。",
                "type": "object"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5faa48fb31b6b8078d000006",
                "title": "任务ID。",
                "type": "string"
              },
              "task_result": {
                "description": "任务执行详情。",
                "items": {
                  "description": "任务详情。",
                  "properties": {
                    "data": {
                      "description": "任务操作的资源，例如：扩容时操作资源是实例，那么此处就是实例ID。",
                      "example": "i-xxx",
                      "title": "操作的资源，例如：实例ID。",
                      "type": "string"
                    },
                    "status": {
                      "description": "资源扩容的状态。取值：\n- `success`：扩容成功。\n- `failed`：扩容失败。\n- `initial`：初始化中。",
                      "example": "success",
                      "title": "资源的状态。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "任务执行详情。",
                "type": "array"
              },
              "task_type": {
                "description": "任务类型，扩容任务的类型为`cluster_scaleout`。",
                "example": "cluster_scaleout",
                "title": "当前任务类型。",
                "type": "string"
              },
              "updated": {
                "description": "任务更新时间。",
                "example": "2020-11-10T16:03:06+08:00",
                "title": "任务更新时间。",
                "type": "string"
              }
            },
            "title": "返回体参数。",
            "type": "object"
          }
        }
      },
      "summary": "根据任务ID，查询该任务执行详情。",
      "title": "查询任务详情"
    },
    "DescribeTemplateAttribute": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeTemplateAttribute\n根据编排模板ID，查询该编排模板的详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"id\\\": \\\"72d20cf8-a533-4ea9-a10d-e7630d3d****\\\",\\n    \\\"acl\\\": \\\"private\\\",\\n    \\\"name\\\": \\\"web\\\",\\n    \\\"template\\\": \\\"apiVersion: V1\\\\\\\\n***\\\",\\n    \\\"template_type\\\": \\\"kubernetes\\\",\\n    \\\"description\\\": \\\"test template\\\",\\n    \\\"tags\\\": \\\"sa\\\",\\n    \\\"template_with_hist_id\\\": \\\"874ec485-e7e6-4373-8a3b-47bde8ae****\\\",\\n    \\\"created\\\": \\\"2020-09-16T19:21:29+08:00\\\",\\n    \\\"updated\\\": \\\"2020-09-16T19:21:29+08:00\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<0>\\n    <id>72d20cf8-a533-4ea9-a10d-e7630d3d****</id>\\n    <acl>private</acl>\\n    <name>web</name>\\n    <template>apiVersion: V1\\\\n***</template>\\n    <template_type>kubernetes</template_type>\\n    <description>test template</description>\\n    <tags>sa</tags>\\n    <template_with_hist_id>874ec485-e7e6-4373-8a3b-47bde8ae****</template_with_hist_id>\\n    <created>2020-09-16T19:21:29+08:00</created>\\n    <updated>2020-09-16T19:21:29+08:00</updated>\\n</0>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据编排模板ID，查询该编排模板的详情。",
        "systemTags": {},
        "title": "查询编排模板详情"
      },
      "method": "get",
      "name": "DescribeTemplateAttribute",
      "parameters": [
        {
          "in": "path",
          "name": "TemplateId",
          "required": true,
          "schema": {
            "description": "模板ID。",
            "example": "874ec485-e7e6-4373-8a3b-47bde8a****",
            "required": true,
            "title": "模板ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "template_type",
          "required": false,
          "schema": {
            "description": "模板类型，其值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将在控制台Swarm集群页面显示该模板（已废弃）。\n\n- 当取值非`kubernetes`时在控制台的编排模板页面将不会展示该模板，推荐使用`kubernetes`。\n\n默认值：`kubernetes`。\n",
            "example": "kubernetes",
            "required": false,
            "title": "模板类型，值为创建部署模板时指定的模板类型。",
            "type": "string"
          }
        }
      ],
      "path": "/templates/{TemplateId}",
      "responses": {
        "200": {
          "schema": {
            "description": "编排模板详情。",
            "items": {
              "description": "请求数据体。",
              "properties": {
                "acl": {
                  "description": "编排模板访问权限。",
                  "example": "private",
                  "title": "编排模板权限。取值：private，public，shared。",
                  "type": "string"
                },
                "created": {
                  "description": "编排模板创建时间。",
                  "example": "2020-09-16T19:21:29+08:00",
                  "title": "编排模板创建时间。",
                  "type": "string"
                },
                "description": {
                  "description": "编排模板描述信息。",
                  "example": "test template",
                  "title": "编排模板描述。",
                  "type": "string"
                },
                "id": {
                  "description": "编排模板ID，每次变更都会有一个模板ID。",
                  "example": "72d20cf8-a533-4ea9-a10d-e7630d3d****",
                  "title": "编排模板ID，模板每次修改，这个ID都会改变。\t",
                  "type": "string"
                },
                "name": {
                  "description": "编排模板名称。",
                  "example": "web",
                  "title": "编排模板名称。\t",
                  "type": "string"
                },
                "tags": {
                  "description": "部署模板的标签。",
                  "example": "sa",
                  "title": "部署模板的标签。",
                  "type": "string"
                },
                "template": {
                  "description": "编排模板YAML内容。",
                  "example": "apiVersion: V1\\n***",
                  "title": "编排模板内容。\t",
                  "type": "string"
                },
                "template_type": {
                  "description": "模板类型，其值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将在控制台Swarm集群页面显示该模板（已废弃）。\n\n- 当取值非`kubernetes`时在控制台的编排模板页面将不会展示该模板，推荐使用`kubernetes`。\n\n默认值：`kubernetes`。\n",
                  "example": "kubernetes",
                  "title": "编排模板类型",
                  "type": "string"
                },
                "template_with_hist_id": {
                  "description": "编排模板唯一ID，不随模板更新而改变。",
                  "example": "874ec485-e7e6-4373-8a3b-47bde8ae****",
                  "title": "编排模板ID，该ID唯一不随更新而改变。\t",
                  "type": "string"
                },
                "updated": {
                  "description": "编排模板更新时间。",
                  "example": "2020-09-16T19:21:29+08:00",
                  "title": "编排模板修改时间。\t",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回参数。",
            "type": "array"
          }
        }
      },
      "summary": "根据编排模板ID，查询该编排模板的详情。",
      "title": "查询编排模板详情"
    },
    "DescribeTemplates": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeTemplates\n查询已创建的所有编排模板详情。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"templates\\\": [\\n    {\\n      \\\"acl\\\": \\\"private\\\",\\n      \\\"id\\\": \\\"874ec485-e7e6-4373-8a3b-47bde8ae789f\\\",\\n      \\\"name\\\": \\\"webserver\\\",\\n      \\\"description\\\": \\\"a web server\\\",\\n      \\\"tags\\\": \\\"kubernetes\\\",\\n      \\\"template\\\": \\\"apiVersion: apps/v1\\\\\\\\nkind: Deployment\\\\\\\\nmetadata:\\\\\\\\n  name: nginx-deployment-basic\\\\\\\\n  labels:\\\\\\\\n    app: nginx\\\\\\\\nspec:\\\\\\\\n  replicas: 2\\\\\\\\n  selector:\\\\\\\\n    matchLabels:\\\\\\\\n      app: nginx\\\\\\\\n  template:\\\\\\\\n    metadata:\\\\\\\\n      labels:\\\\\\\\n        app: nginx\\\\\\\\n    spec:\\\\\\\\n      containers:\\\\\\\\n      - name: nginx\\\\\\\\n        image: busybox:latest\\\\\\\\n        ports:\\\\\\\\n        - containerPort: 80\\\",\\n      \\\"template_type\\\": \\\"kubernetes\\\",\\n      \\\"created\\\": \\\"2020-06-10T16:30:16+08:00\\\",\\n      \\\"updated\\\": \\\"2020-06-10T16:30:16+08:00\\\",\\n      \\\"template_with_hist_id\\\": \\\"ad81d115-7c8b-47e7-a222-9c28d7f6e588\\\"\\n    }\\n  ],\\n  \\\"page_info\\\": {\\n    \\\"page_number\\\": 20,\\n    \\\"page_size\\\": 3,\\n    \\\"total_count\\\": 50\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<templates>\\n    <acl>private</acl>\\n    <id>874ec485-e7e6-4373-8a3b-47bde8ae789f</id>\\n    <name>webserver</name>\\n    <description>a web server</description>\\n    <tags>kubernetes</tags>\\n    <template>apiVersion: apps/v1\\\\nkind: Deployment\\\\nmetadata:\\\\n  name: nginx-deployment-basic\\\\n  labels:\\\\n    app: nginx\\\\nspec:\\\\n  replicas: 2\\\\n  selector:\\\\n    matchLabels:\\\\n      app: nginx\\\\n  template:\\\\n    metadata:\\\\n      labels:\\\\n        app: nginx\\\\n    spec:\\\\n      containers:\\\\n      - name: nginx\\\\n        image: busybox:latest\\\\n        ports:\\\\n        - containerPort: 80</template>\\n    <template_type>kubernetes</template_type>\\n    <created>2020-06-10T16:30:16+08:00</created>\\n    <updated>2020-06-10T16:30:16+08:00</updated>\\n    <template_with_hist_id>ad81d115-7c8b-47e7-a222-9c28d7f6e588</template_with_hist_id>\\n</templates>\\n<page_info>\\n    <page_number>20</page_number>\\n    <page_size>3</page_size>\\n    <total_count>50</total_count>\\n</page_info>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询已创建的所有编排模板详情。",
        "title": "查询所有编排模板"
      },
      "method": "get",
      "name": "DescribeTemplates",
      "parameters": [
        {
          "in": "query",
          "name": "template_type",
          "required": false,
          "schema": {
            "description": "模板类型，值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将不在控制台的编排模板页面展示该模板。\n\n默认值：`kubernetes`。",
            "example": "kubernetes",
            "required": false,
            "title": "模板类型，部署模板类型，目前一共有2种类型，取值为：kubernetes或compose。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "page_num",
          "required": false,
          "schema": {
            "description": "对查询结果进行分页处理，指定返回第几页的数据。\n\n默认值： 1。",
            "example": "1",
            "format": "int64",
            "required": false,
            "title": "对查询结果进行分页处理，指定返回第几页的数据。  默认值为 1",
            "type": "integer"
          }
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "description": "对查询结果进行分页处理，指定每页包含的数据条数。\n\n默认值：10。",
            "example": "10",
            "format": "int64",
            "required": false,
            "title": "对查询结果进行分页处理，指定每页包含的数据条数。  默认值为 10",
            "type": "integer"
          }
        }
      ],
      "path": "/templates",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "page_info": {
                "description": "分页信息。",
                "properties": {
                  "page_number": {
                    "description": "展示当前页数。",
                    "example": "20",
                    "format": "int64",
                    "title": "当前页数。",
                    "type": "integer"
                  },
                  "page_size": {
                    "description": "单页最大数据条数。",
                    "example": "3",
                    "format": "int64",
                    "title": "单页最大数据条数。",
                    "type": "integer"
                  },
                  "total_count": {
                    "description": "结果总数。",
                    "example": "50",
                    "format": "int64",
                    "title": "结果总数。",
                    "type": "integer"
                  }
                },
                "title": "分页信息。",
                "type": "object"
              },
              "templates": {
                "description": "模板列表。",
                "items": {
                  "description": "部署模板详情。",
                  "properties": {
                    "acl": {
                      "description": "用户部署模板的访问权限，取值：\n\n- `private`：私有的。\n- `public`：公共的。\n- `shared`：可共享的。\n\n默认值：`private`。",
                      "example": "private",
                      "title": "模板访问权限，取值为：private、pubilc或shared。。",
                      "type": "string"
                    },
                    "created": {
                      "description": "部署模板创建时间。",
                      "example": "2020-06-10T16:30:16+08:00",
                      "title": "模板创建时间。",
                      "type": "string"
                    },
                    "description": {
                      "description": "部署模板描述信息。",
                      "example": "a web server",
                      "title": "模板描述信息。",
                      "type": "string"
                    },
                    "id": {
                      "description": "部署模板ID。",
                      "example": "874ec485-e7e6-4373-8a3b-47bde8ae789f",
                      "title": "模板ID。会模板随着更新而变化。",
                      "type": "string"
                    },
                    "name": {
                      "description": "部署模板名称。",
                      "example": "webserver",
                      "title": "模板名称。",
                      "type": "string"
                    },
                    "tags": {
                      "description": "部署模板的标签，如果不显式指定，默认为模板名称。",
                      "example": "kubernetes",
                      "title": "模板标签，如果不显式指定了，默认为模板名称。",
                      "type": "string"
                    },
                    "template": {
                      "description": "YAML格式的模板内容。",
                      "example": "apiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: nginx-deployment-basic\\n  labels:\\n    app: nginx\\nspec:\\n  replicas: 2\\n  selector:\\n    matchLabels:\\n      app: nginx\\n  template:\\n    metadata:\\n      labels:\\n        app: nginx\\n    spec:\\n      containers:\\n      - name: nginx\\n        image: busybox:latest\\n        ports:\\n        - containerPort: 80",
                      "title": "模板详情。",
                      "type": "string"
                    },
                    "template_type": {
                      "description": "模板类型，值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将在控制台Swarm集群页面显示该模板（已废弃）。",
                      "example": "kubernetes",
                      "title": "部署模板类型。",
                      "type": "string"
                    },
                    "template_with_hist_id": {
                      "description": "模板关联的父模板ID，用于实现模板多版本功能（同一模板的不同版本拥有相同的`template_with_hist_id`值）。",
                      "example": "ad81d115-7c8b-47e7-a222-9c28d7f6e588",
                      "title": "模板唯一ID。",
                      "type": "string"
                    },
                    "updated": {
                      "description": "部署模板更新时间。",
                      "example": "2020-06-10T16:30:16+08:00",
                      "title": "模板修改时间。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "模板列表。",
                "type": "array"
              }
            },
            "title": "返回体数据。",
            "type": "object"
          }
        }
      },
      "summary": "查询已创建的所有编排模板详情。",
      "title": "查询所有编排模板"
    },
    "DescribeTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeTrigger\n查询指定的触发器。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"name\\\": \\\"test\\\",\\n    \\\"cluster_id\\\": \\\"c259f563386444ebb8d7****\\\",\\n    \\\"project_id\\\": \\\"default/test-app\\\",\\n    \\\"type\\\": \\\"deployment\\\",\\n    \\\"action\\\": \\\"redeploy\\\",\\n    \\\"token\\\": \\\"eyJhbGci***\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeTriggerResponse>\\n    <id>1234</id>\\n    <name>test</name>\\n    <cluster_id>c259f563386444ebb8d7****</cluster_id>\\n    <project_id>default/test-app</project_id>\\n    <type>deployment</type>\\n    <action>redeploy</action>\\n    <token>eyJhbGci***</token>\\n</DescribeTriggerResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询指定的触发器。",
        "systemTags": {},
        "title": "查询触发器"
      },
      "method": "get",
      "name": "DescribeTrigger",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Namespace",
          "required": true,
          "schema": {
            "description": "应用所属命名空间。",
            "example": "default",
            "required": true,
            "title": "应用所属命名空间。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Type",
          "required": false,
          "schema": {
            "description": "触发器类型。取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。\n\n当不指定触发器类型时，查询结果将不过滤触发器类型。",
            "example": "deployment",
            "required": false,
            "title": "应用类型。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Name",
          "required": true,
          "schema": {
            "description": "应用名称。",
            "example": "web-server",
            "required": true,
            "title": "应用名称。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "action",
          "required": false,
          "schema": {
            "description": "触发器行为，取值：\n\n`redeploy`：重新部署`project_id`中定义的资源。\n\n当不指定触发器行为时，查询结果将不过滤触发器行为。",
            "example": "redeploy",
            "required": false,
            "title": "触发器行为。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/triggers",
      "responses": {
        "200": {
          "schema": {
            "description": "触发器查询结果详情列表。",
            "items": {
              "description": "触发器详情。",
              "properties": {
                "action": {
                  "description": "触发器行为，取值：\n\n`redeploy`: 重新部署project_id中定义的资源。",
                  "example": "redeploy",
                  "title": "触发器行为",
                  "type": "string"
                },
                "cluster_id": {
                  "description": "集群ID。",
                  "example": "c259f563386444ebb8d7****",
                  "title": "集群ID",
                  "type": "string"
                },
                "id": {
                  "description": "触发器ID。",
                  "example": "1234",
                  "title": "触发器ID。",
                  "type": "string"
                },
                "name": {
                  "description": "触发器名称。",
                  "example": "test",
                  "title": "触发器名称。",
                  "type": "string"
                },
                "project_id": {
                  "description": "触发器项目名称。\n\n由应用所在命名空间及应用名称组成，格式为`${namespace}/${name}`，取值示例：default/test-app。",
                  "example": "default/test-app",
                  "title": "触发器项目名称",
                  "type": "string"
                },
                "token": {
                  "description": "Token信息。",
                  "example": "eyJhbGci***",
                  "title": "Token",
                  "type": "string"
                },
                "type": {
                  "description": "触发器类型。\n\n取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。",
                  "example": "deployment",
                  "title": "触发器类型。",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回参数。",
            "type": "array"
          }
        }
      },
      "summary": "查询指定的触发器。",
      "title": "查询触发器"
    },
    "DescribeUserClusterNamespaces": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeUserClusterNamespaces\n列举用户集群命名空间",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  \\\"[   \\\\\\\"default\\\\\\\",   \\\\\\\"kube-node-lease\\\\\\\",   \\\\\\\"kube-public\\\\\\\",   \\\\\\\"kube-system\\\\\\\" ]\\\"\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]",
        "schemes": [
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "列举用户集群命名空间",
        "systemTags": {
          "chargeType": "free",
          "operationType": "get",
          "riskType": "none"
        },
        "title": "查询RAM用户或角色可见的集群命名空间"
      },
      "method": "get",
      "name": "DescribeUserClusterNamespaces",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "title": "指定的集群ID",
            "type": "string"
          }
        }
      ],
      "path": "/api/v2/k8s/{ClusterId}/namespaces",
      "responses": {
        "200": {
          "schema": {
            "description": "RAM用户有权限访问的命名空间名称列表。",
            "items": {
              "description": "RAM用户可见的集群命名空间名称列表。",
              "example": "[   \"default\",   \"kube-node-lease\",   \"kube-public\",   \"kube-system\" ]",
              "type": "string"
            },
            "title": "当前用户有权限访问的命名空间列表",
            "type": "array"
          }
        }
      },
      "summary": "列举用户集群命名空间",
      "title": "查询RAM用户或角色可见的集群命名空间"
    },
    "DescribeUserPermission": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeUserPermission\n查询指定RAM用户的集群授权信息。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"resource_id\\\": \\\"c1b542****\\\",\\n    \\\"resource_type\\\": \\\"cluster\\\",\\n    \\\"role_name\\\": \\\"view\\\",\\n    \\\"role_type\\\": \\\"admin\\\",\\n    \\\"is_owner\\\": 1,\\n    \\\"is_ram_role\\\": 1\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<0>\\n    <resource_id>c1b542**</resource_id>\\n    <resource_type>cluster</resource_type>\\n    <role_name>view</role_name>\\n    <role_type>admin</role_type>\\n    <is_owner>1</is_owner>\\n    <is_ram_role>1</is_ram_role>\\n</0>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询指定RAM用户的集群授权信息。",
        "title": "查询RAM用户集群授权信息"
      },
      "method": "get",
      "name": "DescribeUserPermission",
      "parameters": [
        {
          "in": "path",
          "name": "uid",
          "required": true,
          "schema": {
            "description": "指定RAM用户或RAM角色的ID。\n\n> 当为RAM角色授权时，使用RAM角色的ID。",
            "docRequired": true,
            "example": "21175****",
            "required": true,
            "title": "RAM 用户的 UID",
            "type": "string"
          }
        }
      ],
      "path": "/permissions/users/{uid}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数。",
            "items": {
              "description": "RAM用户集群授权详情。",
              "properties": {
                "is_owner": {
                  "description": "是否为集群创建者的授权，取值：\n\n- `0`：代表不是集群创建者的授权记录。\n- `1`：代表该授权记录为集群创建者的管理员权限。",
                  "example": "1",
                  "format": "int64",
                  "title": "是否为集群 owner 的授权",
                  "type": "integer"
                },
                "is_ram_role": {
                  "description": "是否为RAM角色授权，取值：\n\n- `0`：代表当前记录不是RAM角色授权。\n- `1`：代表当前记录是RAM角色授权。\n\n",
                  "example": "1",
                  "format": "int64",
                  "title": "是否为ram 角色授权",
                  "type": "integer"
                },
                "resource_id": {
                  "description": "集群访问配置，格式为：\n\n- 当是集群维度授权时，格式为：`{cluster_id}`。\n- 当是命名空间维度授权时，格式为：`{cluster_id}/{namespace}`。\n- 当是所有集群授权时，值固定为：`all-clusters`。",
                  "example": "c1b542****",
                  "title": "集群访问配置",
                  "type": "string"
                },
                "resource_type": {
                  "description": "授权类型，取值：\n\n- `cluster`：集群维度。\n- `namespace`：命名空间维度。\n- `console`：所有集群维度的授权（之前只用于控制台展示）。\n\n",
                  "example": "cluster",
                  "title": "授权类型",
                  "type": "string"
                },
                "role_name": {
                  "description": "自定义角色名称，当授权自定义角色时，该字段为指定的自定义集群管理角色名称。",
                  "example": "view",
                  "title": "自定义角色名称",
                  "type": "string"
                },
                "role_type": {
                  "description": "预置的角色类型，取值：\n\n- `admin`：管理员。\n- `ops`：运维人员。\n- `dev`：开发人员。\n- `restricted`：受限用户。\n- `custom`：使用自定义的集群管理角色。",
                  "example": "admin",
                  "title": "预置的角色类型",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回体参数",
            "type": "array"
          }
        }
      },
      "summary": "查询指定RAM用户的集群授权信息。",
      "title": "查询RAM用户集群授权信息"
    },
    "DescribeUserQuota": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeUserQuota\n查询集群及节点配额。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"amk_cluster_quota\\\": 20,\\n  \\\"ask_cluster_quota\\\": 3,\\n  \\\"cluster_nodepool_quota\\\": 10,\\n  \\\"cluster_quota\\\": 50,\\n  \\\"node_quota\\\": 100,\\n  \\\"edge_improved_nodepool_quota\\\": {\\n    \\\"bandwidth\\\": 10,\\n    \\\"count\\\": 3,\\n    \\\"period\\\": 3\\n  },\\n  \\\"quotas\\\": {\\n    \\\"key\\\": {\\n      \\\"quota\\\": \\\"1\\\",\\n      \\\"operation_code\\\": \\\"q_Kubernetes_Cluster\\\",\\n      \\\"adjustable\\\": true,\\n      \\\"unit\\\": \\\"Cluster\\\"\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeUserQuotaResponse>\\n    <amk_cluster_quota>20</amk_cluster_quota>\\n    <ask_cluster_quota>3</ask_cluster_quota>\\n    <cluster_nodepool_quota>10</cluster_nodepool_quota>\\n    <cluster_quota>50</cluster_quota>\\n    <node_quota>100</node_quota>\\n    <edge_improved_nodepool_quota>\\n        <bandwidth>10</bandwidth>\\n        <count>3</count>\\n        <period>3</period>\\n    </edge_improved_nodepool_quota>\\n    <quotas>\\n        <key>\\n            <quota>1</quota>\\n            <operation_code>q_Kubernetes_Cluster</operation_code>\\n            <adjustable>true</adjustable>\\n            <unit>Cluster</unit>\\n        </key>\\n    </quotas>\\n</DescribeUserQuotaResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "查询集群及节点配额。",
        "title": "查询用户配额"
      },
      "method": "get",
      "name": "DescribeUserQuota",
      "parameters": [],
      "path": "/quota",
      "responses": {
        "200": {
          "headers": {},
          "schema": {
            "description": "返回体参数。",
            "properties": {
              "amk_cluster_quota": {
                "description": "托管版集群配额。默认为20。如果超过默认值，需[到配额平台提交申请](https://quotas.console.aliyun.com/products/csk/quotas)扩容。",
                "example": "20",
                "format": "int64",
                "title": "托管版集群配额。",
                "type": "integer"
              },
              "ask_cluster_quota": {
                "description": "ASK集群配额，默认为20。如果超过默认值，需[到配额平台提交申请](https://quotas.console.aliyun.com/products/csk/quotas)扩容。",
                "example": "3",
                "format": "int64",
                "title": "Serverless集群配额。",
                "type": "integer"
              },
              "cluster_nodepool_quota": {
                "description": "单集群节点池配额，默认值为20。如果超过默认值，需[到配额平台提交申请](https://quotas.console.aliyun.com/products/csk/quotas)扩容",
                "example": "10",
                "format": "int64",
                "title": "集群节点池配额。",
                "type": "integer"
              },
              "cluster_quota": {
                "description": "单账户总集群配额，默认为50。如果超过默认值，需[到配额平台提交申请](https://quotas.console.aliyun.com/products/csk/quotas)扩容。",
                "example": "50",
                "format": "int64",
                "title": "专有版集群托管版集群的总配额。",
                "type": "integer"
              },
              "edge_improved_nodepool_quota": {
                "description": "边缘增强型节点池Quota。",
                "properties": {
                  "bandwidth": {
                    "description": "每个边缘增强型节点池允许的最大带宽，单位：Mbps。",
                    "example": "10",
                    "format": "int32",
                    "title": "每个边缘增强型节点池允许的最大带宽，单位Mbps",
                    "type": "integer"
                  },
                  "count": {
                    "description": "每个账号下允许创建的边缘增强型节点池数量。",
                    "example": "3",
                    "format": "int32",
                    "title": "每个账号下允许创建的边缘增强型节点池数量。",
                    "type": "integer"
                  },
                  "period": {
                    "description": "每个边缘增强型节点池最大购买时长，单位：月。\n>由于边缘增强型节点池为按量付费，您暂时无需关注该字段。",
                    "example": "3",
                    "format": "int32",
                    "title": "每个边缘增强型节点池最大购买时长，单位月。由于边缘增强型节点池为按量付费，用户暂时无需关注该字段。",
                    "type": "integer"
                  }
                },
                "title": "边缘增强型节点池quota",
                "type": "object"
              },
              "node_quota": {
                "description": "单集群节点数配额，默认为100。如果超过默认值，需[到配额平台提交申请](https://quotas.console.aliyun.com/products/csk/quotas)扩容。",
                "example": "100",
                "format": "int64",
                "title": "单集群的节点配额。",
                "type": "integer"
              },
              "quotas": {
                "additionalProperties": {
                  "description": "配额项。",
                  "properties": {
                    "adjustable": {
                      "description": "是否可调整。",
                      "example": "true",
                      "type": "boolean"
                    },
                    "operation_code": {
                      "description": "配额码。",
                      "example": "q_Kubernetes_Cluster",
                      "type": "string"
                    },
                    "quota": {
                      "description": "配额值，如果超过配额，需到[配额平台](https://quotas.console.aliyun.com/products/csk/quotas)提交申请扩容。",
                      "example": "1",
                      "type": "string"
                    },
                    "unit": {
                      "description": "单位。",
                      "example": "Cluster",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": "新配额项，如存在该字段，则以该字段为准。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "查询集群及节点配额。",
      "title": "查询用户配额"
    },
    "DescribeWorkflows": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/DescribeWorkflows\n调用DescribeWorkflows查询已创建的所有工作流。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"cluster_id\\\": \\\"cb1a7214cfc0b41d9bb086affc2d8f51c\\\",\\n      \\\"job_name\\\": \\\"wgs-gpu-qb4dk\\\",\\n      \\\"create_time\\\": \\\"2020-01-15T13:18:52Z\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<jobs>\\n    <cluster_id>cb1a7214cfc0b41d9bb086affc2d8f51c</cluster_id>\\n    <job_name>wgs-gpu-qb4dk</job_name>\\n    <create_time>2020-01-15T13:18:52Z</create_time>\\n</jobs>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用DescribeWorkflows查询已创建的所有工作流。",
        "title": "查询工作流的详细信息"
      },
      "method": "get",
      "name": "DescribeWorkflows",
      "parameters": [],
      "path": "/gs/workflows",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数",
            "properties": {
              "jobs": {
                "description": "Job列表。",
                "items": {
                  "description": "Job详情。",
                  "properties": {
                    "cluster_id": {
                      "description": "集群ID。",
                      "example": "cb1a7214cfc0b41d9bb086affc2d8f51c",
                      "title": "集群ID。",
                      "type": "string"
                    },
                    "create_time": {
                      "description": "工作流创建时间。",
                      "example": "2020-01-15T13:18:52Z",
                      "title": "工作流创建时间。",
                      "type": "string"
                    },
                    "job_name": {
                      "description": "工作流名称。",
                      "example": "wgs-gpu-qb4dk",
                      "title": "工作流名称。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "job信息",
                "type": "array"
              }
            },
            "title": "返回体参数",
            "type": "object"
          }
        }
      },
      "summary": "调用DescribeWorkflows查询已创建的所有工作流。",
      "title": "查询工作流的详细信息"
    },
    "FixNodePoolVuls": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/FixNodePoolVuls\n1. 节点池CVE修复基于云安全中心提供，您需要购买云安全中心旗舰版（容器版）才能正常使用。\n2. 部分CVE修复需要重启您的节点，容器服务会在您的节点重启前执行本节点的排水工作，请确保集群有足够的节点空余资源用于排水，例如提前扩容节点池。\n3. CVE的兼容性由云安全中心保证，您需要关注您的应用与CVE的兼容性，您可以在修复过程中随时暂停或者取消修复。\n4. CVE修复是分批次进行的，点击暂停或者取消CVE修复后，已经下发了修复任务的批次会继续执行直到完成，未下发的批次会被暂停任务下发或取消任务下发。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"task_id\\\": \\\"T-60fea8ad2e277f087900****\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "自动修复指定集群节点池的漏洞。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修复节点池漏洞"
      },
      "method": "post",
      "name": "FixNodePoolVuls",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "cf62854ac2130470897be7a27ed1f****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "nodepool_id",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np31da1b38983f4511b490fc62108a****",
            "required": true,
            "title": "节点池ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "auto_restart": {
                "required": false,
                "title": "修复完成后是否自动重启节点。",
                "type": "boolean"
              },
              "nodes": {
                "description": "待修复的节点名称列表。",
                "items": {
                  "description": "节点名称。",
                  "example": "cn-beijing.10.0.1.26",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "待修复的节点名称列表",
                "type": "array"
              },
              "rollout_policy": {
                "description": "轮转修复策略。",
                "properties": {
                  "max_parallelism": {
                    "description": "轮转修复时的最大并行度，最小值为1，最大值为节点池节点数量。",
                    "example": "1",
                    "format": "int64",
                    "required": false,
                    "title": "轮转修复时的最大并行度",
                    "type": "integer"
                  }
                },
                "required": false,
                "title": "轮转修复策略",
                "type": "object"
              },
              "vuls": {
                "description": "漏洞列表。",
                "items": {
                  "description": "漏洞名称。",
                  "example": "oval:com.redhat.rhsa:def:20170574",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "待修复的漏洞名称列表",
                "type": "array"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/nodepools/{nodepool_id}/vuls/fix",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "task_id": {
                "description": "修复任务ID。",
                "example": "T-60fea8ad2e277f087900****",
                "title": "修复任务ID",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "自动修复指定集群节点池的漏洞。",
      "title": "修复节点池漏洞"
    },
    "GetClusterCheck": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/GetClusterCheck\n使用GetClusterCheck查询指定的集群检查状态和结果。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"check_id\\\": \\\"1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto\\\",\\n  \\\"type\\\": \\\"ClusterUpgrade\\\",\\n  \\\"status\\\": \\\"Succeeded\\\",\\n  \\\"message\\\": \\\"task succeed\\\",\\n  \\\"created_at\\\": \\\"2023-10-16T08:31:20.292030178Z\\\",\\n  \\\"finished_at\\\": \\\"2023-10-16T08:35:20.292030178Z\\\",\\n  \\\"check_items\\\": {\\n    \\\"key\\\": [\\n      {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    ]\\n  }\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "使用GetClusterCheck查询指定的集群检查状态和结果。",
        "systemTags": {
          "chargeType": "free",
          "operationType": "list",
          "riskType": "none"
        },
        "title": "查询集群检查结果"
      },
      "method": "get",
      "name": "GetClusterCheck",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "ce0da5a1d627e4e9e9f96cae8ad07****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "check_id",
          "required": true,
          "schema": {
            "description": "检查ID。",
            "example": "1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto",
            "required": true,
            "title": "检查ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/checks/{check_id}",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "check_id": {
                "description": "Id of the request",
                "example": "1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto",
                "title": "Id of the request",
                "type": "string"
              },
              "check_items": {
                "additionalProperties": {
                  "description": "检查项。",
                  "items": {
                    "description": "检查项属性。",
                    "example": "Name",
                    "type": "object"
                  },
                  "type": "array"
                },
                "description": "检查项。",
                "title": "检查项。",
                "type": "object"
              },
              "created_at": {
                "description": "创建时间。",
                "example": "2023-10-16T08:31:20.292030178Z",
                "title": "创建时间。",
                "type": "string"
              },
              "finished_at": {
                "description": "完成时间。",
                "example": "2023-10-16T08:35:20.292030178Z",
                "title": "完成时间。",
                "type": "string"
              },
              "message": {
                "description": "检查状态信息。",
                "example": "task succeed",
                "title": "检查状态信息。",
                "type": "string"
              },
              "status": {
                "description": "检查状态。",
                "example": "Succeeded",
                "title": "检查状态。",
                "type": "string"
              },
              "type": {
                "description": "检查类型。",
                "example": "ClusterUpgrade",
                "title": "检查类型。",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "使用GetClusterCheck查询指定的集群检查状态和结果。",
      "title": "查询集群检查结果"
    },
    "GetKubernetesTrigger": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/GetKubernetesTrigger\n根据应用名称查询该应用的触发器。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"id\\\": \\\"1234\\\",\\n    \\\"name\\\": \\\"test\\\",\\n    \\\"cluster_id\\\": \\\"c259f563386444ebb8d7**\\\",\\n    \\\"project_id\\\": \\\"default/test-app\\\",\\n    \\\"type\\\": \\\"deployment\\\",\\n    \\\"action\\\": \\\"redeploy\\\",\\n    \\\"token\\\": \\\"eyJhbGci***\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<0>\\n    <id>1234</id>\\n    <name>test</name>\\n    <cluster_id>c259f563386444ebb8d7**</cluster_id>\\n    <project_id>default/test-app</project_id>\\n    <type>deployment</type>\\n    <action>redeploy</action>\\n</0>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据应用名称查询该应用的触发器。",
        "title": "查询触发器"
      },
      "method": "get",
      "name": "GetKubernetesTrigger",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5cdf7e3938bc4f8eb0e44b21a80f****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Namespace",
          "required": true,
          "schema": {
            "description": "命名空间名称。",
            "example": "default",
            "required": true,
            "title": "应用所属命名空间。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Type",
          "required": false,
          "schema": {
            "description": "触发器类型。取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。\n\n当不指定触发器类型时，查询结果将不过滤触发器类型。",
            "example": "deployment",
            "required": false,
            "title": "应用类型。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "Name",
          "required": true,
          "schema": {
            "description": "应用名称。",
            "example": "web-server",
            "required": true,
            "title": "应用名称。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "action",
          "required": false,
          "schema": {
            "description": "触发器行为，取值：\n\n`redeploy`：重新部署`project_id`中定义的资源。\n\n当不指定触发器行为时，查询结果将不过滤触发器行为。",
            "example": "redeploy",
            "required": false,
            "title": "触发器行为。",
            "type": "string"
          }
        }
      ],
      "path": "/triggers/{ClusterId}",
      "responses": {
        "200": {
          "schema": {
            "description": "触发器查询结果详情列表。",
            "items": {
              "description": "触发器详情。",
              "properties": {
                "action": {
                  "description": "触发器行为，取值：\n\n`redeploy`: 重新部署project_id中定义的资源。",
                  "example": "redeploy",
                  "title": "触发器行为",
                  "type": "string"
                },
                "cluster_id": {
                  "description": "集群ID。",
                  "example": "c259f563386444ebb8d7**",
                  "title": "集群ID",
                  "type": "string"
                },
                "id": {
                  "description": "触发器ID。",
                  "example": "1234",
                  "title": "触发器ID。",
                  "type": "string"
                },
                "name": {
                  "description": "触发器名称。",
                  "example": "test",
                  "title": "触发器名称。",
                  "type": "string"
                },
                "project_id": {
                  "description": "触发器项目名称。\n\n由应用所在命名空间及应用名称组成，格式为`${namespace}/${name}`，取值示例：default/test-app。",
                  "example": "default/test-app",
                  "title": "触发器项目名称",
                  "type": "string"
                },
                "token": {
                  "description": "Token",
                  "example": "eyJhbGci***",
                  "title": "Token",
                  "type": "string"
                },
                "type": {
                  "description": "触发器类型。\n\n取值：\n\n- `deployment`：针对无状态应用的触发器。 \n\n- `application`：针对应用中心应用的触发器。\n\n默认值：`deployment`。",
                  "example": "deployment",
                  "title": "触发器类型。",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "title": "返回参数。",
            "type": "array"
          }
        }
      },
      "summary": "根据应用名称查询该应用的触发器。",
      "title": "查询触发器"
    },
    "GetUpgradeStatus": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/GetUpgradeStatus\n根据集群ID，查询该集群的升级状态。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"error_message\\\": \\\"subject to actual return\\\",\\n  \\\"precheck_report_id\\\": \\\"be4c8eb72de94d459ea7ace7c811d119\\\",\\n  \\\"status\\\": \\\"running\\\",\\n  \\\"upgrade_step\\\": \\\"prechecking\\\",\\n  \\\"upgrade_task\\\": {\\n    \\\"status\\\": \\\"running\\\",\\n    \\\"message\\\": \\\"subject to actual return\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<GetUpgradeStatusResponse>\\n    <error_message>subject to actual return</error_message>\\n    <precheck_report_id>be4c8eb72de94d459ea7ace7c811d119</precheck_report_id>\\n    <status>running</status>\\n    <upgrade_step>prechecking</upgrade_step>\\n    <upgrade_task>\\n        <status>running</status>\\n        <message>subject to actual return</message>\\n    </upgrade_task>\\n</GetUpgradeStatusResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，查询该集群的升级状态。",
        "title": "查询集群升级状态"
      },
      "method": "get",
      "name": "GetUpgradeStatus",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}/upgrade/status",
      "responses": {
        "200": {
          "schema": {
            "description": "集群升级状态详情。",
            "properties": {
              "error_message": {
                "description": "集群升级中的错误信息。",
                "example": "subject to actual return",
                "title": "错误信息描述。",
                "type": "string"
              },
              "precheck_report_id": {
                "description": "预检查返回ID。",
                "example": "be4c8eb72de94d459ea7ace7c811d119",
                "title": "预检查返回ID。",
                "type": "string"
              },
              "status": {
                "description": "集群目前升级的状态。取值：\n\n- `success` : 升级成功。\n- `fail` : 升级失败。\n- `pause` : 升级暂停。\n- `running` : 升级进行中。",
                "example": "running",
                "title": "升级状态。",
                "type": "string"
              },
              "upgrade_step": {
                "description": "集群目前升级的阶段。取值：\n\n- `not_start` : 暂未开始。\n- `prechecking` : 预检查中。\n- `upgrading`:  升级中。\n- `pause` : 暂停中。\n- `success` : 升级成功。",
                "example": "prechecking",
                "title": "升级任务执行到哪一步了。",
                "type": "string"
              },
              "upgrade_task": {
                "description": "升级任务详情。",
                "properties": {
                  "message": {
                    "description": "升级任务描述信息。",
                    "example": "subject to actual return",
                    "title": "任务描述信息。",
                    "type": "string"
                  },
                  "status": {
                    "description": "升级任务状态。取值：\n- `running`: 执行中。\n- `Success`: 执行成功。\n- `Failed`: 执行失败。\n\n",
                    "example": "running",
                    "title": "任务状态：  emptry、running、success、failed",
                    "type": "string"
                  }
                },
                "title": "升级任务详情。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID，查询该集群的升级状态。",
      "title": "查询集群升级状态"
    },
    "GrantPermissions": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/GrantPermissions\n**注意事项**：\n\n- 请确保已在RAM控制台为目标RAM用户授予了至少拥有目标集群的只读权限的RAM策略，否则API将返回`ErrorRamPolicyConfig`错误码。\n关于RAM授权操作详情，请参见 [自定义RAM授权策略](https://help.aliyun.com/document_detail/86485.html)。\n- 如果调用这个API的账号是RAM用户账号，请先确保该账号已拥有修改其他RAM用户集群授权信息的权限，否则API将返回`StatusForbidden`或`ForbiddenGrantPermissions`错误码。具体操作，请参见[子账号如何给其他子账号进行RBAC授权](https://help.aliyun.com/document_detail/119035.html) 。\n\n- 全量更新RAM用户集群授权信息操作会覆盖目标RAM用户已有的集群权限，请求时需要包含想要授权给目标RAM用户的所有权限配置。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "summary": "调用GrantPermissions全量更新RAM用户集群授权信息。",
        "title": "全量更新RAM用户集群授权信息"
      },
      "method": "post",
      "name": "GrantPermissions",
      "parameters": [
        {
          "in": "path",
          "name": "uid",
          "required": true,
          "schema": {
            "description": "RAM用户的ID。",
            "docRequired": true,
            "example": "2367****",
            "required": true,
            "title": "指定 RAM 用户的 UID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数",
            "items": {
              "description": "授权详情。",
              "properties": {
                "cluster": {
                  "description": "授权目标集群ID。\n\n- 当`role_type`参数的值是`all-clusters`时，此参数的值传空字符串。",
                  "example": "c796c60***",
                  "required": true,
                  "title": "授权目标集群id",
                  "type": "string"
                },
                "is_custom": {
                  "description": "该授权是否是自定义授权（`role_name`使用自定义的ClusterRole名称）。",
                  "example": "false",
                  "required": false,
                  "title": "该授权是否是自定义授权",
                  "type": "boolean"
                },
                "is_ram_role": {
                  "description": "是否是RAM角色授权。",
                  "example": "false",
                  "required": false,
                  "title": "是否是 RAM 角色授权",
                  "type": "boolean"
                },
                "namespace": {
                  "description": "命名空间名称，集群维度授权时默认为空。\n\n",
                  "example": "test",
                  "required": false,
                  "title": "命名空间名称",
                  "type": "string"
                },
                "role_name": {
                  "description": "预置的角色名称，取值：\n\n- `admin`: 管理员。\n- `ops`：运维人员。\n- `dev`：开发人员。\n- `restricted`: 受限用户。\n- 自定义的ClusterRole名称。",
                  "example": "ops",
                  "required": true,
                  "title": "预置的角色名称",
                  "type": "string"
                },
                "role_type": {
                  "description": "授权类型，取值：\n\n- `cluster`：集群维度。\n- `namespace`: 命名空间维度。\n- `all-clusters`: 所有集群维度。",
                  "example": "cluster",
                  "required": true,
                  "title": "授权类型",
                  "type": "string"
                }
              },
              "required": false,
              "type": "object"
            },
            "required": false,
            "title": "请求体参数",
            "type": "array"
          }
        }
      ],
      "path": "/permissions/users/{uid}",
      "responses": {
        "200": {}
      },
      "summary": "调用GrantPermissions全量更新RAM用户集群授权信息。",
      "title": "全量更新RAM用户集群授权信息"
    },
    "InstallClusterAddons": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/InstallClusterAddons\n为集群安装组件。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "为集群安装组件。",
        "systemTags": {
          "operationType": "create"
        },
        "title": "安装集群组件"
      },
      "method": "post",
      "name": "InstallClusterAddons",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "ags-metrics-collector",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "组件详情。",
              "properties": {
                "config": {
                  "description": "组件自定义参数，使用JSON字符串编码。",
                  "example": "{\\\"IngressDashboardEnabled\\\":\\\"true\\\",\\\"sls_project_name\\\":\\\"your_sls_project_name\\\"}\"}",
                  "required": false,
                  "title": "组件配置信息。",
                  "type": "string"
                },
                "name": {
                  "description": "组件名称。",
                  "example": "ags-metrics-collector",
                  "required": true,
                  "title": "组件名称。",
                  "type": "string"
                },
                "version": {
                  "description": "组件版本。\n\n> 可以API接口[DescribeClusterAddonsVersion](https://help.aliyun.com/document_detail/197434.html)通过组件列表查询版本号。",
                  "example": "v1.0.0.2-cc3b2d6-aliyun",
                  "required": true,
                  "title": "组件版本号。",
                  "type": "string"
                }
              },
              "required": false,
              "type": "object"
            },
            "required": false,
            "title": "Addon列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/install",
      "responses": {
        "200": {}
      },
      "summary": "为集群安装组件。",
      "title": "安装集群组件"
    },
    "ListClusterChecks": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ListClusterChecks\n使用ListClusterChecks查询指定集群的全部集群检查。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"checks\\\": [\\n    {\\n      \\\"check_id\\\": \\\"1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto\\\",\\n      \\\"type\\\": \\\"ClusterUpgrade\\\",\\n      \\\"status\\\": \\\"Succeeded\\\",\\n      \\\"message\\\": \\\"task succeed\\\",\\n      \\\"created_at\\\": \\\"2023-10-16T08:31:20.292030178Z\\\",\\n      \\\"finished_at\\\": \\\"2023-10-16T08:35:20.292030178Z\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "使用ListClusterChecks查询指定集群的全部集群检查。",
        "systemTags": {
          "chargeType": "free",
          "operationType": "list",
          "riskType": "none"
        },
        "title": "查询集群检查列表"
      },
      "method": "get",
      "name": "ListClusterChecks",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "ce0da5a1d627e4e9e9f96cae8ad07****",
            "required": false,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "type",
          "required": false,
          "schema": {
            "description": "检查类型。",
            "example": "ClusterUpgrade",
            "required": false,
            "title": "检查类型。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/checks",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "checks": {
                "description": "检查列表。",
                "items": {
                  "description": "单次检查信息。",
                  "properties": {
                    "check_id": {
                      "description": "检查ID。",
                      "example": "1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto",
                      "title": "检查ID。",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "创建时间。",
                      "example": "2023-10-16T08:31:20.292030178Z",
                      "title": "创建时间。",
                      "type": "string"
                    },
                    "finished_at": {
                      "description": "完成时间。",
                      "example": "2023-10-16T08:35:20.292030178Z",
                      "title": "完成时间。",
                      "type": "string"
                    },
                    "message": {
                      "description": "检查状态信息。",
                      "example": "task succeed",
                      "title": "检查状态信息。",
                      "type": "string"
                    },
                    "status": {
                      "description": "检查状态。",
                      "example": "Succeeded",
                      "title": "检查状态。",
                      "type": "string"
                    },
                    "type": {
                      "description": "检查类型。",
                      "example": "ClusterUpgrade",
                      "title": "检查类型。",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "检查列表。",
                "type": "array"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "使用ListClusterChecks查询指定集群的全部集群检查。",
      "title": "查询集群检查列表"
    },
    "ListTagResources": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ListTagResources\n根据集群ID，查询指定集群资源的标签。",
      "ext": {
        "methods": [
          "get"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"next_token\\\": \\\"c374bf4864448****\\\",\\n  \\\"request_id\\\": \\\"E368C761-F8F6-4A36-9B58-BD53D5CD0CEB\\\",\\n  \\\"tag_resources\\\": {\\n    \\\"tag_resource\\\": [\\n      {\\n        \\\"tag_key\\\": \\\"ack.aliyun.com\\\",\\n        \\\"tag_value\\\": \\\"c71cf3d796c374bf48644482cb0c3****\\\",\\n        \\\"resource_id\\\": \\\"i-xxx\\\",\\n        \\\"resource_type\\\": \\\"CLUSTER\\\"\\n      }\\n    ]\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<next_token>c374bf4864448****</next_token>\\n<request_id>E368C761-F8F6-4A36-9B58-BD53D5CD0CEB</request_id>\\n<tag_resources>\\n    <tag_resource>\\n        <tag_key>ack.aliyun.com</tag_key>\\n        <tag_value>c71cf3d796c374bf48644482cb0c3****</tag_value>\\n        <resource_id>i-xxx</resource_id>\\n        <resource_type>CLUSTER</resource_type>\\n    </tag_resource>\\n</tag_resources>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，查询指定集群资源的标签。",
        "title": "查询资源标签列表"
      },
      "method": "get",
      "name": "ListTagResources",
      "parameters": [
        {
          "in": "query",
          "name": "resource_ids",
          "required": true,
          "schema": {
            "description": "要查询的集群ID列表。\n\n",
            "example": "[\"xxxxx\",\"xxxxxx\"]",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "集群ID。",
              "example": "c71cf3d796c374bf48644482cb0c3****",
              "required": false,
              "type": "string"
            },
            "required": true,
            "title": "集群ID列表。",
            "type": "array"
          }
        },
        {
          "in": "query",
          "name": "resource_type",
          "required": true,
          "schema": {
            "description": "资源类型，目前支持：`CLUSTER`。",
            "example": "CLUSTER",
            "required": true,
            "title": "资源类型，只支持Cluster",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "region_id",
          "required": true,
          "schema": {
            "description": "地域ID。",
            "example": "cn-beijing",
            "required": true,
            "title": "地域ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "tags",
          "required": false,
          "schema": {
            "description": "要查询的标签列表，限制最多包含20个子项。\n\n",
            "example": "[{\\\"key\\\":\\\"env\\\",\\\"value\\\",\\\"dev\\\"},{\\\"key\\\":\\\"dev\\\", \\\"value\\\":\\\"IT\\\"}]",
            "ext": {
              "style": "json"
            },
            "items": {
              "$ref": "#/definitions/tag",
              "description": "标签。",
              "example": "ack.aliyun.com",
              "isDefsType": true,
              "required": false,
              "typeName": "tag"
            },
            "required": false,
            "title": "按标签查找。",
            "type": "array"
          }
        },
        {
          "in": "query",
          "name": "next_token",
          "required": false,
          "schema": {
            "description": "下一个查询开始的令牌。",
            "example": "***",
            "required": false,
            "title": "下一次查询Token。",
            "type": "string"
          }
        }
      ],
      "path": "/tags",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "next_token": {
                "description": "下一个查询开始的令牌。\n\n",
                "example": "c374bf4864448****",
                "title": "下一个查询开始Token，为空说明没有下一个",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "E368C761-F8F6-4A36-9B58-BD53D5CD0CEB",
                "title": "请求ID。",
                "type": "string"
              },
              "tag_resources": {
                "description": "标签资源集。",
                "properties": {
                  "tag_resource": {
                    "description": "标签资源。\n\n\n\n\n\n",
                    "items": {
                      "description": "资源详情。",
                      "properties": {
                        "resource_id": {
                          "description": "资源ID。",
                          "example": "i-xxx",
                          "title": "资源ID。",
                          "type": "string"
                        },
                        "resource_type": {
                          "description": "资源类型。更多信息，请参见[标签](https://help.aliyun.com/document_detail/110425.html)。",
                          "example": "CLUSTER",
                          "title": "资源类型。",
                          "type": "string"
                        },
                        "tag_key": {
                          "description": "标签的名称。",
                          "example": "ack.aliyun.com",
                          "title": "标签key。",
                          "type": "string"
                        },
                        "tag_value": {
                          "description": "标签值。",
                          "example": "c71cf3d796c374bf48644482cb0c3****",
                          "title": "标签值。",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "资源标签。",
                    "type": "array"
                  }
                },
                "title": "资源标签列表。",
                "type": "object"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        }
      },
      "summary": "根据集群ID，查询指定集群资源的标签。",
      "title": "查询资源标签列表"
    },
    "MigrateCluster": {
      "consumes": [
        "application/json"
      ],
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/MigrateCluster\n调用MigrateCluster将集群从标准托管版迁移至Pro托管版。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"cluster_id\\\": \\\"c8155823d057948c69a****\\\",\\n  \\\"request_id\\\": \\\"20758A-585D-4A41-A9B2-28DA8F4F534F\\\",\\n  \\\"task_id\\\": \\\"T-62ccd14aacb8db06ca00****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<MigrateClusterResponse>\\n    <cluster_id>c8155823d057948c69a****</cluster_id>\\n    <request_id>20758A-585D-4A41-A9B2-28DA8F4F534F</request_id>\\n    <task_id>T-62ccd14aacb8db06ca00****</task_id>\\n</MigrateClusterResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用MigrateCluster将集群从标准托管版迁移至Pro托管版。",
        "title": "迁移集群"
      },
      "method": "post",
      "name": "MigrateCluster",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c21e0591548ba4c10bdb535d6572b****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数",
            "ext": {
              "style": "json"
            },
            "properties": {
              "oss_bucket_endpoint": {
                "description": "Bucket访问端点。",
                "example": "*******.oss-cn-hangzhou.aliyuncs.com",
                "required": false,
                "title": "bucket访问端点。",
                "type": "string"
              },
              "oss_bucket_name": {
                "description": "Bucket名称。",
                "example": "bucket-****",
                "required": false,
                "title": "bucket名称。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体。",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/migrate",
      "responses": {
        "200": {
          "schema": {
            "description": "响应体",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "c8155823d057948c69a****",
                "title": "集群ID。",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "20758A-585D-4A41-A9B2-28DA8F4F534F",
                "title": "请求ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-62ccd14aacb8db06ca00****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "响应体",
            "type": "object"
          }
        }
      },
      "summary": "调用MigrateCluster将集群从标准托管版迁移至Pro托管版。",
      "title": "迁移集群"
    },
    "ModifyCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyCluster\n根据集群ID修改该集群配置。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"cluster_id\\\": \\\"cb95aa626a47740afbf6aa09****\\\",\\n  \\\"request_id\\\": \\\"687C5BAA-D103-4993-884B-C35E4314****\\\",\\n  \\\"task_id\\\": \\\"T-5a54309c80282e39ea00****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<cluster_id>cb95aa626a47740afbf6aa09****</cluster_id>\\n<request_id>687C5BAA-D103-4993-884B-C35E4314****</request_id>\\n<task_id>T-5a54309c80282e39ea00****</task_id>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID修改该集群配置。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修改集群"
      },
      "method": "put",
      "name": "ModifyCluster",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。\n\n",
            "example": "cb95aa626a47740afbf6aa099b65****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "true",
            "ext": {
              "style": "json"
            },
            "properties": {
              "access_control_list": {
                "description": "注册集群 API Server SLB 访问控制列表。",
                "items": {
                  "description": "注册集群 API Server SLB 访问控制列表。\n\n**注意**：不允许填写0.0.0.0/0网段。",
                  "example": "192.168.1.0/24",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "type": "array"
              },
              "api_server_eip": {
                "description": "集群是否绑定EIP，用于公网访问API Server。取值：\n\n- `true`：集群绑定EIP。\n- `false`：集群不绑定EIP。",
                "example": "true",
                "required": false,
                "title": "集群是否绑定EIP，用于公网访问API Server。 true | false",
                "type": "boolean"
              },
              "api_server_eip_id": {
                "description": "集群API Server绑定的EIP实例ID，仅当`api_server_eip`取值为`true`时生效。",
                "example": "eip-wz9fnasl6dsfhmvci****",
                "required": false,
                "title": "集群API Server 公网连接端点。",
                "type": "string"
              },
              "cluster_name": {
                "description": "集群名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                "example": "cluster-new-name",
                "required": false,
                "title": "集群名称。",
                "type": "string"
              },
              "deletion_protection": {
                "description": "集群删除保护，防止通过控制台或API误删除集群。取值：\n\n- `true`：启用集群删除保护，将不能通过控制台或API删除集群。\n- `false`：不启用集群删除保护，则能通过控制台或API删除集群。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "集群是否开启删除保护。默认值false。",
                "type": "boolean"
              },
              "enable_rrsa": {
                "description": "启用或禁用RRSA功能。取值：\n\n- `true`：启用。\n- `false`：禁用。\n",
                "example": "true",
                "required": false,
                "title": "启用或禁用 RRSA 功能。true: 启用，false: 禁用",
                "type": "boolean"
              },
              "ingress_domain_rebinding": {
                "description": "重新绑定集群测试域名。取值：\n\n- `true`：重新绑定集群测试域名。\n- `false`：不重新绑定集群测试域名。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "域名是否重新绑定到Ingress的SLB地址。",
                "type": "boolean"
              },
              "ingress_loadbalancer_id": {
                "description": "被修改集群的SLB实例ID。",
                "example": "lb-wz97kes8tnndkpodw****",
                "required": false,
                "title": "集群的Ingress SLB的ID。",
                "type": "string"
              },
              "instance_deletion_protection": {
                "description": "实例删除保护，防止通过控制台或API误删除释放节点。取值：\n\n- `true`: 不能通过控制台或API误删除集群。\n- `false`：能通过控制台或API误删除集群。\n\n默认值：`false`。",
                "example": "true",
                "required": false,
                "title": "实例删除保护，防止通过控制台或API误删除释放节点。",
                "type": "boolean"
              },
              "maintenance_window": {
                "$ref": "#/definitions/maintenance_window",
                "description": "集群维护窗口，该功能只在Pro托管版集群中生效。",
                "isDefsType": true,
                "required": false,
                "typeName": "maintenance_window"
              },
              "resource_group_id": {
                "description": "集群资源组ID。",
                "example": "rg-acfmyvw3wjm****",
                "required": false,
                "title": "集群资源组ID。",
                "type": "string"
              },
              "system_events_logging": {
                "description": "系统事件存储配置。",
                "properties": {
                  "enabled": {
                    "description": "是否开启系统事件存储。",
                    "example": "true",
                    "required": false,
                    "title": "是否开启系统事件存储。",
                    "type": "boolean"
                  },
                  "logging_project": {
                    "description": "系统事件存储的LogProject名称。",
                    "example": "k8s-log-cb95aa626a47740afbf6aa099b65****",
                    "required": false,
                    "title": "系统事件存储的LogProject名称。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "系统事件存储配置。",
                "type": "object"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "cluster_id": {
                "description": "集群ID。",
                "example": "cb95aa626a47740afbf6aa09****",
                "title": "集群ID。",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "687C5BAA-D103-4993-884B-C35E4314****",
                "title": "请求ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5a54309c80282e39ea00****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "返回数据体。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "根据集群ID修改该集群配置。",
      "title": "修改集群"
    },
    "ModifyClusterAddon": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyClusterAddon\n使用该API可修改普通集群组件的配置以及ACK Pro集群的管控面参数配置：\n- 普通组件可配置参数列表可通过`DescribeClusterAddonMetadata ` API查询，详情参见[查询集群组件版本元数据](https://help.aliyun.com/document_detail/415029.html)。\n- ACK Pro集群管控面组件可配置的参数列表，请参见[自定义ACK Pro集群的管控面参数](https://help.aliyun.com/document_detail/199588.html)。\n\n修改配置可能会导致组件重新部署和启动，请评估影响后再进行操作。\n\n\n",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "requestParamsDescription": "`config`参数值为JSON编码后的组件自定义参数配置。",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用ModifyClusterAddon修改已安装的集群组件配置。修改配置可能会导致组件重新部署和启动，请评估影响后再进行操作。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修改集群组件配置"
      },
      "method": "post",
      "name": "ModifyClusterAddon",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c71d616e629ff40d5b42d7bb87770****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "component_id",
          "required": true,
          "schema": {
            "description": "组件ID。",
            "example": "coredns",
            "required": true,
            "title": "组件ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "组件配置。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "config": {
                "description": "自定义参数设置。",
                "example": "{\"CpuRequest\":\"800m\"}",
                "required": false,
                "title": "自定义参数设置",
                "type": "string"
              }
            },
            "required": false,
            "title": "组件配置",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/components/{component_id}/config",
      "responses": {
        "200": {
          "headers": {}
        }
      },
      "summary": "调用ModifyClusterAddon修改已安装的集群组件配置。修改配置可能会导致组件重新部署和启动，请评估影响后再进行操作。",
      "title": "修改集群组件配置"
    },
    "ModifyClusterNodePool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyClusterNodePool\n调用ModifyClusterNodePool更新节点配置。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"task_id\\\": \\\"T-5fd211e924e1d00787000293\\\",\\n  \\\"nodepool_id\\\": \\\"np737c3ac1ac684703b9e10673aa2c****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ModifyClusterNodePoolResponse>\\n    <task_id>T-5fd211e924e1d00787000293</task_id>\\n    <nodepool_id>np737c3ac1ac684703b9e10673aa2c****</nodepool_id>\\n</ModifyClusterNodePoolResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用ModifyClusterNodePool更新节点配置。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修改节点池配置"
      },
      "method": "put",
      "name": "ModifyClusterNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "p31da1b38983f4511b490fc62108a****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "auto_scaling": {
                "description": "自动伸缩配置。",
                "properties": {
                  "eip_bandwidth": {
                    "description": "EIP带宽峰值。",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "带宽峰值。",
                    "type": "integer"
                  },
                  "eip_internet_charge_type": {
                    "description": "EIP计费类型，取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。\n\n默认值：`PayByBandwidth`。",
                    "example": "PayByBandwidth",
                    "required": false,
                    "title": "EIP计费类型。",
                    "type": "string"
                  },
                  "enable": {
                    "description": "是否启用自动伸缩，取值：\n\n- `true`：开启节点池自动伸缩功能。\n- `false`：不开启自动伸缩，当取值为false时，`auto_scaling`内的其他配置参数将不生效。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否开启自动伸缩。",
                    "type": "boolean"
                  },
                  "is_bond_eip": {
                    "description": "是否绑定EIP，取值：\n\n- `true`：绑定EIP。\n- `false`：不绑定EIP。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否绑定EIP。",
                    "type": "boolean"
                  },
                  "max_instances": {
                    "description": "最大实例数。",
                    "example": "10",
                    "format": "int64",
                    "required": false,
                    "title": "最大实例数。",
                    "type": "integer"
                  },
                  "min_instances": {
                    "description": "最小实例数。",
                    "example": "2",
                    "format": "int64",
                    "required": false,
                    "title": "最小实例数。",
                    "type": "integer"
                  },
                  "type": {
                    "description": "自动伸缩类型，按照自动伸缩实例类型划分。取值：\n\n- `cpu`：普通实例型。\n- `gpu`：GPU实例型。\n- `gpushare`：GPU共享型。\n- `spot`：抢占式实例型。\n\n默认值：`cpu`。",
                    "example": "cpu",
                    "required": false,
                    "title": "自动伸缩节点类型。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "自动伸缩节点池配置。",
                "type": "object"
              },
              "kubernetes_config": {
                "description": "集群相关配置。",
                "properties": {
                  "cms_enabled": {
                    "description": "是否在ECS节点上安装云监控，安装后可以在云监控控制台查看所创建ECS实例的监控信息，推荐开启。取值：\n\n- `true`：在ECS节点上安装云监控。\n- `false`：不在ECS节点上安装云监控。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否开启云监控。",
                    "type": "boolean"
                  },
                  "cpu_policy": {
                    "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。\n\n默认值：`none`。",
                    "example": "none",
                    "required": false,
                    "title": "CPU管理策略。",
                    "type": "string"
                  },
                  "labels": {
                    "description": "节点标签，为Kubernetes集群节点添加标签。标签定义规则：\n\n- 标签由区分大小写的键值对组成，您最多可以设置20个标签。\n- 标签键不可以重复，最长为64个字符；标签值可以为空，最长为128个字符。标签键和标签值都不能以`aliyun`、`acs:`、`https://`或`http://`开头。更多信息，请参见[Labels and Selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)。",
                    "items": {
                      "$ref": "#/definitions/tag",
                      "description": "节点标签。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "tag"
                    },
                    "required": false,
                    "title": "节点标签。",
                    "type": "array"
                  },
                  "runtime": {
                    "description": "容器运行时名称。",
                    "example": "docker",
                    "required": false,
                    "title": "容器运行时。",
                    "type": "string"
                  },
                  "runtime_version": {
                    "description": "容器运行时版本。",
                    "example": "19.03.5",
                    "required": false,
                    "title": "容器运行时版本。",
                    "type": "string"
                  },
                  "taints": {
                    "description": "节点污点配置。",
                    "items": {
                      "$ref": "#/definitions/taint",
                      "description": "节点污点配置。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "taint"
                    },
                    "required": false,
                    "title": "污点配置。",
                    "type": "array"
                  },
                  "user_data": {
                    "description": "节点池自定义数据。更多信息，请参见[生成实例自定义数据](https://help.aliyun.com/document_detail/49121.html)。",
                    "example": "IyEvdXNyL2Jpbi9iYXNoCmVjaG8gIkhlbGxvIEFDSyEi",
                    "required": false,
                    "title": "实例自定义数据。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "集群配置。",
                "type": "object"
              },
              "management": {
                "description": "托管节点池配置。",
                "properties": {
                  "auto_repair": {
                    "description": "是否自动修复，仅当`enable=true`时生效。取值：\n\n- `true`：自动修复。\n- `false`：不自动修复。\n\n默认值：`true`。",
                    "example": "true",
                    "required": false,
                    "title": "是否开启自动修复。",
                    "type": "boolean"
                  },
                  "auto_repair_policy": {
                    "description": "自动修复节点策略。",
                    "properties": {
                      "restart_node": {
                        "description": "是否允许重启节点，取值：\n\n- `true`：允许重启节点。\n- `false`：不允许重启节点。",
                        "example": "true",
                        "required": false,
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      }
                    },
                    "required": false,
                    "title": "自动修复节点策略。",
                    "type": "object"
                  },
                  "auto_upgrade": {
                    "description": "是否启用自动升级，取值：\n\n- `true`：启用自动升级。\n- `false`：不启用自动升级。\n",
                    "example": "true",
                    "required": false,
                    "title": "是否自动升级。",
                    "type": "boolean"
                  },
                  "auto_upgrade_policy": {
                    "description": "自动升级策略。",
                    "properties": {
                      "auto_upgrade_kubelet": {
                        "description": "是否允许自动升级kubelet，取值：\n\n- `true`：允许自动升级kubelet。\n- `false`：不允许自动升级kubelet。",
                        "example": "true",
                        "required": false,
                        "title": "是否允许自动升级kubelet。",
                        "type": "boolean"
                      }
                    },
                    "required": false,
                    "title": "自动升级策略。",
                    "type": "object"
                  },
                  "auto_vul_fix": {
                    "description": "是否自动修复CVE，取值：\n\n- `true`：允许自动修复CVE。\n- `false`：不允许自动修复CVE。",
                    "example": "true",
                    "required": false,
                    "title": "是否自动修复CVE。",
                    "type": "boolean"
                  },
                  "auto_vul_fix_policy": {
                    "description": "自动修复CVE策略。",
                    "properties": {
                      "restart_node": {
                        "description": "是否允许重启节点，取值：\n\n- `true`：允许重启节点。\n- `false`：不允许重启节点。",
                        "example": "true",
                        "required": false,
                        "title": "是否允许重启节点。",
                        "type": "boolean"
                      },
                      "vul_level": {
                        "description": "允许自动修复的漏洞级别，以逗号分隔。",
                        "example": "asap,nntf",
                        "required": false,
                        "title": "允许自动修复的漏洞级别，以逗号分隔。",
                        "type": "string"
                      }
                    },
                    "required": false,
                    "title": "自动修复CVE策略。",
                    "type": "object"
                  },
                  "enable": {
                    "description": "是否开启托管节点池，取值：\n\n- `true`：开启托管节点池。\n- `false`：不开启托管节点池，只有当`enable=true`时，其他相关配置才生效。\n\n默认值：`false`。",
                    "example": "true",
                    "required": false,
                    "title": "是否启用托管节点池。",
                    "type": "boolean"
                  },
                  "upgrade_config": {
                    "description": "自动升级配置，仅当`enable=true`时生效。",
                    "properties": {
                      "auto_upgrade": {
                        "description": "是否启用自动升级：\n\n- true：启用。\n- false：不启用。\n\n默认值：`true`。",
                        "example": "true",
                        "required": false,
                        "title": "是否启用自动升级，自修复。",
                        "type": "boolean"
                      },
                      "max_unavailable": {
                        "description": "最大不可用节点数量。\n\n取值范围：\\[1,1000\\]\n\n默认值：1。",
                        "example": "1",
                        "format": "int64",
                        "required": false,
                        "title": "最大不可用节点数量。",
                        "type": "integer"
                      },
                      "surge": {
                        "description": "额外节点数量。升级的时候节点会不可用，您可以创建额外节点补偿集群的负载。\n\n> 建议创建的额外节点不超过当前的节点数。",
                        "example": "5",
                        "format": "int64",
                        "required": false,
                        "title": "额外节点数量。",
                        "type": "integer"
                      },
                      "surge_percentage": {
                        "description": "额外节点比例，和`surge`二选一。",
                        "example": "0",
                        "format": "int64",
                        "required": false,
                        "title": "额外节点比例， 和surge 二选一。",
                        "type": "integer"
                      }
                    },
                    "required": false,
                    "title": "自动升级配置。",
                    "type": "object"
                  }
                },
                "required": false,
                "title": "托管版节点池配置。",
                "type": "object"
              },
              "nodepool_info": {
                "description": "节点池配置。",
                "properties": {
                  "name": {
                    "description": "节点池名称。\n\n命名规则：由数字、汉字、英文字符或短划线（-）组成，长度范围1~63个字符，且不能以短划线（-）开头。",
                    "example": "default-nodepool",
                    "required": false,
                    "title": "节点池名称。",
                    "type": "string"
                  },
                  "resource_group_id": {
                    "description": "资源组ID。",
                    "example": "rg-acfmyvw3wjm****",
                    "required": false,
                    "title": "资源组ID。",
                    "type": "string"
                  }
                },
                "required": false,
                "title": "节点池配置。",
                "type": "object"
              },
              "scaling_group": {
                "description": "扩容组配置。",
                "properties": {
                  "auto_renew": {
                    "description": "节点是否开启自动续费，当`instance_charge_type`取值为`PrePaid`时才生效。取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n默认值：`true`。",
                    "example": "true",
                    "required": false,
                    "title": "节点池节点是启用自动续费",
                    "type": "boolean"
                  },
                  "auto_renew_period": {
                    "description": "节点自动续费周期。当`instance_charge_type`取值为`PrePaid`时才生效，且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2 , 3, 6, 12}。",
                    "example": "1",
                    "format": "int64",
                    "required": false,
                    "title": "节点池节点自动续费周期",
                    "type": "integer"
                  },
                  "compensate_with_on_demand": {
                    "description": "当`multi_az_policy`取值为`COST_OPTIMIZED`时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值：\n\n- `true`：允许自动尝试创建按量实例满足ECS实例数量要求。\n- `false`：不允许自动尝试创建按量实例满足ECS实例数量要求。",
                    "example": "true",
                    "required": false,
                    "title": "当MultiAZPolicy取值为COST_OPTIMIZED时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值范围：true：允许。false：不允许。默认值：true",
                    "type": "boolean"
                  },
                  "data_disks": {
                    "description": "节点数据盘配置，取值范围\\[0,10\\]。最多支持添加10块数据盘。",
                    "items": {
                      "$ref": "#/definitions/data_disk",
                      "description": "节点数据盘配置。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "data_disk"
                    },
                    "required": false,
                    "title": "数据盘配置。",
                    "type": "array"
                  },
                  "desired_size": {
                    "description": "节点池期望节点数。",
                    "example": "2",
                    "format": "int64",
                    "required": false,
                    "title": "节点池期望节点数",
                    "type": "integer"
                  },
                  "image_id": {
                    "description": "自定义镜像ID。可通过`DescribeKubernetesVersionMetadata`查询系统支持的镜像，默认使用系统最新镜像。",
                    "example": "aliyun_2_1903_x64_20G_alibase_20200904.vhd",
                    "required": false,
                    "title": "自定义镜像",
                    "type": "string"
                  },
                  "instance_charge_type": {
                    "description": "节点池节点付费类型，取值：\n\n- `PrePaid`：预付费\n- `PostPaid`：按量付费\n\n默认值：`PostPaid`。",
                    "example": "PostPaid",
                    "required": false,
                    "title": "节点付费类型。",
                    "type": "string"
                  },
                  "instance_types": {
                    "description": "节点实例规格列表，您可以选择多个实例规格作为备选，每个节点创建时，将从第一个规格开始尝试购买，直到创建成功。最终购买的实例规格可能随库存变化而不同。",
                    "items": {
                      "description": "实例规格。更多信息，请参见[实例规格族](https://help.aliyun.com/document_detail/25378.html)。",
                      "example": "ecs.c6.large",
                      "required": false,
                      "type": "string"
                    },
                    "required": false,
                    "title": "节点实例规格。",
                    "type": "array"
                  },
                  "internet_charge_type": {
                    "description": "公网IP收费类型。取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。",
                    "example": "PayByBandwidth",
                    "required": false,
                    "title": "节点公网IP网络计费类型",
                    "type": "string"
                  },
                  "internet_max_bandwidth_out": {
                    "description": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：\\[1,100\\]。",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
                    "type": "integer"
                  },
                  "key_pair": {
                    "description": "密钥对名称，和`login_password`二选一。当节点池为托管版节点池时，只支持`key_pair`。",
                    "example": "pro-nodepool",
                    "required": false,
                    "title": "密钥对名称，和login_password二选一。",
                    "type": "string"
                  },
                  "login_password": {
                    "description": "SSH登录密码，和`key_pair`二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。",
                    "example": "Hello1234",
                    "required": false,
                    "title": "SSH登录密码，和key_pari二选一。",
                    "type": "string"
                  },
                  "multi_az_policy": {
                    "description": "多可用区伸缩组ECS实例扩缩容策略。取值：\n\n- `PRIORITY`：根据您定义的虚拟交换机（VSwitchIds.N）扩缩容。当优先级较高的虚拟交换机所在可用区无法创建ECS实例时，自动使用下一优先级的虚拟交换机创建ECS实例。\n\n- `COST_OPTIMIZED`：按vCPU单价从低到高进行尝试创建。当伸缩配置设置了抢占式计费方式的多实例规格时，优先创建对应抢占式实例。您可以继续通过`CompensateWithOnDemand`参数指定当抢占式实例由于库存等原因无法创建时，是否自动尝试以按量付费的方式创建。\n\n  > `COST_OPTIMIZED`仅在伸缩配置设置了多实例规格或者选用了抢占式实例的情况下生效。\n\n- `BALANCE`：在伸缩组指定的多可用区之间均匀分配ECS实例。如果由于库存不足等原因可用区之间变得不平衡，您可以通过API `RebalanceInstances`平衡资源。更多信息，请参见[RebalanceInstances](https://help.aliyun.com/document_detail/71516.html)。\n\n默认值：`PRIORITY`。",
                    "example": "BALANCE",
                    "required": false,
                    "title": "多可用区伸缩组ECS实例扩缩容策略",
                    "type": "string"
                  },
                  "on_demand_base_capacity": {
                    "description": "伸缩组所需要按量实例个数的最小值，取值范围：\\[0,1000\\]。当按量实例个数少于该值时，将优先创建按量实例。",
                    "example": "0",
                    "format": "int64",
                    "required": false,
                    "title": "伸缩组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例。",
                    "type": "integer"
                  },
                  "on_demand_percentage_above_base_capacity": {
                    "description": "伸缩组满足最小按量实例数（`on_demand_base_capacity`）要求后，超出的实例中按量实例应占的比例。取值范围：\\[0,100\\]。",
                    "example": "20",
                    "format": "int64",
                    "required": false,
                    "title": "伸缩组满足最小按量实例数（OnDemandBaseCapacity）要求后，超出的实例中按量实例应占的比例，取值范围：0～100。",
                    "type": "integer"
                  },
                  "period": {
                    "description": "节点包年包月时长，当`instance_charge_type`取值为`PrePaid`时才生效且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2 , 3, 6, 12, 24, 36, 48, 60}。",
                    "example": "1",
                    "format": "int64",
                    "required": false,
                    "title": "包年包月时长",
                    "type": "integer"
                  },
                  "period_unit": {
                    "description": "节点付费周期，当`instance_charge_type`取值为`PrePaid`时时候需要指定周期。\n\n目前只支持以月为计时单位。\n\n默认值：`Month`。",
                    "example": "Month",
                    "required": false,
                    "title": "付费周期",
                    "type": "string"
                  },
                  "platform": {
                    "description": "操作系统平台。取值：\n\n- `AliyunLinux`\n- `CentOS`\n- `Windows`\n- `WindowsCore`",
                    "example": "AliyunLinux",
                    "required": false,
                    "title": "操作系统发行版。",
                    "type": "string"
                  },
                  "private_pool_options": {
                    "description": "私有节点池配置。",
                    "properties": {
                      "id": {
                        "description": "私有节点池ID。",
                        "example": "eap-bp67acfmxazb4****",
                        "required": false,
                        "type": "string"
                      },
                      "match_criteria": {
                        "description": "私有节点池类型，实例启动的私有池容量选项。弹性保障服务或容量预定服务在生效后会生成私有池容量，供实例启动时选择。取值：\n- `Open`：开放模式。将自动匹配开放类型的私有池容量。如果没有符合条件的私有池容量，则使用公共池资源启动。\n- `Target`：指定模式。使用指定的私有池容量启动实例，如果该私有池容量不可用，则实例会启动失败。\n- `None`：不使用模式。实例启动将不使用私有池容量。",
                        "example": "Open",
                        "required": false,
                        "type": "string"
                      }
                    },
                    "required": false,
                    "type": "object"
                  },
                  "rds_instances": {
                    "description": "RDS实例列表。",
                    "items": {
                      "description": "RDS实例ID。如果指定了RDS实例列表，集群节点ECS会自动加入RDS访问白名单。",
                      "example": "rds-xxx",
                      "required": false,
                      "type": "string"
                    },
                    "required": false,
                    "title": "RDS实例列表。",
                    "type": "array"
                  },
                  "scaling_policy": {
                    "description": "伸缩组模式，取值：\n\n- `release`：标准模式，根据申请资源值的使用量，通过创建、释放ECS的方式进行伸缩。\n- `recycle`：极速模式，通过创建、停机、启动的方式进行伸缩，提高再次伸缩的速度（停机时计算资源不收费，只收取存储费用，本地盘机型除外）。",
                    "example": "release",
                    "required": false,
                    "title": "扩容策略。",
                    "type": "string"
                  },
                  "spot_instance_pools": {
                    "description": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：\\[1,10\\]。",
                    "example": "5",
                    "format": "int64",
                    "required": false,
                    "title": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：1~10。",
                    "type": "integer"
                  },
                  "spot_instance_remedy": {
                    "description": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值：\n\n- `true`：开启补齐抢占式实例。\n- `false`：不开启补齐抢占式实例。\n",
                    "example": "false",
                    "required": false,
                    "title": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。",
                    "type": "boolean"
                  },
                  "spot_price_limit": {
                    "description": "抢占实例市场价格区间配置。",
                    "items": {
                      "description": "抢占实例市场价格区间配置。",
                      "properties": {
                        "instance_type": {
                          "description": "抢占式实例规格。",
                          "example": "ecs.c6.large",
                          "required": false,
                          "title": "抢占式实例规格",
                          "type": "string"
                        },
                        "price_limit": {
                          "description": "单台实例上限价格。\n\n单位：元/小时。\n",
                          "example": "0.39",
                          "required": false,
                          "title": "单台实例上限价格，单位：元/小时。",
                          "type": "string"
                        }
                      },
                      "required": false,
                      "type": "object"
                    },
                    "required": false,
                    "title": "抢占实例价格上限配置",
                    "type": "array"
                  },
                  "spot_strategy": {
                    "description": "抢占式实例类型，取值：\n\n- `NoSpot`：非抢占式实例。\n- `SpotWithPriceLimit`：设置抢占实例价格上限。\n- `SpotAsPriceGo`：系统自动出价，跟随当前市场实际价格。\n\n更多信息，请参见[抢占式实例](https://help.aliyun.com/document_detail/157759.html)。",
                    "example": "SpotWithPriceLimit",
                    "required": false,
                    "title": "抢占式实例类型",
                    "type": "string"
                  },
                  "system_disk_category": {
                    "description": "节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n\n默认值：`cloud_ssd`。",
                    "example": "cloud_efficiency",
                    "required": false,
                    "title": "节点系统盘类型。",
                    "type": "string"
                  },
                  "system_disk_performance_level": {
                    "description": "节点系统盘磁盘性能等级， 仅对ESSD磁盘生效。磁盘性能等级和磁盘大小有关。更多信息，请参见[ESSD云盘](https://help.aliyun.com/document_detail/122389.html)",
                    "example": "PL1",
                    "required": false,
                    "title": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
                    "type": "string"
                  },
                  "system_disk_size": {
                    "description": "节点系统盘大小，单位为GiB。\n\n取值范围：\\[20,500\\]。\n\n该参数的取值必须大于或者等于max{20, ImageSize}。\n\n默认值：max{40, 参数ImageId对应的镜像大小}。",
                    "example": "120",
                    "format": "int64",
                    "required": false,
                    "title": "节点系统盘大小。",
                    "type": "integer"
                  },
                  "tags": {
                    "description": "仅为ECS实例添加标签。\n\n标签键不可以重复，最大长度为128个字符；标签键和标签值都不能以“aliyun”、“acs:”开头，或包含“https://”、“http://”。",
                    "items": {
                      "$ref": "#/definitions/tag",
                      "description": "ECS实例标签。",
                      "isDefsType": true,
                      "required": false,
                      "typeName": "tag"
                    },
                    "required": false,
                    "title": "ECS标签。",
                    "type": "array"
                  },
                  "vswitch_ids": {
                    "description": "虚拟交换机ID列表，取值范围\\[1,20\\]。\n\n> 为保证高可用性，建议选择不同可用区的虚拟交换机。",
                    "items": {
                      "description": "虚拟交换机ID。",
                      "example": "vsw-wz9uwxhawmtzg7u9h****",
                      "required": false,
                      "type": "string"
                    },
                    "required": false,
                    "title": "节点使用的虚拟交换机ID。",
                    "type": "array"
                  }
                },
                "required": false,
                "title": "扩容组配置。",
                "type": "object"
              },
              "tee_config": {
                "description": "加密计算集群配置。",
                "properties": {
                  "tee_enable": {
                    "description": "是否开启加密计算集群，取值：\n\n- `true`：开启。\n- `false`：不开启。\n\n默认值：`false`。",
                    "example": "false",
                    "required": false,
                    "title": "是否为加密计算节点池。",
                    "type": "boolean"
                  }
                },
                "required": false,
                "title": "加密计算配置。",
                "type": "object"
              },
              "update_nodes": {
                "description": "同步更新节点标签及污点。",
                "example": "true",
                "required": false,
                "title": "是否同步更新节点标签及污点。",
                "type": "boolean"
              }
            },
            "required": false,
            "title": "请求体参数。",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体数据。",
            "properties": {
              "nodepool_id": {
                "description": "节点池ID。",
                "example": "np737c3ac1ac684703b9e10673aa2c****",
                "title": "节点池ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5fd211e924e1d00787000293",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "返回数据。",
            "type": "object"
          }
        },
        "5XX": {}
      },
      "summary": "调用ModifyClusterNodePool更新节点配置。",
      "title": "修改节点池配置"
    },
    "ModifyClusterTags": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyClusterTags\n根据集群ID修改该集群的集群标签。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID修改该集群的集群标签。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修改集群标签"
      },
      "method": "post",
      "name": "ModifyClusterTags",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "title": "汲取ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "修改数据。",
            "items": {
              "$ref": "#/definitions/tag",
              "description": "标签集。",
              "isDefsType": true,
              "required": false,
              "typeName": "tag"
            },
            "required": false,
            "title": "集群标签列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/tags",
      "responses": {
        "200": {}
      },
      "summary": "根据集群ID修改该集群的集群标签。",
      "title": "修改集群标签"
    },
    "ModifyNodePoolNodeConfig": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyNodePoolNodeConfig\n> ACK支持修改节点池内节点的kubelet配置。修改完成后，节点池的节点会自动生效，节点池新增节点也将使用新的配置。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"request_id\\\": \\\"D7631D83-6E98-1949-B665-766A62****\\\",\\n  \\\"task_id\\\": \\\"T-5fd211e924e1d00787****\\\",\\n  \\\"nodepool_id\\\": \\\"np737c3ac1ac684703b9e10673aa2c****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ModifyNodePoolNodeConfigResponse>\\n    <request_id>D7631D83-6E98-1949-B665-766A62****</request_id>\\n    <task_id>T-5fd211e924e1d00787****</task_id>\\n    <nodepool_id>np737c3ac1ac684703b9e10673aa2c****</nodepool_id>\\n</ModifyNodePoolNodeConfigResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "修改节点池节点配置信息。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修改节点池节点配置"
      },
      "method": "put",
      "name": "ModifyNodePoolNodeConfig",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np8d8c9c2cd0f64e89884f82a5fbcd****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "kubelet_config": {
                "$ref": "#/definitions/kubelet_config",
                "description": "kubelet参数配置。",
                "isDefsType": true,
                "required": false,
                "typeName": "kubelet_config"
              },
              "rolling_policy": {
                "description": "轮转配置。",
                "properties": {
                  "max_parallelism": {
                    "description": "最大不可用节点数。",
                    "example": "3",
                    "format": "int64",
                    "required": false,
                    "title": "最大不可用节点数。",
                    "type": "integer"
                  }
                },
                "required": false,
                "title": "轮转配置。",
                "type": "object"
              }
            },
            "required": false,
            "title": "请求体。",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}/node_config",
      "responses": {
        "200": {
          "schema": {
            "description": "响应体。",
            "properties": {
              "nodepool_id": {
                "description": "节点池ID。",
                "example": "np737c3ac1ac684703b9e10673aa2c****",
                "title": "节点池ID。",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "D7631D83-6E98-1949-B665-766A62****",
                "title": "请求ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5fd211e924e1d00787****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "响应体。",
            "type": "object"
          }
        }
      },
      "summary": "修改节点池节点配置信息。",
      "title": "修改节点池节点配置"
    },
    "ModifyPolicyInstance": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ModifyPolicyInstance\n调用ModifyPolicyInstance在指定集群中更新策略规则实例。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"instances\\\": [\\n    \\\"[ \\\\\\\"allowed-repos-kqxnc\\\\\\\" ]\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ModifyPolicyInstanceResponse>\\n    <instances>[ \\\"allowed-repos-kqxnc\\\" ]</instances>\\n</ModifyPolicyInstanceResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用ModifyPolicyInstance在指定集群中更新策略规则实例。",
        "title": "在指定集群中更新策略规则实例"
      },
      "method": "put",
      "name": "ModifyPolicyInstance",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "目标集群ID",
            "example": "c8155823d057948c69a****",
            "required": true,
            "title": "目标集群id",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "policy_name",
          "required": true,
          "schema": {
            "description": "策略治理规则名称",
            "example": "ACKAllowedRepos",
            "required": true,
            "title": "策略治理规则名称",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求参数。",
            "properties": {
              "action": {
                "description": "规则治理动作，取值：\n\n- `deny`：拦截违规部署\n- `warn`：告警",
                "example": "deny",
                "required": false,
                "title": "规则治理动作",
                "type": "string"
              },
              "instance_name": {
                "description": "策略规则实例ID",
                "example": "allowed-repos-cbhhb",
                "required": false,
                "title": "策略规则实例id",
                "type": "string"
              },
              "namespaces": {
                "description": "限制策略实施的命名空间，为空时表示所有命名空间",
                "items": {
                  "description": "策略实例实施范围：\n\n默认\"\"代表集群所有命名空间。\n\n",
                  "example": "[\"test3\",\"test4\"]",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "限制策略实施的命名空间，为空时表示所有命名空间",
                "type": "array"
              },
              "parameters": {
                "description": "当前规则实例的配置参数。更多参数配置规则，请参见[容器安全策略规则库说明](https://help.aliyun.com/document_detail/359819.html)。\n\n",
                "example": "\"restrictedNamespaces\": [ \"test\" ]",
                "required": false,
                "title": "当前规则实例的配置参数",
                "type": "object"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/policies/{policy_name}",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "instances": {
                "description": "已更新的实例列表",
                "items": {
                  "description": "已更新的实例列表",
                  "example": "[ \"allowed-repos-kqxnc\" ]",
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "调用ModifyPolicyInstance在指定集群中更新策略规则实例。",
      "title": "在指定集群中更新策略规则实例"
    },
    "OpenAckService": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/OpenAckService\n- 阿里云账号（主账号）可以开通容器服务ACK。\n- RAM用户（子账号）有AdministratorAccess权限的子账号可以开通服务。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"request_id\\\": \\\"20758A-585D-4A41-A9B2-28DA8F4F534F\\\",\\n  \\\"order_id\\\": \\\"2067*******0374\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<request_id>20758A-585D-4A41-A9B2-28DA8F4F534F</request_id>\\n<order_id>2067*******0374</order_id>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用OpenAckService接口开通容器服务ACK。",
        "title": "开通容器服务ACK"
      },
      "method": "post",
      "name": "OpenAckService",
      "parameters": [
        {
          "in": "query",
          "name": "type",
          "required": false,
          "schema": {
            "description": "要开通的服务类型。取值：\n\n- `propayasgo`：容器服务ACK Pro托管版。\n- `edgepayasgo`：边缘容器服务。\n- `gspayasgo`：基因计算服务。",
            "example": "propayasgo",
            "required": false,
            "title": "要开通的服务类型",
            "type": "string"
          }
        }
      ],
      "path": "/service/open",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数",
            "properties": {
              "order_id": {
                "description": "开通服务的订单号。",
                "example": "2067*******0374",
                "title": "开通服务的订单号。",
                "type": "string"
              },
              "request_id": {
                "description": "请求ID。",
                "example": "20758A-585D-4A41-A9B2-28DA8F4F534F",
                "title": "请求ID",
                "type": "string"
              }
            },
            "title": "返回体参数",
            "type": "object"
          }
        }
      },
      "summary": "调用OpenAckService接口开通容器服务ACK。",
      "title": "开通容器服务ACK"
    },
    "PauseClusterUpgrade": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/PauseClusterUpgrade\n暂停用户集群升级。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "暂停用户集群升级。",
        "title": "暂停集群升级"
      },
      "method": "post",
      "name": "PauseClusterUpgrade",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}/upgrade/pause",
      "responses": {
        "200": {}
      },
      "summary": "暂停用户集群升级。",
      "title": "暂停集群升级"
    },
    "PauseComponentUpgrade": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/PauseComponentUpgrade\n调用PauseComponentUpgrade暂停组件升级。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用PauseComponentUpgrade暂停组件升级。",
        "title": "暂停组件升级"
      },
      "method": "post",
      "name": "PauseComponentUpgrade",
      "parameters": [
        {
          "in": "path",
          "name": "clusterid",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "componentid",
          "required": true,
          "schema": {
            "description": "组件ID。",
            "example": "metric-server",
            "required": true,
            "title": "组件ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{clusterid}/components/{componentid}/pause",
      "responses": {
        "200": {},
        "5XX": {}
      },
      "summary": "调用PauseComponentUpgrade暂停组件升级。",
      "title": "暂停组件升级"
    },
    "PauseTask": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/PauseTask\n暂停执行中的集群任务。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "暂停执行中的集群任务。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "暂停任务"
      },
      "method": "post",
      "name": "PauseTask",
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "description": "任务ID。",
            "example": "T-62a944794ee141074400****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/tasks/{task_id}/pause",
      "responses": {
        "202": {}
      },
      "summary": "暂停执行中的集群任务。",
      "title": "暂停任务"
    },
    "RemoveNodePoolNodes": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/RemoveNodePoolNodes\n> - 移除节点会涉及Pod迁移，可能会影响业务，请在业务低峰期操作。- 操作过程中可能存在非预期风险，请提前做好相关的数据备份。- 操作过程中，后台会把当前节点设置为不可调度状态。- 移除节点仅移除Worker节点，不会移除Master节点。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"request_id\\\": \\\"A9891419-D125-4D89-AFCA-68846675E2F7\\\",\\n  \\\"task_id\\\": \\\"T-62a944794ee141074400****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<RemoveNodePoolNodesResponse>\\n    <request_id>A9891419-D125-4D89-AFCA-68846675E2F7</request_id>\\n    <task_id>T-62a944794ee141074400****</task_id>\\n</RemoveNodePoolNodesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "移除节点池内的节点。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "移除节点池节点"
      },
      "method": "delete",
      "name": "RemoveNodePoolNodes",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np97de2cfb1ba042398dd8f5504c94****",
            "required": true,
            "title": "节点池ID。",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "release_node",
          "required": false,
          "schema": {
            "description": "是否释放节点。可选值：\n- true：释放。\n- false：不释放。",
            "example": "true",
            "required": false,
            "title": "是否释放节点。",
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "drain_node",
          "required": false,
          "schema": {
            "description": "是否排水节点。可选值：\n- true：排水。\n- false：不排水。",
            "example": "true",
            "required": false,
            "title": "是否排水节点。",
            "type": "boolean"
          }
        },
        {
          "in": "query",
          "name": "nodes",
          "required": false,
          "schema": {
            "description": "移除节点列表。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "节点名称。",
              "example": "cn-hangzhou.172.16.xxx.xxx",
              "required": false,
              "type": "string"
            },
            "required": false,
            "title": "移除节点列表。",
            "type": "array"
          }
        },
        {
          "in": "query",
          "name": "instance_ids",
          "required": false,
          "schema": {
            "description": "移除实例列表。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "实例ID。",
              "example": "i-bp1c70fqbv1nlu9xxxxx",
              "required": false,
              "type": "string"
            },
            "required": false,
            "title": "移除实例列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}/nodes",
      "responses": {
        "200": {
          "schema": {
            "description": "响应体。",
            "properties": {
              "request_id": {
                "description": "请求ID。",
                "example": "A9891419-D125-4D89-AFCA-68846675E2F7",
                "title": "请求ID。",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-62a944794ee141074400****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "响应体。",
            "type": "object"
          }
        }
      },
      "summary": "移除节点池内的节点。",
      "title": "移除节点池节点"
    },
    "RemoveWorkflow": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/RemoveWorkflow\n调用RemoveWorkflow删除某个指定工作流。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用RemoveWorkflow删除某个指定工作流。",
        "title": "删除某个指定工作流"
      },
      "method": "delete",
      "name": "RemoveWorkflow",
      "parameters": [
        {
          "in": "path",
          "name": "workflowName",
          "required": true,
          "schema": {
            "description": "工作流名称。",
            "docRequired": true,
            "example": "mapping-gpu-98wt4",
            "required": true,
            "title": "工作流名称。",
            "type": "string"
          }
        }
      ],
      "path": "/gs/workflow/{workflowName}",
      "responses": {
        "200": {}
      },
      "summary": "调用RemoveWorkflow删除某个指定工作流。",
      "title": "删除某个指定工作流"
    },
    "RepairClusterNodePool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/RepairClusterNodePool\n调用RepairClusterNodePool修复指定的托管节点池内指定节点存在的问题。",
      "ext": {
        "methods": [
          "post"
        ],
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"request_id\\\": \\\"db82195b-75a8-40e5-9be4-16f1829dc624\\\",\\n  \\\"task_id\\\": \\\"T-613b19bbd160ad4928000001\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<RepairClusterNodePoolResponse>\\n    <request_id>db82195b-75a8-40e5-9be4-16f1829dc624</request_id>\\n    <task_id>T-613b19bbd160ad4928000001</task_id>\\n</RepairClusterNodePoolResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用RepairClusterNodePool修复指定的托管节点池内指定节点存在的问题。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "修复节点池节点"
      },
      "method": "post",
      "name": "RepairClusterNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": true,
          "schema": {
            "description": "集群ID",
            "example": "c2273b7f4a30d4ef6b43e0926cdd8****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "nodepool_id",
          "required": true,
          "schema": {
            "description": "节点池ID",
            "example": "np613940c3593c4bea96faa8600cb9****",
            "required": true,
            "title": "节点池ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体",
            "ext": {
              "style": "json"
            },
            "properties": {
              "auto_restart": {
                "example": "true",
                "required": false,
                "title": "是否重启节点。",
                "type": "boolean"
              },
              "nodes": {
                "description": "节点列表，如果不指定则表示当前节点池内所有节点",
                "items": {
                  "description": "节点名称",
                  "example": "cn-beijing.10.0.1.26",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "title": "节点列表，如果不指定则表示当前节点池内所有节点",
                "type": "array"
              }
            },
            "required": false,
            "title": "请求体",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/nodepools/{nodepool_id}/repair",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "request_id": {
                "description": "请求ID",
                "example": "db82195b-75a8-40e5-9be4-16f1829dc624",
                "title": "请求ID",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID",
                "example": "T-613b19bbd160ad4928000001",
                "title": "任务ID",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "调用RepairClusterNodePool修复指定的托管节点池内指定节点存在的问题。",
      "title": "修复节点池节点"
    },
    "ResumeComponentUpgrade": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ResumeComponentUpgrade\n调用ResumeComponentUpgrade重新启动被暂停的组件升级任务。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用ResumeComponentUpgrade重新启动被暂停的组件升级任务。",
        "title": "重新开始组件升级"
      },
      "method": "post",
      "name": "ResumeComponentUpgrade",
      "parameters": [
        {
          "in": "path",
          "name": "clusterid",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "componentid",
          "required": true,
          "schema": {
            "description": "组件ID。",
            "example": "metric-server",
            "required": true,
            "title": "组件ID。",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{clusterid}/components/{componentid}/resume",
      "responses": {
        "200": {},
        "5XX": {}
      },
      "summary": "调用ResumeComponentUpgrade重新启动被暂停的组件升级任务。",
      "title": "重新开始组件升级"
    },
    "ResumeTask": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ResumeTask\n恢复已暂停的集群任务。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "恢复已暂停的集群任务。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "恢复任务"
      },
      "method": "post",
      "name": "ResumeTask",
      "parameters": [
        {
          "in": "path",
          "name": "task_id",
          "required": true,
          "schema": {
            "description": "任务ID。",
            "example": "T-62a944794ee141074400****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/tasks/{task_id}/resume",
      "responses": {
        "202": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "requestId": {
                "description": "Id of the request",
                "title": "Id of the request",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "恢复已暂停的集群任务。",
      "title": "恢复任务"
    },
    "ResumeUpgradeCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ResumeUpgradeCluster\n根据集群ID，恢复升级处于升级暂停状态的集群。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，恢复升级处于升级暂停状态的集群。",
        "title": "重新开始集群升级"
      },
      "method": "post",
      "name": "ResumeUpgradeCluster",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}/upgrade/resume",
      "responses": {
        "200": {}
      },
      "summary": "根据集群ID，恢复升级处于升级暂停状态的集群。",
      "title": "重新开始集群升级"
    },
    "RunClusterCheck": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/RunClusterCheck\n使用RunClusterCheck发起集群检查，例如集群升级检查等",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"request_id\\\": \\\"F04DF81D-5C12-1524-B36A-86E02526****\\\",\\n  \\\"check_id\\\": \\\"1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "使用RunClusterCheck发起集群检查，例如集群升级检查等",
        "systemTags": {
          "chargeType": "free",
          "operationType": "none",
          "riskType": "none"
        },
        "title": "发起集群检查"
      },
      "method": "post",
      "name": "RunClusterCheck",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "ce0da5a1d627e4e9e9f96cae8ad07****",
            "required": false,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "options": {
                "additionalProperties": {
                  "description": "检查参数。",
                  "example": "next_version",
                  "type": "string"
                },
                "description": "检查选项。",
                "required": false,
                "title": "检查选项。",
                "type": "object"
              },
              "type": {
                "description": "检查类型。",
                "example": "ClusterUpgrade",
                "required": true,
                "title": "检查类型。",
                "type": "string"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/checks",
      "responses": {
        "200": {
          "schema": {
            "description": "Schema of Response",
            "properties": {
              "check_id": {
                "description": "检查ID。",
                "example": "1697100584236600453-ce0da5a1d627e4e9e9f96cae8ad07****-clustercheck-lboto",
                "title": "检查ID。",
                "type": "string"
              },
              "request_id": {
                "description": "Id of the request",
                "example": "F04DF81D-5C12-1524-B36A-86E02526****",
                "title": "Id of the request",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "使用RunClusterCheck发起集群检查，例如集群升级检查等",
      "title": "发起集群检查"
    },
    "ScaleClusterNodePool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ScaleClusterNodePool\n根据节点池ID，扩容节点池节点。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"task_id\\\": \\\"T-5faa48fb31b6b8078d00****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<task_id>T-5faa48fb31b6b8078d00****</task_id>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据节点池ID，扩容节点池节点。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "扩容节点池"
      },
      "method": "post",
      "name": "ScaleClusterNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c23421cfa74454bc8b37163fd19af****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "example": "np31da1b38983f4511b490fc62108a****",
            "required": true,
            "title": "节点池ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "properties": {
              "count": {
                "description": "扩容节点数量。受当前集群节点配额限制，单次操作最多扩容500个节点。",
                "example": "1",
                "format": "int64",
                "required": false,
                "title": "扩容节点数量",
                "type": "integer"
              }
            },
            "required": false,
            "title": "扩容配置",
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}",
      "responses": {
        "200": {
          "schema": {
            "description": "返回数据体。",
            "properties": {
              "task_id": {
                "description": "任务ID。",
                "example": "T-5faa48fb31b6b8078d00****",
                "title": "任务ID。",
                "type": "string"
              }
            },
            "title": "返回结构体。",
            "type": "object"
          }
        }
      },
      "summary": "根据节点池ID，扩容节点池节点。",
      "title": "扩容节点池"
    },
    "ScanClusterVuls": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/ScanClusterVuls\n扫描集群安全漏洞。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"request_id\\\": \\\"687C5BAA-D103-4993-884B-C35E4314A1E1\\\",\\n  \\\"task_id\\\": \\\"T-xascadasd*****\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {
          "returnType": "synchronous"
        },
        "summary": "扫描集群安全漏洞。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "扫描集群安全漏洞"
      },
      "method": "post",
      "name": "ScanClusterVuls",
      "parameters": [
        {
          "in": "path",
          "name": "cluster_id",
          "required": false,
          "schema": {
            "description": "集群ID。",
            "example": "c259f563386444ebb8d7****",
            "required": false,
            "title": "A short description of struct",
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{cluster_id}/vuls/scan",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体。",
            "properties": {
              "request_id": {
                "description": "请求ID。",
                "example": "687C5BAA-D103-4993-884B-C35E4314A1E1",
                "title": "Id of the request",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-xascadasd*****",
                "type": "string"
              }
            },
            "title": "Schema of Response",
            "type": "object"
          }
        }
      },
      "summary": "扫描集群安全漏洞。",
      "title": "扫描集群安全漏洞"
    },
    "StartAlert": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/StartAlert\nundefined",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"status\\\": true,\\n  \\\"msg\\\": \\\"success\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "title": "启动报警规则"
      },
      "method": "post",
      "name": "StartAlert",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。您可以通过调用ListClusters获取集群ID。",
            "docRequired": true,
            "example": "c245ff43c717f494489f42f5f1575e98d",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/alert/{ClusterId}/alert_rule/start",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "msg": {
                "description": "返回信息。",
                "example": "success",
                "type": "string"
              },
              "status": {
                "description": "状态。",
                "example": "true",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        }
      },
      "title": "启动报警规则"
    },
    "StartWorkflow": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/StartWorkflow\n调用StartWorkflow创建一个新的基因工作流。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"JobName\\\": \\\"mapping-gpu-66xv7\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<JobName>mapping-gpu-66xv7</JobName>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用StartWorkflow创建一个新的基因工作流。",
        "title": "创建一个新的基因工作流"
      },
      "method": "post",
      "name": "StartWorkflow",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数",
            "ext": {
              "style": "json"
            },
            "properties": {
              "mapping_bam_out_filename": {
                "description": "bam文件输出名称。",
                "example": "abc.bam",
                "required": false,
                "title": "bam文件输出名称。",
                "type": "string"
              },
              "mapping_bam_out_path": {
                "description": "bam文件输出路径。",
                "example": "output/bamDirName",
                "required": false,
                "title": "bam文件输出路径。",
                "type": "string"
              },
              "mapping_bucket_name": {
                "description": "存放mapping的bucket名称。",
                "example": "gene-shenzhen",
                "required": false,
                "title": "存放mapping的bucket名称。",
                "type": "string"
              },
              "mapping_fastq_first_filename": {
                "description": "mapping的第一个fastq文件名。",
                "example": "MGISEQ2000_PCR-free_NA12878_1_V100003043_L01_1.fq.gz",
                "required": false,
                "title": "mapping的第一个fastq文件名。",
                "type": "string"
              },
              "mapping_fastq_path": {
                "description": "mapping的fastq文件路径。",
                "example": "fastq/MGISEQ2000",
                "required": false,
                "title": "mapping的fastq文件路径。",
                "type": "string"
              },
              "mapping_fastq_second_filename": {
                "description": "mapping的第二个fastq文件名。",
                "example": "MGISEQ2000_PCR-free_NA12878_1_V100003043_L01_2.fq.gz",
                "required": false,
                "title": "mapping的第二个fastq文件名。",
                "type": "string"
              },
              "mapping_is_mark_dup": {
                "description": "是否进行dup。",
                "example": "true",
                "required": false,
                "title": "是否进行dup。",
                "type": "string"
              },
              "mapping_oss_region": {
                "description": "mapping oss数据的存放region。",
                "example": "cn-hangzhou",
                "required": false,
                "title": "mapping oss数据的存放region。",
                "type": "string"
              },
              "mapping_reference_path": {
                "description": "mapping的reference文件位置。",
                "example": "reference/hg19",
                "required": false,
                "title": "mapping的reference文件位置。",
                "type": "string"
              },
              "service": {
                "description": "SLA类型，可选值：s、g、p。 \n\n- 白银级（s）：超过90 Gbp的部分，按1.5 Gbp/min计算增加的时间。 \n- 黄金级（g）：超过90 Gbp的部分，按2 Gbp/min计算增加的时间。 \n- 铂金级（p）：超过90 Gbp的部分，按3 Gbp/min计算增加的时间。",
                "example": "s",
                "required": false,
                "title": "SLA类型，可选值：s、g、p。 白银级（s）：超过90 Gbp的部分，按1.5 Gbp/min计算增加的时间。 黄金级（g）：超过90 Gbp的部分，按2 Gbp/min计算增加的时间。 铂金级（p）：超过90 Gbp的部分，按3 Gbp/min计算增加的时间。",
                "type": "string"
              },
              "wgs_bucket_name": {
                "description": "存放wgs的bucket名称。",
                "example": "gene-shenzhen",
                "required": false,
                "title": "存放wgs的bucket名称。",
                "type": "string"
              },
              "wgs_fastq_first_filename": {
                "description": "wgs的第一个fastq文件名。",
                "example": "MGISEQ2000_PCR-free_NA12878_1_V100003043_L01_1.fq.gz",
                "required": false,
                "title": "wgs的第一个fastq文件名。",
                "type": "string"
              },
              "wgs_fastq_path": {
                "description": "wgs的fastq文件路径。",
                "example": "fastq/MGISEQ2000",
                "required": false,
                "title": "wgs的fastq文件路径。",
                "type": "string"
              },
              "wgs_fastq_second_filename": {
                "description": "wgs的第二个fastq文件名。",
                "example": "MGISEQ2000_PCR-free_NA12878_1_V100003043_L01_2.fq.gz",
                "required": false,
                "title": "wgs的第二个fastq文件名。",
                "type": "string"
              },
              "wgs_oss_region": {
                "description": "wgs oss数据的存放region。",
                "example": "cn-shenzhen",
                "required": false,
                "title": "wgs oss数据的存放region。",
                "type": "string"
              },
              "wgs_reference_path": {
                "description": "wgs的reference文件路径。",
                "example": "reference/hg19",
                "required": false,
                "title": "wgs的reference文件路径。",
                "type": "string"
              },
              "wgs_vcf_out_filename": {
                "description": "wgs的vcf输出文件名称。",
                "example": "abc.vcf",
                "required": false,
                "title": "wgs的vcf输出文件名称。",
                "type": "string"
              },
              "wgs_vcf_out_path": {
                "description": "wgs的vcf输出路径。",
                "example": "output/vcf",
                "required": false,
                "title": "wgs的vcf输出路径。",
                "type": "string"
              },
              "workflow_type": {
                "description": "工作流类型，可选值：wgs或mapping。",
                "example": "mapping",
                "required": true,
                "title": "工作流类型，可选值：wgs或mapping。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/gs/workflow",
      "responses": {
        "200": {
          "schema": {
            "description": "返回体参数",
            "properties": {
              "JobName": {
                "description": "工作流名称",
                "example": "mapping-gpu-66xv7",
                "title": "工作流名称",
                "type": "string"
              }
            },
            "title": "返回体参数",
            "type": "object"
          }
        }
      },
      "summary": "调用StartWorkflow创建一个新的基因工作流。",
      "title": "创建一个新的基因工作流"
    },
    "StopAlert": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/StopAlert\n停止ACK报警中心中报警规则，停止整个报警规则集分组、单个报警规则。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"status\\\": true,\\n  \\\"msg\\\": \\\"Success\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "停止ACK报警中心中报警规则，停止整个报警规则集分组、单个报警规则。",
        "title": "停止报警规则"
      },
      "method": "post",
      "name": "StopAlert",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。\n\n您可以通过调用[ListClusters](https://help.aliyun.com/document_detail/87116.html)获取集群ID。",
            "docRequired": true,
            "example": "c7f9c85baee73452883b3299a0107****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/alert/{ClusterId}/alert_rule/stop",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "msg": {
                "description": "执行失败时返回信息提示。",
                "example": "Success",
                "type": "string"
              },
              "status": {
                "description": "执行结果状态。\n- True：执行成功。\n- False：执行失败。",
                "example": "True",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "停止ACK报警中心中报警规则，停止整个报警规则集分组、单个报警规则。",
      "title": "停止报警规则"
    },
    "SyncClusterNodePool": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/SyncClusterNodePool\n同步节点池，包含节点池元数据、节点池内节点信息等。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"2D69A58F-345C-4FDE-88E4-BF51894XXXXX\\\"\\n}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "同步节点池，包含节点池元数据、节点池内节点信息等。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "同步节点池"
      },
      "method": "post",
      "name": "SyncClusterNodePool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c905d1364c2dd4b6284a3f41790c4****",
            "required": true,
            "type": "string"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/sync_nodepools",
      "responses": {
        "200": {
          "schema": {
            "description": "请求体。",
            "properties": {
              "RequestId": {
                "description": "请求ID。",
                "example": "2D69A58F-345C-4FDE-88E4-BF51894XXXXX",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "5XX": {
          "schema": {
            "properties": {
              "RequestId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "同步节点池，包含节点池元数据、节点池内节点信息等。",
      "title": "同步节点池"
    },
    "TagResources": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/TagResources\n调用TagResources为指定的集群绑定特定标签。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"2D69A58F-345C-4FDE-88E4-BF51894XXXXX\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<TagResourcesResponse>\\n    <RequestId>2D69A58F-345C-4FDE-88E4-BF51894XXXXX</RequestId>\\n</TagResourcesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用TagResources为指定的集群绑定特定标签。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "为资源绑定标签"
      },
      "method": "put",
      "name": "TagResources",
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "properties": {
              "region_id": {
                "description": "资源所属的地域ID。",
                "example": "cn-hangzhou",
                "required": true,
                "title": "资源所属的地域ID",
                "type": "string"
              },
              "resource_ids": {
                "description": "资源ID列表。",
                "items": {
                  "description": "资源ID。数组长度取值范围：\\[1,50\\]。\n\n",
                  "example": "[c1a7bb282fc0d48b****]",
                  "required": false,
                  "type": "string"
                },
                "required": true,
                "title": "资源ID列表",
                "type": "array"
              },
              "resource_type": {
                "description": "资源类型定义。取值范围：只支持`CLUSTER`这一种资源类型。",
                "example": "CLUSTER",
                "required": true,
                "title": "资源类型定义。取值范围：  只支持CLUSTER这一种资源类型",
                "type": "string"
              },
              "tags": {
                "description": "资源的标签键值对。数组长度范围：\\[1,20\\]。注意：\n\n- 一旦传值，值不允许为空字符串，最多支持128个字符。\n- 不能以`aliyun`和`acs:`开头。\n- 不能包含`http://`或者`https://`。",
                "items": {
                  "$ref": "#/definitions/tag",
                  "description": "资源标签。",
                  "isDefsType": true,
                  "required": false,
                  "typeName": "tag"
                },
                "required": true,
                "title": "资源的标签键值对。数组长度范围：1~20。一旦传值，则不允许为空字符串。最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。",
                "type": "array"
              }
            },
            "required": false,
            "title": "请求体参数",
            "type": "object"
          }
        }
      ],
      "path": "/tags",
      "responses": {
        "200": {
          "schema": {
            "description": "响应体。",
            "properties": {
              "RequestId": {
                "description": "请求id。",
                "example": "2D69A58F-345C-4FDE-88E4-BF51894XXXXX",
                "title": "请求id。",
                "type": "string"
              }
            },
            "title": "响应体。",
            "type": "object"
          }
        }
      },
      "summary": "调用TagResources为指定的集群绑定特定标签。",
      "title": "为资源绑定标签"
    },
    "UnInstallClusterAddons": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UnInstallClusterAddons\n根据组件名称，卸载指定集群的组件。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "read",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据组件名称，卸载指定集群的组件。",
        "systemTags": {
          "operationType": "delete"
        },
        "title": "卸载集群组件"
      },
      "method": "post",
      "name": "UnInstallClusterAddons",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "addons",
          "required": false,
          "schema": {
            "description": "组件列表，结构为数组。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "组件详情。",
              "properties": {
                "cleanup_cloud_resources": {
                  "description": "是否清理云资源。",
                  "example": "true",
                  "required": false,
                  "title": "是否清理组件创建的云资源实例。",
                  "type": "boolean"
                },
                "name": {
                  "description": "组件名称。",
                  "example": "ack-node-problem-detector",
                  "required": false,
                  "title": "组件名称。",
                  "type": "string"
                }
              },
              "required": false,
              "type": "object"
            },
            "required": false,
            "title": "卸载组件列表。",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/uninstall",
      "responses": {
        "200": {}
      },
      "summary": "根据组件名称，卸载指定集群的组件。",
      "title": "卸载集群组件"
    },
    "UntagResources": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UntagResources\n调用UntagResources为指定的集群解绑标签。",
      "ext": {
        "methods": [
          "delete"
        ],
        "operationType": "readAndWrite",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"2D69A58F-345C-4FDE-88E4-BF51894XXXXX\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<UntagResourcesResponse>\\n    <RequestId>2D69A58F-345C-4FDE-88E4-BF51894XXXXX</RequestId>\\n</UntagResourcesResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用UntagResources为指定的集群解绑标签。",
        "systemTags": {},
        "title": "删除资源标签"
      },
      "method": "delete",
      "name": "UntagResources",
      "parameters": [
        {
          "in": "query",
          "name": "region_id",
          "required": true,
          "schema": {
            "description": "资源所属的地域ID。",
            "example": "cn-hangzhou",
            "required": true,
            "title": "资源所属的地域ID",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "resource_ids",
          "required": true,
          "schema": {
            "description": "资源ID列表。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "资源ID。数组长度取值范围为：\\[1,50\\]。",
              "example": "c1a7bb282fc0d48b593***",
              "required": false,
              "type": "string"
            },
            "required": true,
            "title": "资源ID。数组长度取值范围为：1~50",
            "type": "array"
          }
        },
        {
          "in": "query",
          "name": "resource_type",
          "required": true,
          "schema": {
            "description": "资源类型定义。取值范围：只支持`CLUSTER`这一种资源类型。",
            "example": "CLUSTER",
            "required": true,
            "title": "资源类型定义。取值范围： 只支持CLUSTER这一种资源类型",
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "tag_keys",
          "required": true,
          "schema": {
            "description": "资源标签键列表。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "资源的标签键。数值长度的取值范围：\\[1,20\\]。",
              "example": "TestKey1",
              "required": false,
              "type": "string"
            },
            "required": true,
            "title": "资源的标签键。N的取值范围：1~20",
            "type": "array"
          }
        },
        {
          "in": "query",
          "name": "all",
          "required": false,
          "schema": {
            "description": "是否删除全部自定义标签，仅当`tag_keys`为空时生效。取值范围：\n\n- `true`: 删除全部标签。\n- `false`: 不删除全部标签。",
            "example": "true",
            "required": false,
            "title": "是否删除全部自定义标签，仅当tag_keys为空时生效，取值：[true,false]。",
            "type": "boolean"
          }
        }
      ],
      "path": "/tags",
      "responses": {
        "200": {
          "schema": {
            "description": "响应体。",
            "properties": {
              "RequestId": {
                "description": "请求id。",
                "example": "2D69A58F-345C-4FDE-88E4-BF51894XXXXX",
                "title": "请求id。",
                "type": "string"
              }
            },
            "title": "响应体。",
            "type": "object"
          }
        }
      },
      "summary": "调用UntagResources为指定的集群解绑标签。",
      "title": "删除资源标签"
    },
    "UpdateContactGroupForAlert": {
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpdateContactGroupForAlert\nundefined",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "readAndWrite",
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "title": "更新报警项联系人分组"
      },
      "method": "post",
      "name": "UpdateContactGroupForAlert",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": false,
          "schema": {
            "description": "集群ID，可以调用ListCluster接口获取。",
            "example": "ce7d08276f8a6422282c46272a84bxxxx",
            "required": false,
            "type": "string"
          }
        }
      ],
      "path": "/alert/{ClusterId}/alert_rule/contact_groups",
      "responses": {},
      "title": "更新报警项联系人分组"
    },
    "UpdateControlPlaneLog": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpdateControlPlaneLog\n调用UpdateControlPlaneLog修改ACK托管集群控制平面组件日志配置。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用UpdateControlPlaneLog修改ACK托管集群控制平面组件日志配置。",
        "systemTags": {},
        "title": "修改ACK托管集群控制平面组件日志配置"
      },
      "method": "put",
      "name": "UpdateControlPlaneLog",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求Body参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "aliuid": {
                "description": "阿里云账号ID。",
                "example": "162981*****",
                "required": false,
                "type": "string"
              },
              "components": {
                "description": "当前开启控制平面日志的组件列表。",
                "items": {
                  "description": "当前开启控制平面日志的组件列表。支持的组件列表：\n- `apiserver`\n- `ccm`\n- `scheduler`\n- `kcm`\n-  ` vk`：仅适用于ASK集群。\n- `istio`：仅适用于服务网格集群。\n- `cluster-operator`：仅适用于ACK One分布式云容器平台。\n- `application-controller`：仅适用于ACK One分布式云容器平台。\n\n默认采集`apiserver`、 `ccm`、`scheduler`、`kcm`、`controlplane-events`组件的日志。\n",
                  "example": "[\"apiserver\", \"ccm\", \"scheduler\",  \"kcm\", \"controlplane-events\"]",
                  "required": false,
                  "type": "string"
                },
                "required": false,
                "type": "array"
              },
              "log_project": {
                "description": "控制平面组件日志对应存储的SLS Project名称。\n\n默认值：k8s-log-$集群ID。",
                "example": "k8s-log-c5b5e80b0b64a4bf6939d2d8fbbc5****",
                "required": false,
                "type": "string"
              },
              "log_ttl": {
                "description": "日志在SLS logstore里的数据保存时间。取值范围：1~3000，单位：天。\n\n默认值：30天。",
                "example": "30",
                "required": false,
                "type": "string"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/controlplanelog",
      "responses": {},
      "summary": "调用UpdateControlPlaneLog修改ACK托管集群控制平面组件日志配置。",
      "title": "修改ACK托管集群控制平面组件日志配置"
    },
    "UpdateK8sClusterUserConfigExpire": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpdateK8sClusterUserConfigExpire\n> - 该接口只允许被主账号调用。- 如果吊销了您在该集群上使用的KubeConfig凭证，设置在该集群KubeConfig自定义过期时间也会被重置，您需要调用该接口重新设置。\n\n",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "调用UpdateK8sClusterUserConfigExpire更新用户证书过期时间。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "更新用户自定义配置过期时间"
      },
      "method": "post",
      "name": "UpdateK8sClusterUserConfigExpire",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c5b5e80b0b64a4bf6939d2d8fbbc5****",
            "required": true,
            "title": "集群id",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "expire_hour": {
                "description": "用户指定的过期时间。单位：小时。\n>expire_hour过期小时数需大于0且小于等于 876000小时（100年）。",
                "docRequired": true,
                "example": "720",
                "format": "int64",
                "maximum": "876000",
                "minimum": "0",
                "required": true,
                "title": "kubeconfig过期小时",
                "type": "integer"
              },
              "user": {
                "description": "用户ID。",
                "docRequired": false,
                "example": "RAM的UID",
                "required": true,
                "title": "指定用户id",
                "type": "string"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/k8s/{ClusterId}/user_config/expire",
      "responses": {
        "200": {}
      },
      "summary": "调用UpdateK8sClusterUserConfigExpire更新用户证书过期时间。",
      "title": "更新用户自定义配置过期时间"
    },
    "UpdateTemplate": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpdateTemplate\n根据编排模板ID，更新编排模板。",
      "ext": {
        "methods": [
          "put"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "staticInfo": {},
        "summary": "根据编排模板ID，更新编排模板。",
        "title": "更新编排模板"
      },
      "method": "put",
      "name": "UpdateTemplate",
      "parameters": [
        {
          "in": "path",
          "name": "TemplateId",
          "required": true,
          "schema": {
            "description": "模板ID。",
            "example": "72d20cf8-a533-4ea9-a10d-e7630d3d2708",
            "required": true,
            "title": "部署模板ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "webserver01",
            "properties": {
              "description": {
                "description": "部署模板描述信息。",
                "example": "web server cluster",
                "required": false,
                "title": "部署模板描述信息。",
                "type": "string"
              },
              "name": {
                "description": "部署模板名称。",
                "example": "webserver01",
                "required": false,
                "title": "部署模板名称。",
                "type": "string"
              },
              "tags": {
                "description": "部署模板标签。",
                "example": "web",
                "required": false,
                "title": "部署模板标签",
                "type": "string"
              },
              "template": {
                "description": "YAML格式的模板内容。",
                "example": "apiVersion: apps/v1\\\\nkind: Deployment\\\\nmetadata:\\\\n  name: nginx-deployment-basic\\\\n  labels:\\\\n    app: nginx\\\\nspec:\\\\n  replicas: 2\\\\n  selector:\\\\n    matchLabels:\\\\n      app: nginx\\\\n  template:\\\\n    metadata:\\\\n      labels:\\\\n        app: nginx\\\\n    spec:\\\\n      containers:\\\\n      - name: nginx\\\\n        image: busybox:latest\\\\n        ports:\\\\n        - containerPort: 8080",
                "required": false,
                "title": "部署模板yaml。",
                "type": "string"
              },
              "template_type": {
                "description": "模板类型，值可以是任意值。\n\n- 当取值是`kubernetes`时将在控制台的编排模板页面展示该模板。\n\n- 当取值是`compose`时将在控制台Swarm集群页面显示该模板（已废弃）。\n",
                "example": "kubernetes",
                "required": false,
                "title": "部署模板类型。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体",
            "type": "object"
          }
        }
      ],
      "path": "/templates/{TemplateId}",
      "responses": {
        "200": {}
      },
      "summary": "根据编排模板ID，更新编排模板。",
      "title": "更新编排模板"
    },
    "UpgradeCluster": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpgradeCluster\n根据集群ID，升级指定集群。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据集群ID，升级指定集群。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "升级集群"
      },
      "method": "post",
      "name": "UpgradeCluster",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "c82e6987e2961451182edacd74faf****",
            "required": true,
            "title": "集群ID。",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求体参数。",
            "example": "k8s",
            "ext": {
              "style": "json"
            },
            "properties": {
              "component_name": {
                "deprecated": true,
                "description": "组件名称，取值：`k8s`。",
                "example": "k8s",
                "required": false,
                "title": "组件名称，集群升级时取值\"k8s\"。",
                "type": "string"
              },
              "master_only": {
                "default": "false",
                "description": "是否仅升级master。\n- true：仅升级master。\n- false：升级master和worker。",
                "example": "true",
                "required": false,
                "title": "是否仅升级master。",
                "type": "boolean"
              },
              "next_version": {
                "description": "集群可升级版本。",
                "example": "1.16.9-aliyun.1",
                "required": false,
                "title": "目标版本。",
                "type": "string"
              },
              "version": {
                "deprecated": true,
                "description": "集群当前版本。更多信息，请参见[集群版本](https://help.aliyun.com/document_detail/185269.html)。",
                "example": "1.14.8-aliyun.1",
                "required": false,
                "title": "已废弃，无需传递，请使用 next_version 参数传入升级目标版本。",
                "type": "string"
              }
            },
            "required": false,
            "title": "请求体",
            "type": "object"
          }
        }
      ],
      "path": "/api/v2/clusters/{ClusterId}/upgrade",
      "responses": {
        "200": {}
      },
      "summary": "根据集群ID，升级指定集群。",
      "title": "升级集群"
    },
    "UpgradeClusterAddons": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpgradeClusterAddons\n根据组件名称，将指定组件升级到指定版本。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "根据组件名称，将指定组件升级到指定版本。",
        "systemTags": {},
        "title": "升级集群组件"
      },
      "method": "post",
      "name": "UpgradeClusterAddons",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "example": "cf4299b79b3e34226abfdc80a4bda****",
            "required": true,
            "title": "集群ID",
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求参数。",
            "ext": {
              "style": "json"
            },
            "items": {
              "description": "组件信息。",
              "properties": {
                "component_name": {
                  "description": "组件名称。",
                  "example": "coredns",
                  "required": true,
                  "title": "组件名称",
                  "type": "string"
                },
                "config": {
                  "description": "组件自定义参数，使用JSON字符串编码。",
                  "example": "{\\\"CpuRequest\\\":\\\"800m\\\"}",
                  "required": false,
                  "title": "组件自定义参数",
                  "type": "string"
                },
                "next_version": {
                  "description": "可升级版本。调用`DescribeClusterAddonsVersion`参数可以查看可以升级的版本。",
                  "example": "1.6.7",
                  "required": true,
                  "title": "可升级版本",
                  "type": "string"
                },
                "policy": {
                  "description": "组件升级策略。可选值：\n- overwrite：覆盖升级。\n- canary：金丝雀升级。",
                  "example": "canary",
                  "required": false,
                  "title": "组件升级策略。",
                  "type": "string"
                },
                "version": {
                  "description": "当前版本。",
                  "example": "v1.6.2",
                  "required": false,
                  "title": "当前版本",
                  "type": "string"
                }
              },
              "required": false,
              "type": "object"
            },
            "required": false,
            "title": "Request body，类型是对象数组",
            "type": "array"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/components/upgrade",
      "responses": {
        "200": {
          "headers": {}
        }
      },
      "summary": "根据组件名称，将指定组件升级到指定版本。",
      "title": "升级集群组件"
    },
    "UpgradeClusterNodepool": {
      "consumes": [
        "application/json"
      ],
      "deprecated": false,
      "description": "@link 调试链接: https://api.aliyun.com/api/CS/2015-12-15/UpgradeClusterNodepool\n通过UpgradeClusterNodepool可升级指定集群节点池内节点的Kubernetes版本、操作系统版本或容器运行时版本。",
      "ext": {
        "methods": [
          "post"
        ],
        "operationType": "write",
        "produces": [
          "application/json"
        ],
        "responseDemo": "[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"2D69A58F-345C-4FDE-88E4-BF518944****\\\",\\n  \\\"task_id\\\": \\\"T-5fd211e924e1d0078700xxxx\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<UpgradeClusterNodepoolResponse>\\n    <RequestId>2D69A58F-345C-4FDE-88E4-BF518944****</RequestId>\\n</UpgradeClusterNodepoolResponse>\",\"errorExample\":\"\"}]",
        "schemes": [
          "http",
          "https"
        ],
        "security": [
          {
            "AK": []
          }
        ],
        "summary": "升级指定集群节点池的Kubernetes版本、操作系统版本或容器运行时版本。",
        "systemTags": {
          "operationType": "update"
        },
        "title": "升级节点池"
      },
      "method": "post",
      "name": "UpgradeClusterNodepool",
      "parameters": [
        {
          "in": "path",
          "name": "ClusterId",
          "required": true,
          "schema": {
            "description": "集群ID。",
            "docRequired": true,
            "example": "c106f377e16f34eb1808d6b9362c9****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "NodepoolId",
          "required": true,
          "schema": {
            "description": "节点池ID。",
            "docRequired": true,
            "example": "np31da1b38983f4511b490fc62108a****",
            "required": true,
            "type": "string"
          }
        },
        {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "description": "请求参数。",
            "ext": {
              "style": "json"
            },
            "properties": {
              "image_id": {
                "description": "节点系统镜像ID。",
                "example": "aliyun_2_1903_x64_20G_alibase_20200529.vhd",
                "required": false,
                "title": "节点系统镜像ID。",
                "type": "string"
              },
              "kubernetes_version": {
                "description": "节点Kubernetes版本。",
                "example": "1.22.15-aliyun.1",
                "required": false,
                "title": "节点Kubernetes版本。",
                "type": "string"
              },
              "runtime_type": {
                "description": "运行时类型，可选值：containerd，docker",
                "example": "containerd",
                "required": false,
                "type": "string"
              },
              "runtime_version": {
                "description": "节点运行时版本。",
                "example": "1.5.10",
                "required": false,
                "title": "节点运行时版本。",
                "type": "string"
              }
            },
            "required": false,
            "type": "object"
          }
        }
      ],
      "path": "/clusters/{ClusterId}/nodepools/{NodepoolId}/upgrade",
      "responses": {
        "200": {
          "schema": {
            "properties": {
              "RequestId": {
                "description": "请求ID。",
                "example": "2D69A58F-345C-4FDE-88E4-BF518944****",
                "type": "string"
              },
              "task_id": {
                "description": "任务ID。",
                "example": "T-5fd211e924e1d0078700xxxx",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "5XX": {
          "schema": {
            "properties": {
              "RequestId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "summary": "升级指定集群节点池的Kubernetes版本、操作系统版本或容器运行时版本。",
      "title": "升级节点池"
    }
  },
  "definitions": {
    "addon": {
      "description": "集群组件配置。",
      "properties": {
        "config": {
          "description": "组件配置。",
          "example": "{\\\"IngressSlbNetworkType\\\":\\\"internet\\\"}",
          "title": "插件配置参数。",
          "type": "string"
        },
        "disabled": {
          "description": "是否禁止默认安装，集群创建时除了安装必需组件外，还会额外安装一些日志组件等，您可以禁止这些默认行为，后续通过安装组件的API进行安装或者通过控制台安装。取值：\n\n- `true`：禁止默认安装。\n- `false`：允许默认安装。\n",
          "example": "false",
          "title": "是否禁止默认安装。true | false。",
          "type": "boolean"
        },
        "name": {
          "description": "组件名称。",
          "example": "nginx-ingress-controller",
          "title": "插件名称。",
          "type": "string"
        },
        "version": {
          "description": "组件版本。",
          "example": "v1.9.3-aliyun.1",
          "title": "版本。",
          "type": "string"
        }
      },
      "title": "集群插件配置",
      "type": "object"
    },
    "data_disk": {
      "description": "节点数据盘配置。",
      "properties": {
        "auto_format": {
          "description": "是否挂载。",
          "example": "true",
          "title": "是否挂载。",
          "type": "boolean"
        },
        "auto_snapshot_policy_id": {
          "description": "选择自动快照策略ID，云盘会按照快照策略自动备份。\n\n默认值：空，不自动备份。",
          "example": "sp-2zej1nogjvovnz4z****",
          "title": "开启云盘备份时的自动备份策略。",
          "type": "string"
        },
        "bursting_enabled": {
          "description": "数据盘是否开启Burst（性能突发），磁盘类型为cloud_auto时配置。",
          "example": "true",
          "title": "数据盘是否开启Burst（性能突发），磁盘类型为cloud_auto时配置。",
          "type": "boolean"
        },
        "category": {
          "description": "数据盘类型。取值：\n\n- `cloud`：普通云盘。\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n- `cloud_essd`：ESSD云盘。\n\n默认值：`cloud_efficiency`。",
          "example": "cloud_ssd",
          "title": "数据盘类型",
          "type": "string"
        },
        "encrypted": {
          "description": "是否对数据盘加密。取值：\n\n- `true`：对数据盘加密。\n- `false`：不对数据盘加密。\n\n默认值：`false`。",
          "example": "true",
          "title": "是否对数据盘加密。",
          "type": "string"
        },
        "file_system": {
          "description": "挂载文件系统类型。auto_format为true时生效，可选值：[ext4,xfs]",
          "example": "ext4",
          "title": "挂载文件系统类型。auto_format为true时生效，可选值：[ext4,xfs]",
          "type": "string"
        },
        "mount_target": {
          "description": "挂载路径。auto_format为true时生效",
          "example": "/mnt/path1",
          "title": "挂载路径。auto_format为true时生效",
          "type": "string"
        },
        "performance_level": {
          "description": "节点数据盘磁盘性能等级，仅对ESSD磁盘生效。磁盘性能等级和磁盘大小有关。更多信息，请参见[ESSD云盘](https://help.aliyun.com/document_detail/122389.html)。",
          "example": "PL1",
          "title": "数据盘磁盘性能，只针对ESSD磁盘生效",
          "type": "string"
        },
        "provisioned_iops": {
          "description": "数据盘预配置的读写IOPS，磁盘类型为cloud_auto时配置。",
          "example": "1000",
          "format": "int64",
          "title": "数据盘预配置的读写IOPS，磁盘类型为cloud_auto时配置。",
          "type": "integer"
        },
        "size": {
          "description": "数据盘大小，单位为GiB。\n\n取值范围：\\[40,32768\\]。\n\n默认值：`120`。",
          "example": "40",
          "format": "int64",
          "title": "数据盘大小，取值范围：40～32767",
          "type": "integer"
        }
      },
      "title": "节点数据盘配置",
      "type": "object"
    },
    "kubelet_config": {
      "description": "支持的kubelet配置",
      "properties": {
        "allowedUnsafeSysctls": {
          "description": "允许的sysctl模式白名单。",
          "items": {
            "type": "string"
          },
          "title": "允许的sysctl模式白名单。",
          "type": "array"
        },
        "containerLogMaxFiles": {
          "description": "每个容器可以存在的日志文件个数上限。",
          "example": "5",
          "format": "int64",
          "title": "每个容器可以存在的日志文件个数上限。",
          "type": "integer"
        },
        "containerLogMaxSize": {
          "description": "日志文件被轮转之前可以到达的最大大小。",
          "example": "10Mi",
          "title": "日志文件被轮转之前可以到达的最大大小。",
          "type": "string"
        },
        "cpuManagerPolicy": {
          "description": "CPU管理器策略。",
          "example": "none",
          "title": "CPU管理器策略。",
          "type": "string"
        },
        "eventBurst": {
          "description": "事件记录的个数的突发峰值上限。",
          "example": "10",
          "format": "int64",
          "title": "事件记录的个数的突发峰值上限。",
          "type": "integer"
        },
        "eventRecordQPS": {
          "description": "每秒可生成的事件数量。",
          "example": "5",
          "format": "int64",
          "title": "每秒可生成的事件数量。",
          "type": "integer"
        },
        "evictionHard": {
          "description": "触发Pod驱逐操作的一组硬性门限。",
          "title": "触发Pod驱逐操作的一组硬性门限。",
          "type": "object"
        },
        "evictionSoft": {
          "description": "设置一组驱逐阈值。",
          "title": "设置一组驱逐阈值。",
          "type": "object"
        },
        "evictionSoftGracePeriod": {
          "description": "设置一组驱逐宽限期。",
          "title": "设置一组驱逐宽限期。",
          "type": "object"
        },
        "featureGates": {
          "description": "特性开关，用来开启实验性功能的配置。",
          "title": "特性开关，用来开启实验性功能的配置。",
          "type": "object"
        },
        "kubeAPIBurst": {
          "description": "每秒发送到API Server的突发请求数量上限。",
          "example": "10",
          "format": "int64",
          "title": "每秒发送到API Server的突发请求数量上限。",
          "type": "integer"
        },
        "kubeAPIQPS": {
          "description": "与API Server通信的每秒查询个数。",
          "example": "5",
          "format": "int64",
          "title": "与API Server通信的每秒查询个数。",
          "type": "integer"
        },
        "kubeReserved": {
          "description": "kubernetes系统预留的资源配置。",
          "title": "kubernetes系统预留的资源配置。",
          "type": "object"
        },
        "maxPods": {
          "description": "运行的Pod个数上限。",
          "example": "110",
          "format": "int64",
          "title": "运行的Pod个数上限。",
          "type": "integer"
        },
        "readOnlyPort": {
          "description": "只读端口号。",
          "example": "0",
          "format": "int64",
          "title": "只读端口号。",
          "type": "integer"
        },
        "registryBurst": {
          "description": "突发性镜像拉取的个数上限。",
          "example": "10",
          "format": "int64",
          "title": "突发性镜像拉取的个数上限。",
          "type": "integer"
        },
        "registryPullQPS": {
          "description": "镜像仓库的QPS上限。",
          "example": "5",
          "format": "int64",
          "title": "镜像仓库的QPS上限。",
          "type": "integer"
        },
        "serializeImagePulls": {
          "description": "是否逐一拉取镜像。",
          "example": "true",
          "title": "是否逐一拉取镜像。",
          "type": "boolean"
        },
        "systemReserved": {
          "description": "系统预留的资源配置。",
          "title": "系统预留的资源配置。",
          "type": "object"
        }
      },
      "title": "Kubelet参数配置。",
      "type": "object"
    },
    "maintenance_window": {
      "description": "集群维护窗口。",
      "properties": {
        "duration": {
          "description": "维护时长。取值范围\\[1,24\\]，单位为小时。\n\n默认值：3h。",
          "example": "3h",
          "title": "维护时长。取值范围1～24，单位为小时。 默认值：3h。",
          "type": "string"
        },
        "enable": {
          "description": "是否开启维护窗口。取值：\n- `true`：开启维护窗口。\n- `false`：不开启维护窗口。\n\n默认值：`false`。",
          "example": "false",
          "title": "是否开启维护窗口。默认值false。",
          "type": "boolean"
        },
        "maintenance_time": {
          "description": "维护起始时间。Golang标准时间格式，例如15:04:05Z。",
          "example": "03:00:00Z",
          "title": "维护起始时间。Golang标准时间格式\"15:04:05Z\"。",
          "type": "string"
        },
        "weekly_period": {
          "description": "维护周期，多个值用英文半角逗号（,）分隔。取值：{Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday}\n\n默认值：`Thursday`。",
          "example": "Monday,Thursday",
          "title": "维护周期。取值范围为:Monday~Sunday，多个值用逗号分隔。 默认值：Thursday。",
          "type": "string"
        }
      },
      "title": "集群维护窗口。",
      "type": "object"
    },
    "nodepool": {
      "description": "节点池。",
      "properties": {
        "auto_scaling": {
          "description": "自动伸缩节点池配置。",
          "properties": {
            "eip_bandwidth": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\nEIP带宽峰值。单位：Mbps。",
              "example": "5",
              "format": "int64",
              "title": "带宽峰值。",
              "type": "integer"
            },
            "eip_internet_charge_type": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\nEIP计费类型，取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。\n\n默认值：PayByBandwidth。",
              "example": "PayByBandwidth",
              "title": "EIP实例规格。",
              "type": "string"
            },
            "enable": {
              "description": "是否启用自动伸缩。\n\n- `true`：开启节点池自动伸缩功能。\n- `false`：不开启自动伸缩，当取值为false时，`auto_scaling`内的其他配置参数将不生效。\n\n默认值：`false`。",
              "example": "true",
              "required": true,
              "title": "是否开启自动伸缩。",
              "type": "boolean"
            },
            "is_bond_eip": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n是否绑定EIP，取值：\n\n- `true`：绑定EIP。\n- `false`：不绑定EIP。\n\n默认值：`false`。",
              "example": "true",
              "title": "是否绑定EIP。",
              "type": "boolean"
            },
            "max_instances": {
              "description": "自动伸缩组最大实例数。",
              "example": "10",
              "format": "int64",
              "required": true,
              "title": "最大实例数。",
              "type": "integer"
            },
            "min_instances": {
              "description": "自动伸缩组最小实例数。",
              "example": "0",
              "format": "int64",
              "required": true,
              "title": "最小实例数。",
              "type": "integer"
            },
            "type": {
              "description": "自动伸缩类型，按照自动伸缩实例类型划分。取值：\n\n- `cpu`：普通实例型。\n- `gpu`：GPU实例型。\n- `gpushare`：GPU共享型。\n- `spot`：抢占式实例型。\n\n默认值：`cpu`。",
              "example": "cpu",
              "title": "扩容节点类型。",
              "type": "string"
            }
          },
          "title": "自动伸缩节点池配置。",
          "type": "object"
        },
        "count": {
          "deprecated": true,
          "description": "【该字段已废弃，请使用desired_size代替】\n\n节点池节点数量。",
          "example": "1",
          "format": "int64",
          "title": "节点数量。",
          "type": "integer"
        },
        "interconnect_config": {
          "deprecated": true,
          "description": "【该字段已废弃】\n\n边缘节点池配置。",
          "properties": {
            "bandwidth": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n边缘增强型节点池的网络带宽，单位：Mbps。",
              "example": "10",
              "format": "int64",
              "title": "边缘增强型节点池的网络带宽，单位M。",
              "type": "integer"
            },
            "ccn_id": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例ID(CCNID)。",
              "example": "ccn-qm5i0i0q9yi*******",
              "title": "边缘增强型节点池绑定的云连接网实例ID(CCNID)",
              "type": "string"
            },
            "ccn_region_id": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云连接网实例所属的地域。",
              "example": "cn-shanghai",
              "title": "边缘增强型节点池绑定的云连接网实例所属的区域",
              "type": "string"
            },
            "cen_id": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n边缘增强型节点池绑定的云企业网实例ID(CENID)。",
              "example": "cen-ey9k9nfhz0f*******",
              "title": "边缘增强型节点池绑定的云企业网实例ID(CENID)",
              "type": "string"
            },
            "improved_period": {
              "deprecated": true,
              "description": "【该字段已废弃】\n\n边缘增强型节点池的购买时长，单位：月。",
              "example": "1",
              "title": "边缘增强型节点池的购买时长，单位月",
              "type": "string"
            }
          },
          "title": "边缘节点池网络相关的配置。该值只对edge类型的节点池有意义",
          "type": "object"
        },
        "interconnect_mode": {
          "description": "边缘节点池的网络类型，该值只对`type`为`edge`类型的节点池有意义，取值范围：\n\n- `basic`：基础型。\n- `improved`：增强型。\n- `private`: 专用型。1.22及以上版本支持。",
          "example": "basic",
          "title": "边缘节点池的网络类型。basic：基础型；improved：增强型。该值只对edge类型的节点池有意义。",
          "type": "string"
        },
        "kubernetes_config": {
          "description": "集群相关配置。",
          "properties": {
            "cms_enabled": {
              "description": "是否在ECS节点上安装云监控，安装后可以在云监控控制台查看所创建ECS实例的监控信息，推荐开启。取值：\n\n- `true`：在ECS节点上安装云监控。\n- `false`：不在ECS节点上安装云监控。\n\n默认值：`false`。",
              "example": "true",
              "title": "是否开启云监控。",
              "type": "boolean"
            },
            "cpu_policy": {
              "description": "节点CPU管理策略。当集群版本在1.12.6及以上时支持以下两种策略：\n\n- `static`：允许为节点上具有某些资源特征Pod增强其CPU亲和性和独占性。\n- `none`：表示启用现有的默认CPU亲和性方案。\n\n默认值：`none`。",
              "example": "none",
              "title": "CPU管理策略。",
              "type": "string"
            },
            "labels": {
              "description": "节点标签，为Kubernetes集群节点添加标签。",
              "items": {
                "$ref": "#/definitions/tag",
                "description": "节点标签。",
                "isDefsType": true,
                "typeName": "tag"
              },
              "title": "节点标签。",
              "type": "array"
            },
            "node_name_mode": {
              "description": "节点名称由三部分组成：前缀 + 节点 IP + 后缀：\n\n- 前缀和后缀均可由“.”分隔的一个或多个部分构成，每个部分可以使用小写字母、数字和“-”，节点名称首尾必须为小写字母和数字；\n- 节点 IP为完整的节点私网 IP 地址；\n\n传参包含四个部分，由逗号分隔，例如：参数传入\"customized,aliyun,ip,com\"字符串（其中“customized”和\"ip\"为固定的字符串，aliyun为前缀，com为后缀），则节点的名称为：aliyun.192.168.xxx.xxx.com。",
              "example": "customized,aliyun,ip,com",
              "title": "自定义节点名称",
              "type": "string"
            },
            "runtime": {
              "description": "容器运行时。取值：\n- `containerd`：推荐使用，支持所有集群版本。\n- `Sandboxed-Container.runv`：安全沙箱容器，提供更高的隔离性，支持1.24版本及以下集群。\n- `docker`：支持1.22版本及以下集群。\n\n默认值：`containerd`",
              "example": "containerd",
              "required": true,
              "title": "容器运行时。",
              "type": "string"
            },
            "runtime_version": {
              "description": "容器运行时版本。",
              "example": "1.6.20",
              "required": true,
              "title": "容器运行时版本。",
              "type": "string"
            },
            "taints": {
              "description": "污点配置。",
              "items": {
                "$ref": "#/definitions/taint",
                "description": "污点配置。",
                "isDefsType": true,
                "typeName": "taint"
              },
              "title": "污点信息。",
              "type": "array"
            },
            "user_data": {
              "description": "节点自定义数据。",
              "example": "MXM=",
              "title": "节点自定义数据。",
              "type": "string"
            }
          },
          "title": "集群配置。",
          "type": "object"
        },
        "management": {
          "description": "托管节点池配置。",
          "properties": {
            "auto_repair": {
              "description": "自动修复，仅当`enable=true`时生效。\n\n- `true`：自动修复。\n- `false`：不自动修复。",
              "example": "false",
              "title": "是否启用自动修复。",
              "type": "boolean"
            },
            "enable": {
              "description": "是否开启托管版节点池，取值：\n\n- `true`：开启托管节点池。\n- `false`：不开启托管节点池，只有当`enable=true`时，其他相关配置才生效。",
              "example": "false",
              "required": true,
              "title": "是否启用托管节点池。",
              "type": "boolean"
            },
            "upgrade_config": {
              "description": "自动升级配置，仅当`enable=true`时生效。",
              "properties": {
                "auto_upgrade": {
                  "description": "是否启用自动升级，取值：\n\n- `true`：启用自动升级。\n- `false`：不启用自动升级。",
                  "example": "false",
                  "title": "是否启用自动升级",
                  "type": "boolean"
                },
                "max_unavailable": {
                  "description": "最大不可用节点数量，取值范围：\\[1,1000\\]。\n\n默认值：1。",
                  "example": "0",
                  "format": "int64",
                  "required": true,
                  "title": "最大不可用节点数量。",
                  "type": "integer"
                },
                "surge": {
                  "description": "额外节点数量。",
                  "example": "0",
                  "format": "int64",
                  "title": "额外节点数量。",
                  "type": "integer"
                },
                "surge_percentage": {
                  "description": "额外节点比例，和`surge`二选一。",
                  "example": "0",
                  "format": "int64",
                  "title": "额外节点比例。和surge二选一。",
                  "type": "integer"
                }
              },
              "title": "自动升级配置。",
              "type": "object"
            }
          },
          "title": "托管节点池配置。",
          "type": "object"
        },
        "max_nodes": {
          "description": "边缘节点池允许容纳的最大节点数量，该参数大于等于0。0表示无额外限制（仅受限于集群整体可以容纳的节点数，节点池本身无额外限制）。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0。",
          "example": "10",
          "format": "int64",
          "title": "边缘节点池允许容纳的最大节点数量. 节点池内可以容纳的最大节点数量，该参数大于等于0。0表示无额外限制(仅受限于集群整体可以容纳的节点数，节点池本身无额外限制)。边缘节点池该参数值往往大于0；ess类型节点池和默认的edge类型节点池该参数值为0。",
          "type": "integer"
        },
        "nodepool_info": {
          "description": "节点池配置。",
          "properties": {
            "name": {
              "description": "节点池名称。",
              "example": "np-test",
              "required": true,
              "title": "节点池名称",
              "type": "string"
            },
            "resource_group_id": {
              "description": "节点池所在资源ID。",
              "example": "rg-acfmyvw3wjm****",
              "required": false,
              "title": "资源组ID。",
              "type": "string"
            },
            "type": {
              "description": "节点池类型，取值范围：\n\n- `ess`：节点池。\n- `edge`：边缘节点池。",
              "example": "ess",
              "title": "节点池类型，对于边缘节点池来说，类型为\"edge\"",
              "type": "string"
            }
          },
          "title": "节点池配置。",
          "type": "object"
        },
        "scaling_group": {
          "description": "节点池扩容组配置。",
          "properties": {
            "auto_renew": {
              "description": "节点池是否开启自动续费，当`instance_charge_type`取值为`PrePaid`时才生效，取值：\n\n- `true`：自动续费。\n- `false`：不自动续费。\n\n默认值：`true`。",
              "example": "false",
              "title": "节点是否开启自动续费",
              "type": "boolean"
            },
            "auto_renew_period": {
              "description": "节点池自动续费周期。当`instance_charge_type`取值为`PrePaid`时才生效，且为必选值。\n\n当`PeriodUnit=Month`时，取值范围：{1, 2, 3, 6, 12}。\n\n默认值：1。",
              "example": "0",
              "format": "int64",
              "title": "节点自动续费周期",
              "type": "integer"
            },
            "compensate_with_on_demand": {
              "description": "当`multi_az_policy`取值为`COST_OPTIMIZED`时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值：\n\n- `true`：允许自动尝试创建按量实例满足ECS实例数量要求。\n- `false`：不允许自动尝试创建按量实例满足ECS实例数量要求。",
              "example": "true",
              "title": "当MultiAZPolicy取值为COST_OPTIMIZED时，如果因价格、库存等原因无法创建足够的抢占式实例，是否允许自动尝试创建按量实例满足ECS实例数量要求。取值范围：true：允许。false：不允许。默认值：true",
              "type": "boolean"
            },
            "data_disks": {
              "description": "节点池节点数据盘配置。",
              "items": {
                "$ref": "#/definitions/data_disk",
                "description": "节点池节点数据盘配置。",
                "isDefsType": true,
                "typeName": "data_disk"
              },
              "title": "数据盘配置。",
              "type": "array"
            },
            "deploymentset_id": {
              "description": "部署集ID。",
              "example": "ds-bp1d19mmbsv3jf6xxxxx",
              "title": "部署集ID。",
              "type": "string"
            },
            "desired_size": {
              "description": "节点池期望节点数量。",
              "example": "2",
              "format": "int64",
              "title": "姐弟池期望节点数",
              "type": "integer"
            },
            "image_id": {
              "description": "自定义镜像ID，默认使用系统提供的镜像。",
              "example": "aliyun_2_1903_x64_20G_alibase_20200904.vhd",
              "title": "自定义镜像。",
              "type": "string"
            },
            "image_type": {
              "description": "操作系统镜像类型，和platform参数二选一，取值范围：\n\n- `AliyunLinux`：Alinux2镜像。\n- `AliyunLinux3`：Alinux3镜像。\n- `AliyunLinux3Arm64`：Alinux3镜像ARM版。\n- `AliyunLinuxUEFI`：Alinux2镜像UEFI版。\n- `CentOS`：CentOS镜像。\n- `Windows`：Windows镜像。\n- `WindowsCore`：WindowsCore镜像。\n- `ContainerOS`：容器优化镜像。",
              "example": "AliyunLinux",
              "title": "操作系统镜像类型，和platform二选一",
              "type": "string"
            },
            "instance_charge_type": {
              "description": "节点池节点付费类型，取值：\n\n- `PrePaid`：预付费。\n- `PostPaid`：按量付费。\n\n默认值：`PostPaid`。",
              "example": "PostPaid",
              "required": true,
              "title": "节点付费类型",
              "type": "string"
            },
            "instance_types": {
              "description": "实例规格。",
              "items": {
                "description": "实例规格。",
                "example": "ecs.n1.medium",
                "type": "string"
              },
              "required": true,
              "title": "实例规格。",
              "type": "array"
            },
            "internet_charge_type": {
              "description": "公网IP收费类型。取值：\n\n- `PayByBandwidth`：按固定带宽计费。\n- `PayByTraffic`：按使用流量计费。",
              "example": "PayByBandwidth",
              "title": "节点公网IP网络计费类型",
              "type": "string"
            },
            "internet_max_bandwidth_out": {
              "description": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：[1,100]",
              "example": "10",
              "format": "int64",
              "title": "节点公网IP出带宽最大值，单位为Mbps（Mega bit per second），取值范围：1~100",
              "type": "integer"
            },
            "key_pair": {
              "description": "密钥对名称，和`login_password`二选一。\n\n> 如果创建托管节点池，则只支持`key_pair`。",
              "example": "np-key",
              "required": false,
              "title": "密钥对名称，和login_password二选一。",
              "type": "string"
            },
            "login_password": {
              "description": "SSH登录密码，和`key_pair`二选一。密码规则为8~30个字符，且至少同时包含三项（大小写字母、数字和特殊符号）。",
              "example": "Hello1234",
              "required": false,
              "title": "SSH登录密码。",
              "type": "string"
            },
            "multi_az_policy": {
              "description": "多可用区伸缩组ECS实例扩缩容策略。取值：\n\n- `PRIORITY`：根据您定义的虚拟交换机（VSwitchIds.N）扩缩容。当优先级较高的虚拟交换机所在可用区无法创建ECS实例时，自动使用下一优先级的虚拟交换机创建ECS实例。\n\n- `COST_OPTIMIZED`：按vCPU单价从低到高进行尝试创建。当伸缩配置设置了抢占式计费方式的多实例规格时，优先创建对应抢占式实例。您可以继续通过`CompensateWithOnDemand`参数指定当抢占式实例由于库存等原因无法创建时，是否自动尝试以按量付费的方式创建。\n\n  >`COST_OPTIMIZED`仅在伸缩配置设置了多实例规格或者选用了抢占式实例的情况下生效。\n\n- `BALANCE`：在伸缩组指定的多可用区之间均匀分配ECS实例。如果由于库存不足等原因可用区之间变得不平衡，您可以通过API RebalanceInstances平衡资源。更多信息，请参见[RebalanceInstances](https://help.aliyun.com/document_detail/71516.html)。\n\n默认值：`PRIORITY`。",
              "example": "COST_OPTIMIZED",
              "title": "多可用区伸缩组ECS实例扩缩容策略",
              "type": "string"
            },
            "on_demand_base_capacity": {
              "description": "伸缩组所需要按量实例个数的最小值，取值范围：[0,1000]。当按量实例个数少于该值时，将优先创建按量实例。",
              "example": "0",
              "format": "int64",
              "title": "伸缩组所需要按量实例个数的最小值，取值范围：0~1000。当按量实例个数少于该值时，将优先创建按量实例。",
              "type": "integer"
            },
            "on_demand_percentage_above_base_capacity": {
              "description": "伸缩组满足最小按量实例数（`on_demand_base_capacity`）要求后，超出的实例中按量实例应占的比例。取值范围：[0,100]。",
              "example": "20",
              "format": "int64",
              "title": "伸缩组满足最小按量实例数（OnDemandBaseCapacity）要求后，超出的实例中按量实例应占的比例，取值范围：0～100。",
              "type": "integer"
            },
            "period": {
              "description": "节点池节点包年包月时长，当`instance_charge_type`取值为`PrePaid`时才生效且为必选值，取值范围：`period_unit`取值为Month时，`period`取值范围：{ 1, 2, 3, 6, 12}。\n\n默认值：1。",
              "example": "0",
              "format": "int64",
              "title": "节点包年包月时长。",
              "type": "integer"
            },
            "period_unit": {
              "description": "节点池节点付费周期，当`instance_charge_type`取值为`PrePaid`时需要指定周期。\n\n`Month`：目前只支持以月为单位。",
              "example": "Month",
              "title": "节点包年包月周期。",
              "type": "string"
            },
            "platform": {
              "description": "操作系统发行版。取值：\n\n- `CentOS`\n- `AliyunLinux`\n- `Windows`\n- `WindowsCore`\n\n默认值：`AliyunLinux`。",
              "example": "AliyunLinux",
              "required": false,
              "title": "操作系统发行版，和image_type二选一",
              "type": "string"
            },
            "private_pool_options": {
              "description": "私有节点池配置。",
              "properties": {
                "id": {
                  "description": "私有节点池ID。",
                  "example": "eap-bp67acfmxazb4****",
                  "title": "私有节点池ID。",
                  "type": "string"
                },
                "match_criteria": {
                  "description": "私有节点池类型，实例启动的私有池容量选项。弹性保障服务或容量预定服务在生效后会生成私有池容量，供实例启动时选择。取值：\n\n- `Open`：开放模式。将自动匹配开放类型的私有池容量。如果没有符合条件的私有池容量，则使用公共池资源启动。\n\n- `Target`：指定模式。使用指定的私有池容量启动实例，如果该私有池容量不可用，则实例会启动失败。\n\n- `None`：不使用模式。实例启动将不使用私有池容量。",
                  "example": "Open",
                  "title": "私有节点池类型。",
                  "type": "string"
                }
              },
              "title": "私有节点池配置。",
              "type": "object"
            },
            "rds_instances": {
              "description": "RDS实例列表。",
              "items": {
                "description": "RDS实例ID。",
                "example": "rm-2zey3t89t6280****",
                "type": "string"
              },
              "title": "RDS实例列表。",
              "type": "array"
            },
            "scaling_policy": {
              "description": "伸缩组模式，取值：\n\n- `release`：标准模式，根据申请资源值的使用量，通过创建、释放ECS的方式进行伸缩。\n- `recycle`：极速模式，通过创建、停机、启动的方式进行伸缩，提高再次伸缩的速度（停机时计算资源不收费，只收取存储费用，本地盘机型除外）。\n\n默认值：`release`。",
              "example": "release",
              "title": "自动伸缩。",
              "type": "string"
            },
            "security_group_id": {
              "description": "节点池安全组ID，与`security_group_ids`二选一，推荐使用`security_group_ids`。",
              "example": "sg-2zeihch86ooz9io4****",
              "required": false,
              "title": "安全组ID。",
              "type": "string"
            },
            "security_group_ids": {
              "description": "安全组ID列表，与`security_group_id`二选一，推荐使用`security_group_ids`，当同时指定`security_group_id`和`security_group_ids`将优先使用`security_group_ids`。",
              "items": {
                "description": "安全组ID。",
                "example": "sg-2zeihch86ooz9io4****",
                "type": "string"
              },
              "title": "多安全组ID",
              "type": "array"
            },
            "spot_instance_pools": {
              "description": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：[1,10]。",
              "example": "5",
              "format": "int64",
              "title": "指定可用实例规格的个数，伸缩组将按成本最低的多个规格均衡创建抢占式实例。取值范围：1~10。",
              "type": "integer"
            },
            "spot_instance_remedy": {
              "description": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。取值：\n\n- `true`：开启补齐抢占式实例。\n- `false`：不开启补齐抢占式实例。",
              "example": "false",
              "title": "是否开启补齐抢占式实例。开启后，当收到抢占式实例将被回收的系统消息时，伸缩组将尝试创建新的实例，替换掉将被回收的抢占式实例。",
              "type": "boolean"
            },
            "spot_price_limit": {
              "description": "当前单台抢占式实例规格市场价格区间配置。",
              "items": {
                "properties": {
                  "instance_type": {
                    "description": "抢占式实例规格。",
                    "example": "ecs.c6.large",
                    "title": "抢占实例规格。",
                    "type": "string"
                  },
                  "price_limit": {
                    "description": "单台实例上限价格。\n",
                    "example": "0.39",
                    "title": "抢占实例单价。",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": "抢占实例价格上限配置。",
              "type": "array"
            },
            "spot_strategy": {
              "description": "抢占式实例类型，取值：\n- NoSpot：非抢占式实例。\n- SpotWithPriceLimit：设置抢占实例价格上限。\n- SpotAsPriceGo：系统自动出价，跟随当前市场实际价格。\n\n更多信息，请参见[抢占式实例](https://help.aliyun.com/document_detail/157759.html)。",
              "example": "NoSpot",
              "title": "抢占式实例类型",
              "type": "string"
            },
            "system_disk_bursting_enabled": {
              "description": "节点系统盘是否开启Burst（性能突发）。 取值：\n\n- true：是。\n- false：否。\n\n当`SystemDiskCategory`取值为`cloud_auto`时才支持设置该参数。更多信息，请参见[ESSD AutoPL云盘](https://help.aliyun.com/document_detail/368372.html)。",
              "example": "true",
              "title": "节点系统盘是否开启Burst（性能突发），磁盘类型为cloud_auto时配置。",
              "type": "boolean"
            },
            "system_disk_category": {
              "description": "节点系统盘类型，取值：\n\n- `cloud_efficiency`：高效云盘。\n- `cloud_ssd`：SSD云盘。\n- `cloud_essd`：ESSD云盘。\n- `cloud_auto`：ESSD AutoPL云盘。\n\n默认值：`cloud_efficiency`。",
              "example": "cloud_efficiency",
              "required": true,
              "title": "节点系统盘类型。",
              "type": "string"
            },
            "system_disk_performance_level": {
              "description": "节点系统盘磁盘性能，只对ESSD磁盘生效。\n\n- PL0：并发极限I/O性能中等，读写时延较为稳定。\n- PL1：并发极限I/O性能中等，读写时延较为稳定。\n- PL2：并发极限I/O性能较高，读写时延稳定。\n- PL3：并发极限I/O性能极高，读写时延极稳定。",
              "example": "PL1",
              "title": "节点系统盘磁盘性能，只针对ESSD磁盘生效",
              "type": "string"
            },
            "system_disk_provisioned_iops": {
              "description": "节点系统盘预配置的读写IOPS。可能值：0~min{50,000, 1000\\*容量-基准性能}。 基准性能=min{1,800+50\\*容量, 50000}。\n\n当`SystemDiskCategory`为`cloud_auto`时才支持设置该参数。更多信息，请参见[ESSD AutoPL云盘](https://help.aliyun.com/document_detail/368372.html)。",
              "example": "1000",
              "format": "int64",
              "title": "节点系统盘预配置的读写IOPS，磁盘类型为cloud_auto时配置。",
              "type": "integer"
            },
            "system_disk_size": {
              "description": "节点系统盘大小，单位：GiB。\n\n取值范围：[40,500]。",
              "example": "120",
              "format": "int64",
              "required": true,
              "title": "节点系统盘大小。",
              "type": "integer"
            },
            "tags": {
              "description": "仅为ECS实例添加标签。\n\n标签键不可以重复，最大长度为128个字符；标签键和标签值都不能以“aliyun”、“acs:”开头，或包含“https://”、“http://”。",
              "items": {
                "properties": {
                  "key": {
                    "description": "标签的名称。",
                    "example": "key",
                    "title": "key",
                    "type": "string"
                  },
                  "value": {
                    "description": "标签值。",
                    "example": "value",
                    "title": "value",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": "ECS标签",
              "type": "array"
            },
            "vswitch_ids": {
              "description": "虚拟交换机ID。",
              "items": {
                "description": "虚拟交换机ID。",
                "example": "vsw-2ze0fmpbwo140ahni****",
                "type": "string"
              },
              "required": true,
              "title": "虚拟交换机ID。",
              "type": "array"
            }
          },
          "title": "伸缩组配置。",
          "type": "object"
        },
        "tee_config": {
          "description": "加密计算节点池配置。",
          "properties": {
            "tee_enable": {
              "description": "是否为加密计算节点池。",
              "example": "false",
              "required": true,
              "title": "是否为加密计算节点池。",
              "type": "boolean"
            }
          },
          "title": "加密计算节点池配置。",
          "type": "object"
        }
      },
      "title": "节点池信息。",
      "type": "object"
    },
    "runtime": {
      "description": "容器引擎。",
      "properties": {
        "name": {
          "description": "容器运行时名称，ACK支持以下三种容器运行时。\n\n- `Sandboxed-Container.runv`：安全沙箱容器，提供更高的隔离性。\n- `docker`。\n- `containerd`。\n\n\n默认：`docker`。",
          "example": "docker",
          "title": "容器运行时名称",
          "type": "string"
        },
        "version": {
          "description": "容器运行时版本，默认为最新版。\n\n关于安全沙箱运行时的变更详情，请参见[安全沙箱运行时变更记录](https://help.aliyun.com/document_detail/160312.html)。",
          "example": "19.03.5",
          "title": "容器运行时版本",
          "type": "string"
        }
      },
      "title": "容器运行时配置",
      "type": "object"
    },
    "tag": {
      "description": "标签配置。",
      "properties": {
        "key": {
          "description": "标签`key`值。",
          "example": "env",
          "title": "key值。",
          "type": "string"
        },
        "value": {
          "description": "标签`value`值。",
          "example": "prod",
          "title": "value值。",
          "type": "string"
        }
      },
      "title": "集群Tag配置",
      "type": "object"
    },
    "taint": {
      "description": "节点污点配置。",
      "properties": {
        "effect": {
          "description": "调度策略。取值：\n\n- `NoSchedule`：不能容忍，但仅影响调度过程，已被调度的Pod不受影响，仅对新增加的Pod生效。\n\n- `NoExecute`：不能容忍，当污点变动时，Pod对象会被驱逐。\n\n- `PreferNoSchedule`：柔性约束，节点现存Pod不受影响。尽量不去满足不合要求的Pod调度到节点上。\n\n默认策略：`NoSchedule`。",
          "example": "NoSchedule",
          "title": "污点生效策略。",
          "type": "string"
        },
        "key": {
          "description": "污点`key`值。",
          "example": "key",
          "title": "key值。",
          "type": "string"
        },
        "value": {
          "description": "污点`value`值。",
          "example": "value",
          "title": "value值。",
          "type": "string"
        }
      },
      "title": "节点污点配置",
      "type": "object"
    }
  },
  "directories": [],
  "ext": {
    "directories": [
      {
        "children": [
          "DescribeTaskInfo",
          "PauseTask",
          "ResumeTask",
          "CancelTask",
          "DescribeClusterTasks"
        ],
        "id": 187251,
        "title": "任务",
        "type": "directory"
      },
      {
        "children": [
          "DescribeExternalAgent"
        ],
        "id": 187252,
        "title": "废弃",
        "type": "directory"
      },
      {
        "children": [
          "DescribeEvents",
          "DescribeClusterEvents"
        ],
        "id": 159652,
        "title": "事件",
        "type": "directory"
      },
      {
        "children": [
          "DeleteAlertContact",
          "DeleteAlertContactGroup",
          "StartAlert",
          "StopAlert",
          "UpdateContactGroupForAlert"
        ],
        "id": 159654,
        "title": "报警",
        "type": "directory"
      },
      {
        "children": [
          "OpenAckService",
          "GrantPermissions",
          "DescribeUserPermission"
        ],
        "id": 159660,
        "title": "权限",
        "type": "directory"
      },
      {
        "children": [
          "StartWorkflow",
          "RemoveWorkflow",
          "CancelWorkflow",
          "DescirbeWorkflow",
          "DescribeWorkflows"
        ],
        "id": 159664,
        "title": "工作流",
        "type": "directory"
      },
      {
        "children": [
          "CreateCluster",
          "DeleteCluster",
          "DescribeClusterDetail",
          "DescribeClusters",
          "DescribeClustersV1",
          "ModifyCluster",
          "MigrateCluster",
          "DescribeClusterResources",
          "DescribeClusterLogs",
          "DescribeClusterUserKubeconfig",
          "DescribeClusterV2UserKubeconfig",
          "DescribeSubaccountK8sClusterUserConfig",
          "DescribeUserClusterNamespaces",
          "UpdateK8sClusterUserConfigExpire",
          "ScanClusterVuls",
          "DescribeClusterVuls",
          "RunClusterCheck",
          "GetClusterCheck",
          "ListClusterChecks",
          "CheckControlPlaneLogEnable",
          "UpdateControlPlaneLog"
        ],
        "id": 159670,
        "title": "集群",
        "type": "directory"
      },
      {
        "children": [
          "DescribeClusterNodes",
          "DeleteClusterNodes",
          "AttachInstances",
          "DescribeClusterAttachScripts"
        ],
        "id": 159692,
        "title": "节点",
        "type": "directory"
      },
      {
        "children": [
          "CreateClusterNodePool",
          "DeleteClusterNodepool",
          "DescribeClusterNodePoolDetail",
          "DescribeClusterNodePools",
          "DescribeNodePoolVuls",
          "ModifyClusterNodePool",
          "ScaleClusterNodePool",
          "AttachInstancesToNodePool",
          "RemoveNodePoolNodes",
          "UpgradeClusterNodepool",
          "RepairClusterNodePool",
          "FixNodePoolVuls",
          "ModifyNodePoolNodeConfig",
          "SyncClusterNodePool",
          "CreateAutoscalingConfig"
        ],
        "id": 159698,
        "title": "节点池",
        "type": "directory"
      },
      {
        "children": [
          "UpgradeCluster",
          "PauseClusterUpgrade",
          "ResumeUpgradeCluster",
          "CancelClusterUpgrade",
          "GetUpgradeStatus"
        ],
        "id": 159706,
        "title": "升级",
        "type": "directory"
      },
      {
        "children": [
          "CreateTemplate",
          "DeleteTemplate",
          "UpdateTemplate",
          "DescribeTemplates",
          "DescribeTemplateAttribute"
        ],
        "id": 159720,
        "title": "编排模版",
        "type": "directory"
      },
      {
        "children": [
          "CreateTrigger",
          "DeleteTrigger",
          "DescribeTrigger",
          "CreateKubernetesTrigger",
          "DeleteKubernetesTrigger",
          "GetKubernetesTrigger"
        ],
        "id": 159726,
        "title": "触发器",
        "type": "directory"
      },
      {
        "children": [
          "InstallClusterAddons",
          "UnInstallClusterAddons",
          "ModifyClusterAddon",
          "DescribeClusterAddonInstance",
          "DescribeClusterAddonMetadata",
          "UpgradeClusterAddons",
          "PauseComponentUpgrade",
          "ResumeComponentUpgrade",
          "CancelComponentUpgrade",
          "DescribeClusterAddonUpgradeStatus",
          "DescribeClusterAddonsUpgradeStatus",
          "DescribeAddons",
          "DescribeClusterAddonsVersion"
        ],
        "id": 159734,
        "title": "组件",
        "type": "directory"
      },
      {
        "children": [
          "UntagResources",
          "TagResources",
          "ModifyClusterTags",
          "ListTagResources"
        ],
        "id": 159745,
        "title": "标签",
        "type": "directory"
      },
      {
        "children": [
          "DeletePolicyInstance",
          "ModifyPolicyInstance",
          "DescribePolicies",
          "DescribePolicyDetails",
          "DescribePolicyGovernanceInCluster",
          "DescribePolicyInstances",
          "DescribePolicyInstancesStatus",
          "DeployPolicyInstance"
        ],
        "id": 159750,
        "title": "策略治理",
        "type": "directory"
      },
      {
        "children": [
          "DescribeKubernetesVersionMetadata",
          "DescribeUserQuota"
        ],
        "id": 187255,
        "title": "其他",
        "type": "directory"
      }
    ],
    "popcode": "CS",
    "style": "ROA",
    "version": "2015-12-15"
  },
  "name": "CS"
}